{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment Sarasvati  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.2-4 \par
}}Sarasvati}
{\comment Dibangkitkan olehDoxgyen. }
{\creatim \yr2017\mo2\dy8\hr16\min35\sec23}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Sarasvati}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Versi 1.0.2-4\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Rabu 8 Februari 2017 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Daftar Isi\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indeks Modul\par \pard\plain 
{\tc \v Indeks Modul}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Daftar Paket\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Berikut ini daftar paket, dengan keterangan singkat (apabila tersedia):}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b QT_NAMESPACE} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ui} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indeks Tipe Data\par \pard\plain 
{\tc \v Indeks Hierarki Kelas}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Design Unit Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Hierarki kelas ini diurutkan kurang-lebih berdasarkan abjad:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
config\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
cryp\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_port\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
gprs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
gsm\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
module\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mTreeview\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QDialog
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
form_addModule\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
formModule\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
loginForm\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ProgressDialog\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SettingsDialog\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMainWindow
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MainWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QWidget
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QLightBoxWidget\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
serial\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
setting\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
t_module\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
t_serial_settings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
worker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indeks Tipe Data\par \pard\plain 
{\tc \v Indeks Tipe Data}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Daftar Tipe Data\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Berikut daftar tipe data, dengan penjelasan singkat:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b config} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cryp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b form_addModule} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b form_addModule} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b formModule} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b formModule} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gprs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gsm} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b loginForm} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b loginForm} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MainWindow} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b MainWindow} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b module} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The module class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mTreeview} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b mTreeview} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ProgressDialog} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b ProgressDialog} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QLightBoxWidget} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overlap class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b serial} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The serial class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b setting} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SettingsDialog} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SettingsDialog} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b worker} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class worker })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indeks File\par \pard\plain 
{\tc \v Indeks File}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Daftar File\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Berikut ini daftar seluruh file, dengan penjelasan singkat:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b qrc_image.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b controller/{\b worker.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b controller/{\b worker.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b config.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b cryp.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b cryp.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b debug.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b debug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b module.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b module.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b setting.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b setting.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/{\b utama.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/communication/{\b gprs.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/communication/{\b gprs.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/communication/{\b gsm.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/communication/{\b gsm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/communication/{\b serial.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/communication/{\b serial.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/interface_manipulator/{\b mtreeview.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/interface_manipulator/{\b mtreeview.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/interface_manipulator/{\b qlightboxwidget.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b model/interface_manipulator/{\b qlightboxwidget.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b debug.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b debug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b utama.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b form_addmodule.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b form_addmodule.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b formmodule.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b formmodule.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b loginform.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b loginform.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b mainwindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b mainwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b progressdialog.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b progressdialog.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b settingsdialog.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b view/{\b settingsdialog.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Dokumentasi Modul\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Namespace QT_NAMESPACE\par \pard\plain 
{\tc\tcl2 \v QT_NAMESPACE}
{\xe \v QT_NAMESPACE}
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Fungsi\par
\pard\plain 
{\xe \v qRegisterResourceData\:QT_NAMESPACE}
{\xe \v QT_NAMESPACE\:qRegisterResourceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QT_NAMESPACE::qRegisterResourceData (int , const unsigned char * , const unsigned char * , const unsigned char * )}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v qUnregisterResourceData\:QT_NAMESPACE}
{\xe \v QT_NAMESPACE\:qUnregisterResourceData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QT_NAMESPACE::qUnregisterResourceData (int , const unsigned char * , const unsigned char * , const unsigned char * )}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Namespace Ui\par \pard\plain 
{\tc\tcl2 \v Ui}
{\xe \v Ui}
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Dokumentasi Tipe Data{\tc \v Dokumentasi Tipe Data}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas config\par \pard\plain 
{\tc\tcl2 \v config}
{\xe \v config}
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\par
{
{\f2 #include <config.h>}}\par
Diagram kolaborasi untuk config:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d31/a00678.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v config\:config}
{\xe \v config\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b config} ()}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 \par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b config.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b config.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas cryp\par \pard\plain 
{\tc\tcl2 \v cryp}
{\xe \v cryp}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
{
{\f2 #include <cryp.h>}}\par
Diagram kolaborasi untuk cryp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dc3/a00682.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v cryp\:cryp}
{\xe \v cryp\:cryp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b cryp} ()}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 \par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v decryp\:cryp}
{\xe \v cryp\:decryp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decryp (QString  {\i address})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decryp }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    24 \{\par
   25     QString fileName = address;\par
   26     if (!fileName.isEmpty()) \{\par
   27         QFile file_in(fileName);\par
   28         if (!file_in.open(QFile::ReadOnly)) \{return;\}\par
   29         QByteArray data = file_in.readAll();\par
   30 \par
   31         QTextStream in(&data);\par
   32         in.setAutoDetectUnicode(false);\par
   33         in.setCodec(ENCRYP);\par
   34         QString textFile = in.readAll();\par
   35 \par
   36         QFile file_out(fileName);\par
   37         if (!file_out.open(QFile::WriteOnly | QFile::Text)) \{return;\}\par
   38         QTextStream out(&file_out);\par
   39         out.setCodec(DECRYP);\par
   40         out << textFile;\par
   41     \}\par
   42 \}\par
}
}
{\xe \v encryp\:cryp}
{\xe \v cryp\:encryp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void encryp (QString  {\i address})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
encryp }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9 \{\par
   10     QString fileName = address;\par
   11     if (!fileName.isEmpty()) \{\par
   12         QFile file_in(fileName);\par
   13         if (!file_in.open(QFile::ReadOnly)) \{return;\}\par
   14         QByteArray data = file_in.readAll();\par
   15         QFile file_out(fileName);\par
   16         if (!file_out.open(QFile::WriteOnly | QFile::Text)) \{return;\}\par
   17         QTextStream out(&file_out);\par
   18         out.setCodec(ENCRYP);\par
   19         out << data;\par
   20     \}\par
   21 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b cryp.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b cryp.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas form_addModule\par \pard\plain 
{\tc\tcl2 \v form_addModule}
{\xe \v form_addModule}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b form_addModule} class. }}\par
{
{\f2 #include <form_addmodule.h>}}\par
Diagram hierarki kelas untuk form_addModule:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dd8/a00719.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagram kolaborasi untuk form_addModule:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d8f/a00718.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabel Data\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b form_addModule} class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v form_addModule\:form_addModule}
{\xe \v form_addModule\:form_addModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b form_addModule} (QWidget *  {\i parent} = {\f2 0}, bool  {\i create} = {\f2 true}, QString  {\i address} = {\f2 0}, int  {\i index} = {\f2 0}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b form_addModule} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i create} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
COMMUNICATION AND ENVIRONTMENT\par
COMMUNICATION\par
ENVIRONTMENT \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4                                                                                        :\par
    5     QDialog(parent),\par
    6     ui(new Ui::form_addModule)\par
    7 \{\par
    8     ui->setupUi(this);\par
    9 \par
   10     this->ui->edit_module_name->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,50\}$"),this));\par
   11     this->ui->edit_sn->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,21\}$"),this));\par
   12     this->ui->edit_server_address->setInputMask("000.000.000.000");\par
   13     this->ui->edit_file_address->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,20\}$"),this));\par
   14 \par
   15     this->ui->edit_devicename_1->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   16     this->ui->edit_devicename_2->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   17     this->ui->edit_number_1->setValidator(new QRegExpValidator(QRegExp("^\\\\d\{1,15\}$"),this));\par
   18     this->ui->edit_number_2->setValidator(new QRegExpValidator(QRegExp("^\\\\d\{1,15\}$"),this));\par
   19     this->ui->edit_apn_1->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   20     this->ui->edit_apn_2->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   21     this->ui->edit_user_1->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   22     this->ui->edit_user_2->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   23     this->ui->edit_passwd_1->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   24     this->ui->edit_passwd_2->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   25 \par
   26     edit = !create;\par
   27     accept = 0;\par
   28 \par
   29     if (edit) \{\par
   30         struct t_module tModule;\par
   31         mod.read_module(&tModule, address);\par
   32         currentFile = address;\par
   33         QString modules;\par
   34 \par
   35         this->on_ck_flag_active_gsm_2_clicked(tModule.flag_dual_gsm);\par
   36         this->on_cb_com_1_currentIndexChanged(tModule.flag_com_gsm_1);\par
   37         this->on_cb_com_2_currentIndexChanged(tModule.flag_com_gsm_2);\par
   38 \par
   39 //        this->ui->edit_module_name->setEnabled(false);\par
   40         modules.sprintf("%s", tModule.module_name);\par
   41         this->ui->edit_module_name->setText(modules);\par
   42         currentName = modules;\par
   43         modules.sprintf("%s", tModule.serial_number);\par
   44         this->ui->edit_sn->setText(modules);\par
   45         if (tModule.flag_dual_gsm == 1) \{\par
   46             this->ui->ck_flag_active_gsm_2->setChecked(true);\par
   47         \}\par
   48 //        modules.sprintf("%s", tModule.ip_address);\par
   49 //        this->ui->edit_ip_address->setText(modules);\par
   50         modules.sprintf("%s", tModule.server_address);\par
   51         this->ui->edit_server_address->setText(modules);\par
   52         modules.sprintf("%s", tModule.file_address);\par
   53         this->ui->edit_file_address->setText(modules);\par
   54         this->ui->cb_webclient->setCurrentIndex(tModule.flag_webclient);\par
   55         int s = 0; int m = 0; int h = 0; int d = 0;\par
   56         if (tModule.interval_relay <= 60) \{\par
   57             this->ui->spin_interval_relay_s->setValue(tModule.interval_relay);\par
   58         \} else \{\par
   59             s = tModule.interval_relay;\par
   60             m = s / 60;\par
   61             for (int i = 0; i < m; i++) s = s - 60;\par
   62             if (m > 60) \{\par
   63                 h = m / 60;\par
   64                 for (int i = 0; i < h; i++) m = m - 60;\par
   65                 if (h > 24) \{\par
   66                     d = h / 24;\par
   67                     for (int i = 0; i < d; i++) h = h - 24;\par
   68                 \}\par
   69             \}\par
   70             this->ui->spin_interval_relay_s->setValue(s);\par
   71             this->ui->spin_interval_relay_m->setValue(m);\par
   72             this->ui->spin_interval_relay_h->setValue(h);\par
   73             this->ui->spin_interval_relay_d->setValue(d);\par
   74         \}\par
   75         s = 0; m = 0; h = 0; d = 0;\par
   76         if (tModule.interval_data <= 60) \{\par
   77             this->ui->spin_interval_data_s->setValue(tModule.interval_data);\par
   78         \} else \{\par
   79             s = tModule.interval_data;\par
   80             m = s / 60;\par
   81             for (int i = 0; i < m; i++) s = s - 60;\par
   82             if (m > 60) \{\par
   83                 h = m / 60;\par
   84                 for (int i = 0; i < h; i++) m = m - 60;\par
   85                 if (h > 24) \{\par
   86                     d = h / 24;\par
   87                     for (int i = 0; i < d; i++) h = h - 24;\par
   88                 \}\par
   89             \}\par
   90             this->ui->spin_interval_data_s->setValue(s);\par
   91             this->ui->spin_interval_data_m->setValue(m);\par
   92             this->ui->spin_interval_data_h->setValue(h);\par
   93             this->ui->spin_interval_data_d->setValue(d);\par
   94         \}\par
   95         this->ui->cb_mode_http->setCurrentIndex(tModule.flag_mode_http);\par
   96         this->ui->spin_port->setValue(tModule.port);\par
   97         this->ui->spin_utc->setValue(tModule.utc);\par
   98 \par
   99         this->ui->cb_operator_1->setCurrentIndex(tModule.flag_gsm_1);\par
  100         modules.sprintf("%s", tModule.device_name_gsm_1);\par
  101         this->ui->edit_devicename_1->setText(modules);\par
  102         this->ui->cb_status_1->setCurrentIndex(tModule.flag_status_active_gsm_1);\par
  103         this->ui->cb_com_1->setCurrentIndex(tModule.flag_com_gsm_1);\par
  104         modules.sprintf("%s", tModule.number_gsm_1);\par
  105         this->ui->edit_number_1->setText(modules);\par
  106         modules.sprintf("%s", tModule.apn_gsm_1);\par
  107         this->ui->edit_apn_1->setText(modules);\par
  108         modules.sprintf("%s", tModule.user_gsm_1);\par
  109         this->ui->edit_user_1->setText(modules);\par
  110         modules.sprintf("%s", tModule.passwd_gsm_1);\par
  111         this->ui->edit_passwd_1->setText(modules);\par
  112 \par
  113         this->ui->cb_operator_2->setCurrentIndex(tModule.flag_gsm_2);\par
  114         modules.sprintf("%s", tModule.device_name_gsm_2);\par
  115         this->ui->edit_devicename_2->setText(modules);\par
  116         this->ui->cb_status_2->setCurrentIndex(tModule.flag_status_active_gsm_2);\par
  117         this->ui->cb_com_2->setCurrentIndex(tModule.flag_com_gsm_2);\par
  118         modules.sprintf("%s", tModule.number_gsm_2);\par
  119         this->ui->edit_number_2->setText(modules);\par
  120         modules.sprintf("%s", tModule.apn_gsm_2);\par
  121         this->ui->edit_apn_2->setText(modules);\par
  122         modules.sprintf("%s", tModule.user_gsm_2);\par
  123         this->ui->edit_user_2->setText(modules);\par
  124         modules.sprintf("%s", tModule.passwd_gsm_2);\par
  125         this->ui->edit_passwd_2->setText(modules);\par
  126 \par
  127         if (index == 1) \{\par
  129             this->ui->edit_module_name->setEnabled(true);\par
  130             this->ui->edit_sn->setEnabled(true);\par
  131             this->ui->ck_flag_active_gsm_2->setHidden(false);\par
  132 \par
  133             this->setFixedWidth(640);\par
  134             this->setFixedHeight(765);\par
  135 \par
  136             this->ui->gbCom->setHidden(false);\par
  137             this->ui->gbEnv->setHidden(false);\par
  138         \} else if (index == 2) \{\par
  140             this->ui->edit_module_name->setEnabled(false);\par
  141             this->ui->edit_sn->setEnabled(false);\par
  142             this->ui->ck_flag_active_gsm_2->setHidden(false);\par
  143 \par
  144             this->setFixedWidth(640);\par
  145             this->setFixedHeight(445);\par
  146             this->ui->gbCom->setGeometry(20,70,601,331);\par
  147             this->ui->buttonBox->setGeometry(14,405,601,27);\par
  148             this->ui->gbCom->setHidden(false);\par
  149             this->ui->gbEnv->setHidden(true);\par
  150         \} else if (index == 3) \{\par
  152             this->ui->edit_module_name->setEnabled(true);\par
  153             this->ui->edit_sn->setEnabled(true);\par
  154             this->ui->ck_flag_active_gsm_2->setHidden(true);\par
  155             this->ui->gbCom->setHidden(true);\par
  156 \par
  157             this->ui->gbEnv->setGeometry(20,70,420,324);\par
  158             this->ui->buttonBox->setGeometry(10,398,430,27);\par
  159             this->setFixedWidth(459);\par
  160             this->setFixedHeight(433);\par
  161 \par
  162             this->ui->gbEnv->setHidden(false);\par
  163         \}\par
  164     \} else \{\par
  165         this->ui->edit_module_name->setEnabled(true);\par
  166         this->ui->edit_sn->setEnabled(true);\par
  167         this->ui->ck_flag_active_gsm_2->setHidden(false);\par
  168 \par
  169         this->setFixedWidth(640);\par
  170         this->setFixedHeight(765);\par
  171 \par
  172         this->ui->gbCom->setHidden(false);\par
  173         this->ui->gbEnv->setHidden(false);\par
  174     \}\par
  175     this->enabledButton();\par
  176     connect(ui->edit_module_name,SIGNAL(textChanged(const QString &)),this,SLOT(enabledButton()));\par
  177     connect(ui->edit_sn,SIGNAL(textChanged(const QString &)),this,SLOT(enabledButton()));\par
  178 \par
  179     connect(ui->edit_devicename_1,SIGNAL(textChanged(const QString &)),this,SLOT(enabledButton()));\par
  180     connect(ui->edit_number_1,SIGNAL(textChanged(const QString &)),this,SLOT(enabledButton()));\par
  181 \par
  182     connect(ui->edit_devicename_2,SIGNAL(textChanged(const QString &)),this,SLOT(enabledButton()));\par
  183     connect(ui->edit_number_2,SIGNAL(textChanged(const QString &)),this,SLOT(enabledButton()));\par
  184 \par
  185     if (ui->spin_interval_relay_d->value() > 0) \{\par
  186         ui->spin_interval_relay_s->setRange(0, 60);\par
  187     \} else \{\par
  188         if (ui->spin_interval_relay_h->value() > 0) \{\par
  189             ui->spin_interval_relay_s->setRange(0, 60);\par
  190         \} else \{\par
  191             if (ui->spin_interval_relay_m->value() > 0) \{\par
  192                 ui->spin_interval_relay_s->setRange(0, 60);\par
  193             \} else \{\par
  194                 if (ui->spin_interval_relay_s->value() < 6) \{\par
  195                     ui->spin_interval_relay_s->setValue(6);\par
  196                 \}\par
  197                 ui->spin_interval_relay_s->setRange(6, 60);\par
  198             \}\par
  199         \}\par
  200     \}\par
  201 \par
  202     if (ui->spin_interval_data_d->value() > 0) \{\par
  203         ui->spin_interval_data_s->setRange(0, 60);\par
  204     \} else \{\par
  205         if (ui->spin_interval_data_h->value() > 0) \{\par
  206             ui->spin_interval_data_s->setRange(0, 60);\par
  207         \} else \{\par
  208             if (ui->spin_interval_data_m->value() > 0) \{\par
  209                 ui->spin_interval_data_s->setRange(0, 60);\par
  210             \} else \{\par
  211                 if (ui->spin_interval_data_s->value() < 6) \{\par
  212                     ui->spin_interval_data_s->setValue(6);\par
  213                 \}\par
  214                 ui->spin_interval_data_s->setRange(6, 60);\par
  215             \}\par
  216         \}\par
  217     \}\par
  218 \}\par
}
}
{\xe \v ~form_addModule\:form_addModule}
{\xe \v form_addModule\:~form_addModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
~{\b form_addModule} ()}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   221 \{\par
  222     accept = 0;\par
  223     delete ui;\par
  224 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v enabledButton\:form_addModule}
{\xe \v form_addModule\:enabledButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void enabledButton (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
enabledButton }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   485 \{\par
  486     if (!ui->edit_module_name->text().isEmpty() &&\par
  487             !ui->edit_sn->text().isEmpty() &&\par
  488             !ui->edit_devicename_1->text().isEmpty() &&\par
  489             !ui->edit_number_1->text().isEmpty()) \{\par
  490         if (ui->ck_flag_active_gsm_2->isChecked()) \{\par
  491             if (!ui->edit_devicename_2->text().isEmpty() &&\par
  492                     !ui->edit_number_2->text().isEmpty()) \{\par
  493                 active_button = true;\par
  494             \} else \{\par
  495                 active_button = false;\par
  496             \}\par
  497         \} else \{\par
  498             active_button = true;\par
  499         \}\par
  500     \} else \{\par
  501         active_button = false;\par
  502     \}\par
  503 \}\par
}
}
{\xe \v on_buttonBox_accepted\:form_addModule}
{\xe \v form_addModule\:on_buttonBox_accepted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_buttonBox_accepted (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_buttonBox_accepted }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GSM_1\par
GSM_2\par
--------------\'97\'97\'97\'97\'97 WRITE -------------\'97\'97\'97\'97\'97\par
INPUT\par
OUTPUT\par
SOURCES\par
DATA \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   227 \{\par
  228     if (!active_button) \{\par
  229         QMessageBox::critical(this, tr("Form Critical!"), tr("Please complete this form !!", 0,0));\par
  230         return;\par
  231     \}\par
  232     struct t_module tModule;\par
  233     QString newFiles;\par
  234     mod.read_module(&tModule, currentFile);\par
  235     strcpy(tModule.module_name, this->ui->edit_module_name->text().toLatin1());\par
  236     newFiles.sprintf("m_%s.dbe", tModule.module_name);\par
  237 \par
  238     tModule.flag_active = 1;\par
  239     strcpy(tModule.module_name, this->ui->edit_module_name->text().toLatin1());\par
  240     strcpy(tModule.serial_number, this->ui->edit_sn->text().toLatin1());\par
  241 \par
  242 //    strcpy(tModule.ip_address, this->ui->edit_ip_address->text().toLatin1());\par
  243     strcpy(tModule.server_address, this->ui->edit_server_address->text().toLatin1());\par
  244     strcpy(tModule.file_address, this->ui->edit_file_address->text().toLatin1());\par
  245     tModule.flag_webclient = this->ui->cb_webclient->currentIndex();\par
  246     strcpy(tModule.status_webclient, this->ui->cb_webclient->currentText().toLatin1());\par
  247     tModule.interval_relay = this->ui->spin_interval_relay_s->value() + (this->ui->spin_interval_relay_m->value() * 60) + ((this->ui->spin_interval_relay_h->value() * 60) * 60) + (((this->ui->spin_interval_relay_d->value() * 24) * 60) * 60);\par
  248     tModule.interval_data = this->ui->spin_interval_data_s->value() + (this->ui->spin_interval_data_m->value() * 60) + ((this->ui->spin_interval_data_h->value() * 60) * 60) + (((this->ui->spin_interval_data_d->value() * 24) * 60) * 60);\par
  249     tModule.flag_mode_http = this->ui->cb_mode_http->currentIndex();\par
  250     strcpy(tModule.mode_http, this->ui->cb_mode_http->currentText().toLatin1());\par
  251     tModule.port = this->ui->spin_port->value();\par
  252     tModule.utc = this->ui->spin_utc->value();\par
  253 \par
  254     if(this->ui->ck_flag_active_gsm_2->isChecked()) tModule.flag_dual_gsm = 1;\par
  255     else tModule.flag_dual_gsm = 0;\par
  256 \par
  258     tModule.flag_gsm_1 = this->ui->cb_operator_1->currentIndex();\par
  259     strcpy(tModule.name_gsm_1, this->ui->cb_operator_1->currentText().toLatin1());\par
  260 \par
  261     strcpy(tModule.device_name_gsm_1, this->ui->edit_devicename_1->text().toLatin1());\par
  262 \par
  263     tModule.flag_status_active_gsm_1 = this->ui->cb_status_1->currentIndex();\par
  264     strcpy(tModule.status_gsm_1, this->ui->cb_status_1->currentText().toLatin1());\par
  265 \par
  266     tModule.flag_com_gsm_1 = this->ui->cb_com_1->currentIndex();\par
  267     strcpy(tModule.com_gsm_1, this->ui->cb_com_1->currentText().toLatin1());\par
  268 \par
  269     strcpy(tModule.number_gsm_1, this->ui->edit_number_1->text().toLatin1());\par
  270     if (tModule.flag_com_gsm_1 == 0)\par
  271     \{\par
  272         strcpy(tModule.user_gsm_1, "-");\par
  273         strcpy(tModule.apn_gsm_1, "-");\par
  274         strcpy(tModule.passwd_gsm_1, "-");\par
  275     \} else if (tModule.flag_com_gsm_1 == 1)\par
  276     \{\par
  277         strcpy(tModule.user_gsm_1, this->ui->edit_user_1->text().toLatin1());\par
  278         strcpy(tModule.apn_gsm_1, this->ui->edit_apn_1->text().toLatin1());\par
  279         strcpy(tModule.passwd_gsm_1, this->ui->edit_passwd_1->text().toLatin1());\par
  280     \}\par
  281 \par
  283     if (tModule.flag_dual_gsm == 1) \{\par
  284         tModule.flag_gsm_2 = this->ui->cb_operator_2->currentIndex();\par
  285         strcpy(tModule.name_gsm_2, this->ui->cb_operator_2->currentText().toLatin1());\par
  286 \par
  287         strcpy(tModule.device_name_gsm_2, this->ui->edit_devicename_2->text().toLatin1());\par
  288 \par
  289         tModule.flag_status_active_gsm_2 = this->ui->cb_status_2->currentIndex();\par
  290         strcpy(tModule.status_gsm_2, this->ui->cb_status_2->currentText().toLatin1());\par
  291 \par
  292         tModule.flag_com_gsm_2 = this->ui->cb_com_2->currentIndex();\par
  293         strcpy(tModule.com_gsm_2, this->ui->cb_com_2->currentText().toLatin1());\par
  294 \par
  295         strcpy(tModule.number_gsm_2, this->ui->edit_number_2->text().toLatin1());\par
  296         if (tModule.flag_com_gsm_2 == 0) \{\par
  297             strcpy(tModule.user_gsm_2, "-");\par
  298             strcpy(tModule.apn_gsm_2, "-");\par
  299             strcpy(tModule.passwd_gsm_2, "-");\par
  300         \} else if (tModule.flag_com_gsm_2 == 1) \{\par
  301             strcpy(tModule.user_gsm_2, this->ui->edit_user_2->text().toLatin1());\par
  302             strcpy(tModule.apn_gsm_2, this->ui->edit_apn_2->text().toLatin1());\par
  303             strcpy(tModule.passwd_gsm_2, this->ui->edit_passwd_2->text().toLatin1());\par
  304         \}\par
  305     \} else \{\par
  306         tModule.flag_gsm_2 = 0;\par
  307         strcpy(tModule.name_gsm_2,"-");\par
  308         strcpy(tModule.device_name_gsm_2,"-");\par
  309         tModule.flag_status_active_gsm_2 = 0;\par
  310         strcpy(tModule.status_gsm_2,"NOT ACTIVE");\par
  311         tModule.flag_com_gsm_2 = 0;\par
  312         strcpy(tModule.com_gsm_2,"GSM");\par
  313         strcpy(tModule.number_gsm_2,"-");\par
  314         strcpy(tModule.user_gsm_2, "-");\par
  315         strcpy(tModule.apn_gsm_2, "-");\par
  316         strcpy(tModule.passwd_gsm_2, "-");\par
  317     \}\par
  318 \par
  320     bool cek = false;\par
  321     QDir path(".RTUdata/module");\par
  322     QStringList files = path.entryList(QDir::Files);\par
  323 \par
  324     newFiles.sprintf("m_%s.dbe", tModule.module_name);\par
  325 \par
  326     if (newFiles.indexOf(" ") > 0) \{\par
  327         accept = 0;\par
  328         QMessageBox::information(this, tr("Form Information"), tr("Should not use spaces ..", 0,0));\par
  329         return;\par
  330     \}\par
  331 \par
  332     /* cek apakah nama module sudah dipakai atau belum */\par
  333     for(int i = 0; i < files.count(); i++)\{\par
  334         if(newFiles == QString(files.at(i))) \{\par
  335             cek = true;\par
  336             break;\par
  337         \} else \{\par
  338             cek = false;\par
  339         \}\par
  340     \}\par
  341     if (newFiles == currentName.prepend("m_").append(".dbe")) cek = false;\par
  342 \par
  343     if (cek) \{\par
  344         accept = 0;\par
  345         QMessageBox::information(this, tr("Form Information"), tr("Module name already in use ..", 0,0));\par
  346         return;\par
  347     \} else \{\par
  348         if (edit) \{\par
  349             QFile CurrFile(currentFile);\par
  350             CurrFile.remove();\par
  351             QString CurrNameFile = CurrFile.fileName();\par
  352             CurrFile.rename(CurrNameFile, newFiles);\par
  353 //            CurrFile.close();\par
  354 \par
  355             mod.write_module(&tModule);\par
  356             QString pth; pth.sprintf(".RTUdata/module/m_%s.dbe",tModule.module_name);\par
  357             cryp code; code.encryp(pth);\par
  358 \par
  359 //            mod.update_module(&tModule, newFiles.prepend(".RTUdata/module/"));\par
  360 //            mod.update_communication(&tModule, newFiles.prepend(".RTUdata/module/"));\par
  361             accept = 1;\par
  362             currentFile = newFiles.prepend(".RTUdata/module/");\par
  363             close();\par
  364         \} else \{\par
  365             QString temp; int j = 0;\par
  367             tModule.Input.clear(); tModule.InputName.clear();\par
  368             tModule.jml_input_digital = 0; tModule.jml_input_analog = 0;\par
  369             for (int i = 1; i <= PIN_DIGITAL+PIN_ANALOG; i++) \{\par
  370                 if (i <= PIN_DIGITAL) \{\par
  371                     temp.sprintf("D;%d;0;0.000;0.000", i);\par
  372                     tModule.Input.insert(j, temp);\par
  373                     tModule.InputName.insert(j, "");\par
  374                     j++;\par
  375                     tModule.jml_input_digital++;\par
  376                 \} else if (i > PIN_DIGITAL && i <= PIN_DIGITAL+PIN_ANALOG) \{\par
  377                     temp.sprintf("A;%d;0;0.000;0.000", i);\par
  378                     tModule.Input.insert(j, temp);\par
  379                     tModule.InputName.insert(j, "");\par
  380                     j++;\par
  381                     tModule.jml_input_analog++;\par
  382                 \}\par
  383             \}\par
  384 \par
  386             tModule.Output.clear(); tModule.OutputName.clear();\par
  387             tModule.jml_output = 0;\par
  388             for (int i = 1; i <= PIN_OUTPUT; i++) \{\par
  389                 temp.sprintf("R;%d;0;0.000;0.000", i);\par
  390                 tModule.Output.insert(i-1, temp);\par
  391                 tModule.OutputName.insert(i-1, "");\par
  392                 tModule.jml_output++;\par
  393             \}\par
  394 \par
  396             for (int i = 0; i < DATA_PERIOD-4; i++) \{\par
  397                 temp.sprintf("%d;;;0;0;0;;;0;0;0;", i+1);\par
  398                 tModule.sumber.insert(i, temp);\par
  399                 tModule.jml_sumber++;\par
  400             \}\par
  401 \par
  403             for (int i = 0; i < DATA_PERIOD*6; i++) \{\par
  404                 if (i <= PIN_DIGITAL) \{\par
  405                     temp.sprintf("%d;%d;;0;-;-50;0;10;500;800;1000;%d", i+1, 1000+i+1, 1);\par
  406                     tModule.data.insert(i, temp);\par
  407                     tModule.jml_data++;\par
  408                 \} else if (i > PIN_DIGITAL && i < PIN_DIGITAL+PIN_ANALOG) \{\par
  409                     temp.sprintf("%d;%d;;0;-;-50;0;10;500;800;1000;%d", i+1, 1000+i+1, 1);\par
  410                     tModule.data.insert(i, temp);\par
  411                     tModule.jml_data++;\par
  412                 \} else \{\par
  413                     temp.sprintf("%d;%d;;0;-;-50;0;10;500;800;1000;%d", i+1, 1000+i+1, 0);\par
  414                     tModule.data.insert(i, temp);\par
  415                     tModule.jml_data++;\par
  416                 \}\par
  417             \}\par
  418 \par
  419             mod.write_module(&tModule);\par
  420             QString pth; pth.sprintf(".RTUdata/module/m_%s.dbe",tModule.module_name);\par
  421             cryp code; code.encryp(pth);\par
  422 \par
  423             accept = 1;\par
  424 \par
  425             close();\par
  426         \}\par
  427     \}\par
  428 \}\par
}
}
{\xe \v on_buttonBox_rejected\:form_addModule}
{\xe \v form_addModule\:on_buttonBox_rejected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_buttonBox_rejected (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_buttonBox_rejected }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   431 \{\par
  432     accept = 0;\par
  433     close();\par
  434 \}\par
}
}
{\xe \v on_cb_com_1_currentIndexChanged\:form_addModule}
{\xe \v form_addModule\:on_cb_com_1_currentIndexChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_cb_com_1_currentIndexChanged (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_cb_com_1_currentIndexChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   459 \{\par
  460     if (index == 0) \{\par
  461         this->ui->edit_user_1->setEnabled(false);\par
  462         this->ui->edit_apn_1->setEnabled(false);\par
  463         this->ui->edit_passwd_1->setEnabled(false);\par
  464     \} else if (index == 1) \{\par
  465         this->ui->edit_user_1->setEnabled(true);\par
  466         this->ui->edit_apn_1->setEnabled(true);\par
  467         this->ui->edit_passwd_1->setEnabled(true);\par
  468     \}\par
  469 \}\par
}
}
{\xe \v on_cb_com_2_currentIndexChanged\:form_addModule}
{\xe \v form_addModule\:on_cb_com_2_currentIndexChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_cb_com_2_currentIndexChanged (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_cb_com_2_currentIndexChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   472 \{\par
  473     if (index == 0) \{\par
  474         this->ui->edit_user_2->setEnabled(false);\par
  475         this->ui->edit_apn_2->setEnabled(false);\par
  476         this->ui->edit_passwd_2->setEnabled(false);\par
  477     \} else if (index == 1) \{\par
  478         this->ui->edit_user_2->setEnabled(true);\par
  479         this->ui->edit_apn_2->setEnabled(true);\par
  480         this->ui->edit_passwd_2->setEnabled(true);\par
  481     \}\par
  482 \}\par
}
}
{\xe \v on_ck_flag_active_gsm_2_clicked\:form_addModule}
{\xe \v form_addModule\:on_ck_flag_active_gsm_2_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_ck_flag_active_gsm_2_clicked (bool  {\i checked}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_ck_flag_active_gsm_2_clicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i checked} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   437 \{\par
  438     if(checked) flag_gsm_2_active = 1;\par
  439     else flag_gsm_2_active = 0;\par
  440 \par
  441     ui->label_6->setEnabled(checked);\par
  442     ui->label_7->setEnabled(checked);\par
  443     ui->label_8->setEnabled(checked);\par
  444     ui->label_9->setEnabled(checked);\par
  445     ui->label_10->setEnabled(checked);\par
  446     ui->label_17->setEnabled(checked);\par
  447     ui->label_18->setEnabled(checked);\par
  448     ui->label_20->setEnabled(checked);\par
  449 \par
  450     ui->cb_operator_2->setEnabled(checked);\par
  451     ui->edit_devicename_2->setEnabled(checked);\par
  452     ui->cb_status_2->setEnabled(checked);\par
  453     ui->cb_com_2->setEnabled(checked);\par
  454     ui->cb_com_2->setCurrentIndex(0);\par
  455     ui->edit_number_2->setEnabled(checked);\par
  456 \}\par
}
}
{\xe \v on_spin_interval_data_d_valueChanged\:form_addModule}
{\xe \v form_addModule\:on_spin_interval_data_d_valueChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_spin_interval_data_d_valueChanged (int  {\i arg1}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_spin_interval_data_d_valueChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg1} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   566 \{\par
  567     if (arg1 > 0) \{\par
  568         ui->spin_interval_data_s->setRange(0, 60);\par
  569     \} else \{\par
  570         if (ui->spin_interval_data_h->value() > 0) \{\par
  571             ui->spin_interval_data_s->setRange(0, 60);\par
  572         \} else \{\par
  573             if (ui->spin_interval_data_m->value() > 0) \{\par
  574                 ui->spin_interval_data_s->setRange(0, 60);\par
  575             \} else \{\par
  576                 if (ui->spin_interval_data_s->value() < 6) \{\par
  577                     ui->spin_interval_data_s->setValue(6);\par
  578                 \}\par
  579                 ui->spin_interval_data_s->setRange(6, 60);\par
  580             \}\par
  581         \}\par
  582     \}\par
  583 \}\par
}
}
{\xe \v on_spin_interval_data_h_valueChanged\:form_addModule}
{\xe \v form_addModule\:on_spin_interval_data_h_valueChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_spin_interval_data_h_valueChanged (int  {\i arg1}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_spin_interval_data_h_valueChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg1} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   606 \{\par
  607     if (arg1 > 0) \{\par
  608         ui->spin_interval_data_s->setRange(0, 60);\par
  609     \} else \{\par
  610         if (ui->spin_interval_data_d->value() > 0) \{\par
  611             ui->spin_interval_data_s->setRange(0, 60);\par
  612         \} else \{\par
  613             if (ui->spin_interval_data_m->value() > 0) \{\par
  614                 ui->spin_interval_data_s->setRange(0, 60);\par
  615             \} else \{\par
  616                 if (ui->spin_interval_data_s->value() < 6) \{\par
  617                     ui->spin_interval_data_s->setValue(7);\par
  618                 \}\par
  619                 ui->spin_interval_data_s->setRange(6, 60);\par
  620             \}\par
  621         \}\par
  622     \}\par
  623 \}\par
}
}
{\xe \v on_spin_interval_data_m_valueChanged\:form_addModule}
{\xe \v form_addModule\:on_spin_interval_data_m_valueChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_spin_interval_data_m_valueChanged (int  {\i arg1}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_spin_interval_data_m_valueChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg1} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   586 \{\par
  587     if (arg1 > 0) \{\par
  588         ui->spin_interval_data_s->setRange(0, 60);\par
  589     \} else \{\par
  590         if (ui->spin_interval_data_d->value() > 0) \{\par
  591             ui->spin_interval_data_s->setRange(0, 60);\par
  592         \} else \{\par
  593             if (ui->spin_interval_data_h->value() > 0) \{\par
  594                 ui->spin_interval_data_s->setRange(0, 60);\par
  595             \} else \{\par
  596                 if (ui->spin_interval_data_s->value() < 6) \{\par
  597                     ui->spin_interval_data_s->setValue(6);\par
  598                 \}\par
  599                 ui->spin_interval_data_s->setRange(6, 60);\par
  600             \}\par
  601         \}\par
  602     \}\par
  603 \}\par
}
}
{\xe \v on_spin_interval_relay_d_valueChanged\:form_addModule}
{\xe \v form_addModule\:on_spin_interval_relay_d_valueChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_spin_interval_relay_d_valueChanged (int  {\i arg1}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_spin_interval_relay_d_valueChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg1} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   506 \{\par
  507     if (arg1 > 0) \{\par
  508         ui->spin_interval_relay_s->setRange(0, 60);\par
  509     \} else \{\par
  510         if (ui->spin_interval_relay_h->value() > 0) \{\par
  511             ui->spin_interval_relay_s->setRange(0, 60);\par
  512         \} else \{\par
  513             if (ui->spin_interval_relay_m->value() > 0) \{\par
  514                 ui->spin_interval_relay_s->setRange(0, 60);\par
  515             \} else \{\par
  516                 if (ui->spin_interval_relay_s->value() < 6) \{\par
  517                     ui->spin_interval_relay_s->setValue(6);\par
  518                 \}\par
  519                 ui->spin_interval_relay_s->setRange(6, 60);\par
  520             \}\par
  521         \}\par
  522     \}\par
  523 \}\par
}
}
{\xe \v on_spin_interval_relay_h_valueChanged\:form_addModule}
{\xe \v form_addModule\:on_spin_interval_relay_h_valueChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_spin_interval_relay_h_valueChanged (int  {\i arg1}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_spin_interval_relay_h_valueChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg1} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   546 \{\par
  547     if (arg1 > 0) \{\par
  548         ui->spin_interval_relay_s->setRange(0, 60);\par
  549     \} else \{\par
  550         if (ui->spin_interval_relay_d->value() > 0) \{\par
  551             ui->spin_interval_relay_s->setRange(0, 60);\par
  552         \} else \{\par
  553             if (ui->spin_interval_relay_m->value() > 0) \{\par
  554                 ui->spin_interval_relay_s->setRange(0, 60);\par
  555             \} else \{\par
  556                 if (ui->spin_interval_relay_s->value() < 6) \{\par
  557                     ui->spin_interval_relay_s->setValue(7);\par
  558                 \}\par
  559                 ui->spin_interval_relay_s->setRange(6, 60);\par
  560             \}\par
  561         \}\par
  562     \}\par
  563 \}\par
}
}
{\xe \v on_spin_interval_relay_m_valueChanged\:form_addModule}
{\xe \v form_addModule\:on_spin_interval_relay_m_valueChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_spin_interval_relay_m_valueChanged (int  {\i arg1}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_spin_interval_relay_m_valueChanged }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg1} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   526 \{\par
  527     if (arg1 > 0) \{\par
  528         ui->spin_interval_relay_s->setRange(0, 60);\par
  529     \} else \{\par
  530         if (ui->spin_interval_relay_d->value() > 0) \{\par
  531             ui->spin_interval_relay_s->setRange(0, 60);\par
  532         \} else \{\par
  533             if (ui->spin_interval_relay_h->value() > 0) \{\par
  534                 ui->spin_interval_relay_s->setRange(0, 60);\par
  535             \} else \{\par
  536                 if (ui->spin_interval_relay_s->value() < 6) \{\par
  537                     ui->spin_interval_relay_s->setValue(6);\par
  538                 \}\par
  539                 ui->spin_interval_relay_s->setRange(6, 60);\par
  540             \}\par
  541         \}\par
  542     \}\par
  543 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v accept\:form_addModule}
{\xe \v form_addModule\:accept}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int accept}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
accept }}\par
}
{\xe \v active_button\:form_addModule}
{\xe \v form_addModule\:active_button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool active_button{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
active_button }}\par
}
{\xe \v currentFile\:form_addModule}
{\xe \v form_addModule\:currentFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString currentFile}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
currentFile }}\par
}
{\xe \v currentName\:form_addModule}
{\xe \v form_addModule\:currentName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString currentName}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
currentName }}\par
}
{\xe \v edit\:form_addModule}
{\xe \v form_addModule\:edit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool edit}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
edit }}\par
}
{\xe \v flag_gsm_2_active\:form_addModule}
{\xe \v form_addModule\:flag_gsm_2_active}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int flag_gsm_2_active}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_gsm_2_active }}\par
}
{\xe \v mod\:form_addModule}
{\xe \v form_addModule\:mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b module} mod{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mod }}\par
}
{\xe \v ui\:form_addModule}
{\xe \v form_addModule\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::form_addModule* ui}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ui }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b form_addmodule.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b form_addmodule.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas formModule\par \pard\plain 
{\tc\tcl2 \v formModule}
{\xe \v formModule}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b formModule} class. }}\par
{
{\f2 #include <formmodule.h>}}\par
Diagram hierarki kelas untuk formModule:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/de6/a00723.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagram kolaborasi untuk formModule:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d7c/a00722.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabel Data\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b formModule} class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v formModule\:formModule}
{\xe \v formModule\:formModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b formModule} (QWidget *  {\i parent} = {\f2 0}, QString  {\i address} = {\f2 0}, QSerialPort *  {\i SerialPort} = {\f2 0}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b formModule} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SerialPort} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     6                                                                                 :\par
    7     QDialog(parent),\par
    8     ui(new Ui::formModule)\par
    9 \{\par
   10     ui->setupUi(this);\par
   11     this->ui->tabWidget->setCurrentIndex(0);\par
   12 \par
   13     Address_Module = address;\par
   14     struct t_module tModule;\par
   15     module mod;\par
   16     mod.read_module(&tModule, Address_Module);\par
   17     NoSeri.sprintf("%s", tModule.serial_number);\par
   18 \par
   19     Serial_Com = new QSerialPort(this);\par
   20     Serial_Com = SerialPort;\par
   21 \par
   22     Main = new MainWindow(this);\par
   23     Serial = new serial();\par
   24     Setting = new setting();\par
   25 //    busyForm = new QLightBoxWidget(parent);\par
   26 \par
   27     this->setInterface(address);\par
   28     this->ui->tab_alarm->setEnabled(false);\par
   29     this->ui->pbEdit->setHidden(true);\par
   30     this->ui->pbAddRow->setHidden(true);\par
   31     this->ui->pbDeleteRows->setHidden(true);\par
   32     this->ui->pbRefresh->setHidden(true);\par
   33 \par
   34     this->ui->pbSet->setText("Set All Input Settings");\par
   35     this->ui->pbSetChk->setText("Set Checked Input Settings");\par
   36     this->ui->pbGet->setText("Get All Input Settings");\par
   37 \par
   38     this->ui->tab_alarm->setHidden(true);\par
   39 \par
   40     progress_dialog = new ProgressDialog(this);\par
   41     progress_dialog->setModal(true);\par
   42 \}\par
}
}
{\xe \v ~formModule\:formModule}
{\xe \v formModule\:~formModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
~{\b formModule} ()}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    45 \{\par
   46     delete ui;\par
   47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v checkFormula\:formModule}
{\xe \v formModule\:checkFormula}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkFormula (QString  {\i data}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
checkFormula }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   924 \{\par
  925     QStringList list = data.split(';');\par
  926     if (list.length() > 6) \{\par
  927         return true;\par
  928     \} else \{\par
  929         return false;\par
  930     \}\par
  931 \}\par
}
}
{\xe \v data_monitoring\:formModule}
{\xe \v formModule\:data_monitoring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void data_monitoring (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data_monitoring }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   934 \{\par
  935     struct t_module tModule;\par
  936     struct t_serial_settings tSerial;\par
  937     QStringList val_data;\par
  938     module mod;\par
  939     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
  940     mod.read_module(&tModule, Address_Module);\par
  941 \par
  942     QString str;\par
  943     QString tmp;\par
  944     QStringList list;\par
  945 \par
  946     if (Serial_Com->isOpen()) \{\par
  947         QString Request = "0005\\r\\n";\par
  948         bool timeout = false;\par
  949 //        while (!this->ui->tabWidget->currentIndex() == 6) \{\par
  950 //            Serial_Com->write(Request.toUtf8().data());\par
  951             Request.remove("\\r\\n");\par
  952             for (int i = 0; i < Request.length(); i++) \{\par
  953                 tmp = QChar(Request.at(i));\par
  954                 Serial_Com->write(tmp.toUtf8().data());\par
  955                 progress_dialog->delay(WAIT_WRITE);\par
  956             \}\par
  957             Serial_Com->write("\\r\\n");\par
  958 \par
  959             QTime dieTime = QTime::currentTime().addMSecs(TIMEOUT);\par
  960             while (!progress_dialog->read_FinishRead()) \{\par
  961                 QCoreApplication::processEvents(QEventLoop::AllEvents, 100);\par
  962                 if (QTime::currentTime() >= dieTime && !timeout) \{\par
  963                     timeout = true;\par
  964                     break;\par
  965                 \}\par
  966             \}\par
  967 //            work->delay(1000);\par
  968             if (!timeout) \{\par
  969                 Serial->read_parsing(&tSerial);\par
  970                 val_data = tSerial.str_data_dat.split("*");\par
  971                 progress_dialog->Get_Data(&tModule, val_data);\par
  972 \par
  973                 QStringList data = tModule.data;\par
  974                 QStringList temp = tModule.data;\par
  975                 int data_count = 0;\par
  976                 tModule.data.clear();\par
  977                 for (int i = 0; i < data.length(); i++) \{\par
  978                     str = data.at(i);\par
  979                     list =str.split(';');\par
  980                     if (list.length() == 12) \{\par
  981                         if (list.at(11) == "1") \{\par
  982                             tModule.data.append(str);\par
  983                             data_count++;\par
  984                         \}\par
  985                     \}\par
  986                 \}\par
  987 \par
  988                 for (int i = 0; i < data_count; i++)\{\par
  989                     str = tModule.data.at(i);\par
  990                     list = str.split(';');\par
  991                     str = list[0];\par
  992                     reg_data[i]->setText(list[1]);\par
  993                     name_data[i]->setText(list[2]);\par
  994                     value_data[i]->setText(list[3]);\par
  995                     unit_data[i]->setText(list[4]);\par
  996 \par
  997                     this->ui->tabel_data_m->setItem(i,0, new QTableWidgetItem(str));\par
  998                     this->ui->tabel_data_m->setCellWidget(i,1, reg_data[i]);\par
  999                     this->ui->tabel_data_m->setCellWidget(i,2, name_data[i]);\par
 1000                     this->ui->tabel_data_m->setCellWidget(i,3, value_data[i]);\par
 1001                     this->ui->tabel_data_m->setCellWidget(i,4, unit_data[i]);\par
 1002                 \}\par
 1003                 tModule.data = temp;\par
 1004                 mod.write_module(&tModule);\par
 1005                 cryp code; code.encryp(Address_Module);\par
 1006 \par
 1007             \} else \{\par
 1008                 timeout = false;\par
 1009             \}\par
 1010 //        \}\par
 1011     \}\par
 1012 \}\par
}
}
{\xe \v del_alrm_clicked\:formModule}
{\xe \v formModule\:del_alrm_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void del_alrm_clicked (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
del_alrm_clicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2334 \{\par
 2335     struct t_module tModule; module mod;\par
 2336     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2337     QString tmp; QStringList list1; QStringList list2;\par
 2338     mod.read_module(&tModule, Address_Module);\par
 2339     list1 = tModule.alarm;\par
 2340     list1[index] = "";\par
 2341     tModule.alarm.clear(); tModule.jml_alarm = 0;\par
 2342     for (int i = 0; i < list1.length(); i++) \{\par
 2343         if (list1.at(i) != "") \{\par
 2344             tmp = list1.at(i);\par
 2345             list2 = tmp.split(';');\par
 2346             tmp = QString::number(tModule.jml_alarm+1) + ";" +\par
 2347                     list2.at(1) + ";" +\par
 2348                     list2.at(2) + ";" +\par
 2349                     list2.at(3) + ";" +\par
 2350                     list2.at(4) + ";" +\par
 2351                     list2.at(5) + ";" +\par
 2352                     list2.at(6) + ";" +\par
 2353                     list2.at(7) + ";" +\par
 2354                     list2.at(8) + ";" +\par
 2355                     list2.at(9) + ";" +\par
 2356                     list2.at(10);\par
 2357             tModule.alarm.insert(tModule.jml_alarm,tmp);\par
 2358             tModule.jml_alarm++;\par
 2359         \}\par
 2360     \}\par
 2361     mod.write_module(&tModule);\par
 2362     cryp code; code.encryp(Address_Module);\par
 2363     for (int i = 0; i <= this->ui->tabel_alarm->rowCount(); i++) \{\par
 2364         this->ui->tabel_alarm->removeRow(i);\par
 2365     \}\par
 2366     this->setInterface_Alarm(Address_Module);\par
 2367 \}\par
}
}
{\xe \v del_src_clicked\:formModule}
{\xe \v formModule\:del_src_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void del_src_clicked (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
del_src_clicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2217 \{\par
 2218     struct t_module tModule; module mod;\par
 2219     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2220     QString tmp; QStringList list1; QStringList list2;\par
 2221     mod.read_module(&tModule, Address_Module);\par
 2222     list1 = tModule.sumber;\par
 2223     list1[index] = "";\par
 2224     tModule.sumber.clear(); tModule.jml_sumber = 0;\par
 2225     for (int i = 0; i < list1.length(); i++) \{\par
 2226         if (list1.at(i) != "") \{\par
 2227             tmp = list1.at(i);\par
 2228             list2 = tmp.split(';');\par
 2229             tmp = QString::number(tModule.jml_sumber+1) + ";" +\par
 2230                     list2.at(1) + ";" +\par
 2231                     list2.at(2) + ";" +\par
 2232                     list2.at(3) + ";" +\par
 2233                     list2.at(4) + ";" +\par
 2234                     list2.at(5);\par
 2235             tModule.sumber.insert(tModule.jml_sumber,tmp);\par
 2236             tModule.jml_sumber++;\par
 2237         \}\par
 2238     \}\par
 2239     mod.write_module(&tModule);\par
 2240     cryp code; code.encryp(Address_Module);\par
 2241     for (int i = 0; i <= this->ui->tabel_sources->rowCount(); i++) \{\par
 2242         this->ui->tabel_sources->removeRow(i);\par
 2243     \}\par
 2244     this->setInterface_Sumber(Address_Module);\par
 2245 \}\par
}
}
{\xe \v EnableButton\:formModule}
{\xe \v formModule\:EnableButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EnableButton (bool  {\i enab}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EnableButton. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enab} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2149 \{\par
 2150     this->ui->pbGetAll->setEnabled(enab);\par
 2151     this->ui->pbSetAll->setEnabled(enab);\par
 2152     this->ui->pbGet->setEnabled(enab);\par
 2153     this->ui->pbSet->setEnabled(enab);\par
 2154     this->ui->pbSetChk->setEnabled(enab);\par
 2155     this->ui->pbEdit->setEnabled(enab);\par
 2156 \}\par
}
}
{\xe \v input_alrm_changed\:formModule}
{\xe \v formModule\:input_alrm_changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void input_alrm_changed (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
input_alrm_changed }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2370 \{\par
 2371     struct t_module tModule; module mod;\par
 2372     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2373     QString tmp; QString str; QStringList list;\par
 2374     mod.read_module(&tModule, Address_Module);\par
 2375 \par
 2376     for (int i = 0; i < tModule.jml_alarm; i++) \{\par
 2377         for (int j = 0; j <= tModule.jml_input_digital + tModule.jml_input_analog; j++) \{\par
 2378             qobject_cast<QStandardItemModel *>(input_alarm[i]->model())->item(j)->setEnabled(true);\par
 2379         \}\par
 2380     \}\par
 2381     for (int i = 0; i < tModule.jml_alarm; i++) \{\par
 2382         for (int j = 0; j < tModule.jml_alarm; j++) \{\par
 2383             tmp = input_alarm[j]->currentText();\par
 2384             qobject_cast<QStandardItemModel *>(input_alarm[i]->model())->item(input_alarm[i]->findText(tmp))->setEnabled(false);\par
 2385         \}\par
 2386     \}\par
 2387 \par
 2388     if (input_alarm[index]->currentIndex() - 1 >= 0) \{\par
 2389         str = tModule.data.at(input_alarm[index]->currentIndex() - 1);\par
 2390         list = str.split(';');\par
 2391         name_alarm[index]->setText(list[2]);\par
 2392         state_alarm[index]->setCurrentIndex(list[11].toInt());\par
 2393         range_l[index]->setText(list[5]);\par
 2394         batas_ll[index]->setText(list[6]);\par
 2395         batas_l[index]->setText(list[7]);\par
 2396         batas_h[index]->setText(list[8]);\par
 2397         batas_hh[index]->setText(list[9]);\par
 2398         range_h[index]->setText(list[10]);\par
 2399     \} else \{\par
 2400         name_alarm[index]->setText("");\par
 2401         state_alarm[index]->setCurrentIndex(0);\par
 2402         range_l[index]->setText("0");\par
 2403         batas_ll[index]->setText("0");\par
 2404         batas_l[index]->setText("0");\par
 2405         batas_h[index]->setText("0");\par
 2406         batas_hh[index]->setText("0");\par
 2407         range_h[index]->setText("0");\par
 2408     \}\par
 2409 \}\par
}
}
{\xe \v length_src_changed\:formModule}
{\xe \v formModule\:length_src_changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void length_src_changed (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
length_src_changed }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2248 \{\par
 2249     struct t_module tModule; module mod;\par
 2250     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2251     QString tmp; int val;\par
 2252     mod.read_module(&tModule, Address_Module);\par
 2253 \par
 2254     for (int i = 0; i < tModule.jml_sumber; i++) \{\par
 2255         for (int j = 0; j <= 30; j++) \{\par
 2256             qobject_cast<QStandardItemModel *>(length_source[i]->model())->item(j)->setEnabled(true);\par
 2257         \}\par
 2258         for (int j = 0; j <= 30; j++) \{\par
 2259             qobject_cast<QStandardItemModel *>(target_reg_source[i]->model())->item(j)->setEnabled(true);\par
 2260         \}\par
 2261     \}\par
 2262     for (int i = 0; i < tModule.jml_sumber; i++) \{\par
 2263         for (int j = 0; j < tModule.jml_sumber; j++) \{\par
 2264             for (int k = 0; k < length_source[i]->currentIndex(); k++) \{\par
 2265                 qobject_cast<QStandardItemModel *>(target_reg_source[j]->model())\par
 2266                         ->item(target_reg_source[i]->currentIndex()+k)\par
 2267                         ->setEnabled(false);\par
 2268             \}\par
 2269             if (target_reg_source[i]->currentIndex() == 0) \{\par
 2270                 for (int k = 0; k <= tModule.data.length()+(DATA_PERIOD*2); k+=2) \{\par
 2271                     qobject_cast<QStandardItemModel *>(length_source[i]->model())\par
 2272                             ->item(length_source[i]->findText(QString::number(k)))\par
 2273                             ->setEnabled(false);\par
 2274                 \}\par
 2275             \} else \{\par
 2276                 val = 0;\par
 2277                 for (int k = 0; k < tModule.jml_sumber; k++) \{\par
 2278                     val = val + length_source[k]->currentIndex();\par
 2279                 \}\par
 2280                 for (int k = 0; k < val; k++) \{\par
 2281                     qobject_cast<QStandardItemModel *>(length_source[j]->model())\par
 2282                             ->item((tModule.data.length()+(DATA_PERIOD*2))/2-k)\par
 2283                             ->setEnabled(false);\par
 2284                 \}\par
 2285             \}\par
 2286         \}\par
 2287     \}\par
 2288 \}\par
}
}
{\xe \v on_pbAddRow_clicked\:formModule}
{\xe \v formModule\:on_pbAddRow_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbAddRow_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbAddRow_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2189 \{\par
 2190     struct t_module tModule;\par
 2191     module mod;\par
 2192     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2193     QString tmp;\par
 2194     mod.read_module(&tModule, Address_Module);\par
 2195     if (this->ui->tabWidget->currentIndex() == 4) \{\par
 2196         if (tModule.jml_sumber < 6) \{\par
 2197             tModule.jml_sumber++;\par
 2198             tmp = QString::number(tModule.jml_sumber) + ";;;0;0;-";\par
 2199             tModule.sumber.insert(tModule.jml_sumber-1, tmp);\par
 2200             mod.write_module(&tModule);\par
 2201             cryp code; code.encryp(Address_Module);\par
 2202             this->setInterface_Sumber(Address_Module);\par
 2203         \} else \{\par
 2204             QMessageBox::information(this, "Sources Configuration", "Max 6 Rows ..", 0, 0);\par
 2205         \}\par
 2206     \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 2207         tModule.jml_alarm++;\par
 2208         tmp = QString::number(tModule.jml_alarm) + ";;0;0;0;0;0;0;0;0;0";\par
 2209         tModule.alarm.insert(tModule.jml_alarm-1, tmp);\par
 2210         mod.write_module(&tModule);\par
 2211         cryp code; code.encryp(Address_Module);\par
 2212         this->setInterface_Alarm(Address_Module);\par
 2213     \}\par
 2214 \}\par
}
}
{\xe \v on_pbDeleteRows_clicked\:formModule}
{\xe \v formModule\:on_pbDeleteRows_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbDeleteRows_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbDeleteRows_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2412 \{\par
 2413     struct t_module tModule; module mod;\par
 2414     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2415     QString tmp; QStringList list1; QStringList list2;\par
 2416     mod.read_module(&tModule, Address_Module);\par
 2417     if (this->ui->tabWidget->currentIndex() == 4) \{\par
 2418         list1 = tModule.sumber;\par
 2419         for (int i = 0; i < tModule.jml_sumber; i++) \{\par
 2420             if (check_source[i]->isChecked()) \{\par
 2421                 list1[i] = "";\par
 2422             \}\par
 2423         \}\par
 2424         tModule.sumber.clear(); tModule.jml_sumber = 0;\par
 2425         for (int i = 0; i < list1.length(); i++) \{\par
 2426             if (list1.at(i) != "") \{\par
 2427               tmp = list1.at(i);\par
 2428                 list2 = tmp.split(';');\par
 2429                 tmp = QString::number(tModule.jml_sumber+1) + ";" +\par
 2430                         list2.at(1) + ";" +\par
 2431                         list2.at(2) + ";" +\par
 2432                         list2.at(3) + ";" +\par
 2433                         list2.at(4) + ";" +\par
 2434                         list2.at(5);\par
 2435                 tModule.sumber.insert(tModule.jml_sumber,tmp);\par
 2436                 tModule.jml_sumber++;\par
 2437             \}\par
 2438         \}\par
 2439         mod.write_module(&tModule);\par
 2440         cryp code; code.encryp(Address_Module);\par
 2441         for (int i = 0; i <= this->ui->tabel_sources->rowCount(); i++) \{\par
 2442             this->ui->tabel_sources->removeRow(i);\par
 2443         \}\par
 2444         this->setInterface_Sumber(Address_Module);\par
 2445     \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 2446         list1 = tModule.alarm;\par
 2447         for (int i = 0; i < tModule.jml_alarm; i++) \{\par
 2448             if (check_alarm[i]->isChecked()) \{\par
 2449                 list1[i] = "";\par
 2450             \}\par
 2451         \}\par
 2452         tModule.alarm.clear(); tModule.jml_alarm = 0;\par
 2453         for (int i = 0; i < list1.length(); i++) \{\par
 2454             if (list1.at(i) != "") \{\par
 2455                 tmp = list1.at(i);\par
 2456                 list2 = tmp.split(';');\par
 2457                 tmp = QString::number(tModule.jml_alarm+1) + ";" +\par
 2458                         list2.at(1) + ";" +\par
 2459                         list2.at(2) + ";" +\par
 2460                         list2.at(3) + ";" +\par
 2461                         list2.at(4) + ";" +\par
 2462                         list2.at(5) + ";" +\par
 2463                         list2.at(6) + ";" +\par
 2464                         list2.at(7) + ";" +\par
 2465                         list2.at(8) + ";" +\par
 2466                         list2.at(9) + ";" +\par
 2467                         list2.at(10);\par
 2468                 tModule.alarm.insert(tModule.jml_alarm,tmp);\par
 2469                 tModule.jml_alarm++;\par
 2470             \}\par
 2471         \}\par
 2472         mod.write_module(&tModule);\par
 2473         cryp code; code.encryp(Address_Module);\par
 2474         for (int i = 0; i <= this->ui->tabel_alarm->rowCount(); i++) \{\par
 2475             this->ui->tabel_alarm->removeRow(i);\par
 2476         \}\par
 2477         this->setInterface_Alarm(Address_Module);\par
 2478     \}\par
 2479 \}\par
}
}
{\xe \v on_pbEdit_clicked\:formModule}
{\xe \v formModule\:on_pbEdit_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbEdit_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbEdit_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2061 \{\par
 2062     bool fail = false; QString message;\par
 2063     if (this->ui->tabWidget->currentIndex() == 2) \{\par
 2064         faddModule = new form_addModule(this, false, Address_Module, this->ui->tabWidget->currentIndex());\par
 2065         faddModule->setWindowTitle("Edit Communications");\par
 2066         faddModule->setModal(true);\par
 2067         message = "SIM Configuration On-Local";\par
 2068     \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 2069         faddModule = new form_addModule(this, false, Address_Module, this->ui->tabWidget->currentIndex());\par
 2070         faddModule->setWindowTitle("Edit Environtments");\par
 2071         faddModule->setModal(true);\par
 2072         message = "Environtment On-Local";\par
 2073     \}\par
 2074     faddModule->exec();\par
 2075 \par
 2076     if (faddModule->accept == 0) return;\par
 2077 \par
 2078     Address_Module = faddModule->currentFile;\par
 2079     this->setInterface(Address_Module);\par
 2080     this->setWindowTitle(\par
 2081                 Address_Module.mid(Address_Module.indexOf("m_")+2,\par
 2082                                    Address_Module.indexOf(".dbe")).remove(".dbe"));\par
 2083     struct t_module tModule;\par
 2084     struct t_serial_settings tSerial;\par
 2085     QStringList val_data;\par
 2086 \par
 2087     mod.read_module(&tModule, Address_Module);\par
 2088     if (Serial_Com->isOpen()) \{\par
 2089         this->writeLogFile();\par
 2090         this->EnableButton(false);\par
 2091 \par
 2092         if (this->ui->tabWidget->currentIndex() == 2) \{\par
 2093 //            timeout = work->Set_SIM(this, busyForm, Serial_Com, &tModule, false);\par
 2094 //            if (timeout) \{fail = true;\} else \{fail = false;\}// return;\};\par
 2095 \par
 2096 //            timeout = work->Request_SIM(this, busyForm, Serial_Com, false);\par
 2097 //            if (timeout) \{fail = true;\} else \{\par
 2098 //                Serial->read_parsing(&tSerial);\par
 2099 //                val_data = tSerial.str_data_sim.split("*");\par
 2100 //                work->Get_SIM(&tModule, val_data);\par
 2101 //            \}\par
 2102 \par
 2103             progress_dialog->show();\par
 2104             progress_dialog->setWindowTitle("Set SIM Configuration to board ..");\par
 2105             progress_dialog->Processing(Serial_Com, Address_Module, "0101;0001");\par
 2106             progress_dialog->close();\par
 2107             mod.read_module(&tModule, Address_Module);\par
 2108 \par
 2109             this->setInterface_Communication(Address_Module);\par
 2110             message = "SIM Configuration On-Board";\par
 2111         \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 2112 //            timeout = work->Set_ENV(this, busyForm, Serial_Com, &tModule, false);\par
 2113 //            if (timeout) \{fail = true;\} else \{fail = false;\}// return;\};\par
 2114 \par
 2115 //            timeout = work->Request_ENV(this, busyForm, Serial_Com, false);\par
 2116 //            if (timeout) \{fail = true;\} else \{\par
 2117 //                Serial->read_parsing(&tSerial);\par
 2118 //                val_data = tSerial.str_data_env.split(";");\par
 2119 //                work->Get_ENV(&tModule, val_data);\par
 2120 //            \}\par
 2121 \par
 2122             progress_dialog->show();\par
 2123             progress_dialog->setWindowTitle("Set Environtment to board ..");\par
 2124             progress_dialog->Processing(Serial_Com, Address_Module, "0100;0000");\par
 2125             progress_dialog->close();\par
 2126             mod.read_module(&tModule, Address_Module);\par
 2127 \par
 2128             this->setInterface_Environtment(Address_Module);\par
 2129             message = "Environtment On-Board";\par
 2130         \}\par
 2131 \par
 2132         if (!fail) \{\par
 2133             message.prepend("Setting ").append(" Success ..");\par
 2134             QMessageBox::information(this, "Syncronization Board !!", message, 0, 0);\par
 2135         \} else \{\par
 2136             QMessageBox::information(this, "Serial Communication", STR_TIMEOUT, 0, 0);\par
 2137         \}\par
 2138 \par
 2139         this->EnableButton(true);\par
 2140     \} else \{\par
 2141         message.prepend("Setting ").append(" Success ..");\par
 2142         QMessageBox::information(this, "Syncronization Board !!", message, 0, 0);\par
 2143     \}\par
 2144 \par
 2145     NoSeri = tModule.serial_number;\par
 2146 \}\par
}
}
{\xe \v on_pbGet_clicked\:formModule}
{\xe \v formModule\:on_pbGet_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbGet_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbGet_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1992 \{\par
 1993     struct t_module tModule;\par
 1994     struct t_serial_settings tSerial;\par
 1995     QStringList val_data;\par
 1996     QString Message;\par
 1997     bool timeout = false;\par
 1998     bool fail = false;\par
 1999     QString Request;\par
 2000 \par
 2001     this->EnableButton(false);\par
 2002     if (!Serial_Com->isOpen()) \{\par
 2003         QMessageBox::warning(this, "Serial Comunication", "Protocol is not open ..!!", 0, 0);\par
 2004         this->EnableButton(true);\par
 2005     \} else \{\par
 2006         this->writeLogFile();\par
 2007         timeout = work->Request_ENV(Serial_Com, false);\par
 2008         if (timeout) \{fail = true;\} else \{\par
 2009             Serial->read_parsing(&tSerial);\par
 2010             val_data = tSerial.str_data_env.split(";");\par
 2011             if (NoSeri == val_data.at(1)) \{\par
 2012                 module mod;\par
 2013                 mod.read_module(&tModule, Address_Module);\par
 2014 \par
 2015                 if (this->ui->tabWidget->currentIndex() <= 1) \{\par
 2016                     Message = "I/O ";\par
 2017                     Request = "0005;0002";\par
 2018                 \} else if (this->ui->tabWidget->currentIndex() == 2) \{\par
 2019                     Message = "SIM Configuration ";\par
 2020                     Request = "0001";\par
 2021                 \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 2022                     Message = "Environtment ";\par
 2023                     Request = "0000";\par
 2024                 \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 2025                     Message = "Sources ";\par
 2026                     Request = "0004";\par
 2027                 \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 2028 \par
 2029                     Message = "Alarm ";\par
 2030                 \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 2031                     Message = "Data ";\par
 2032                     Request = "0005";\par
 2033                 \}\par
 2034 \par
 2035                 progress_dialog->show();\par
 2036                 progress_dialog->setWindowTitle("Get " + Message + "from board");\par
 2037                 progress_dialog->Processing(Serial_Com, Address_Module, Request);\par
 2038                 progress_dialog->close();\par
 2039                 mod.read_module(&tModule, Address_Module);\par
 2040 \par
 2041                 this->setInterface(Address_Module);\par
 2042 \par
 2043                 Message.append(" Setting is Syncronized ..");\par
 2044                 if (!fail) \{\par
 2045                     QMessageBox::information(this, "Syncronization Board", Message, 0, 0);\par
 2046                 \} else \{\par
 2047                     QMessageBox::information(this, "Serial Communication", STR_TIMEOUT, 0, 0);\par
 2048                 \}\par
 2049                 this->EnableButton(true);\par
 2050             \} else \{\par
 2051                 if (!fail) \{\par
 2052                     QMessageBox::warning(this, "Serial Comunication", "Serial Number is not syncronize ..!!", 0, 0);\par
 2053                 \}\par
 2054                 this->EnableButton(true);\par
 2055             \}\par
 2056         \}\par
 2057     \}\par
 2058 \}\par
}
}
{\xe \v on_pbGetAll_clicked\:formModule}
{\xe \v formModule\:on_pbGetAll_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbGetAll_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbGetAll_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1947 \{\par
 1948     struct t_module tModule;\par
 1949     struct t_serial_settings tSerial;\par
 1950     QStringList val_data;\par
 1951     bool timeout = false;\par
 1952     bool fail = false;\par
 1953 \par
 1954     this->EnableButton(false);\par
 1955     if (!Serial_Com->isOpen()) \{\par
 1956         QMessageBox::warning(this, "Serial Comunication", "Protocol is not open ..!!", 0, 0);\par
 1957         this->EnableButton(true);\par
 1958     \} else \{\par
 1959         this->writeLogFile();\par
 1960         timeout = work->Request_ENV(Serial_Com, false);\par
 1961         if (timeout) \{fail = true;\} else \{\par
 1962             Serial->read_parsing(&tSerial);\par
 1963             val_data = tSerial.str_data_env.split(";");\par
 1964             if (NoSeri == val_data.at(1)) \{\par
 1965                 module mod;\par
 1966                 mod.read_module(&tModule, Address_Module);\par
 1967 \par
 1968                 progress_dialog->show();\par
 1969                 progress_dialog->setWindowTitle("Get All Configuration from board");\par
 1970                 progress_dialog->Processing(Serial_Com, Address_Module, "0005;0002;0001;0004");\par
 1971                 progress_dialog->close();\par
 1972                 mod.read_module(&tModule, Address_Module);\par
 1973 \par
 1974                 this->setInterface(Address_Module);\par
 1975                 if (!fail) \{\par
 1976                     QMessageBox::information(this, "Syncronization Board", "All Setting is Syncronized ..", 0, 0);\par
 1977                 \} else \{\par
 1978                     QMessageBox::information(this, "Serial Communication", STR_TIMEOUT, 0, 0);\par
 1979                 \}\par
 1980                 this->EnableButton(true);\par
 1981             \} else \{\par
 1982                 if (!fail) \{\par
 1983                     QMessageBox::warning(this, "Serial Comunication", "Serial Number is not syncronize ..!!", 0, 0);\par
 1984                 \}\par
 1985                 this->EnableButton(true);\par
 1986             \}\par
 1987         \}\par
 1988     \}\par
 1989 \}\par
}
}
{\xe \v on_pbRefresh_clicked\:formModule}
{\xe \v formModule\:on_pbRefresh_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbRefresh_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbRefresh_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2482 \{\par
 2483     this->ui->pbRefresh->setEnabled(false);\par
 2484     this->data_monitoring();\par
 2485     this->ui->pbRefresh->setEnabled(true);\par
 2486 \}\par
}
}
{\xe \v on_pbSet_clicked\:formModule}
{\xe \v formModule\:on_pbSet_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbSet_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbSet_clicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ON MODULE FILE\par
SET INPUT\par
SET OUTPUT\par
SET SUMBER\par
SET ALARM\par
SET DATA\par
ON BOARD \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1327 \{\par
 1328     struct t_module tModule;\par
 1329     QString data[60];\par
 1330     indx = 0;\par
 1331     diff = 0;\par
 1332     reset = 0;\par
 1333     timeout = false;\par
 1334     fail = false;\par
 1335 \par
 1336     module mod;\par
 1337     mod.read_module(&tModule, Address_Module);\par
 1338 \par
 1340     if (this->ui->tabWidget->currentIndex() == 0) \{\par
 1342         for (int i = 0; i < ui->tabel_input->rowCount(); i++)\par
 1343         \{\par
 1344             tModule.d_port[i].calib_m = calib_m[i]->value();\par
 1345             tModule.d_port[i].calib_x = calib_x[i]->value();\par
 1346 \par
 1347             if (i >= 6) \{\par
 1348                 if (type_input[i]->currentIndex() == 0) \{indx = 250;\}\par
 1349                 if (type_input[i]->currentIndex() == 1) \{indx = 230;\}\par
 1350                 tModule.d_port[i].type_input = indx;\par
 1351 \par
 1352                 data[i].sprintf("A;%d;%d;%.3f;%.3f", i+1\par
 1353                                 , indx\par
 1354                                 , tModule.d_port[i].calib_m\par
 1355                                 , tModule.d_port[i].calib_x);\par
 1356             \} else \{\par
 1357                 if (type_input[i]->currentIndex() == 0) \{indx = 1;\}\par
 1358                 if (type_input[i]->currentIndex() == 1) \{indx = 2;\}\par
 1359                 if (type_input[i]->currentIndex() == 2) \{indx = 6;\}\par
 1360                 if (type_input[i]->currentIndex() == 3) \{indx = 7;\}\par
 1361                 if (type_input[i]->currentIndex() == 4) \{indx = 9;\}\par
 1362                 tModule.d_port[i].type_input = indx;\par
 1363 \par
 1364                 data[i].sprintf("D;%d;%d;%.3f;%.3f", i+1\par
 1365                                 , indx\par
 1366                                 , tModule.d_port[i].calib_m\par
 1367                                 , tModule.d_port[i].calib_x);\par
 1368             \}\par
 1369             tModule.Input[i] = data[i];\par
 1370             tModule.InputName[i] = name_input[i]->text();\par
 1371 \par
 1372             data[i] = tModule.data.at(i);\par
 1373             list = data[i].split(';');\par
 1374             list[1] = reg_input[i]->currentText();\par
 1375             list[2] = name_input[i]->text();\par
 1376             list[11] = QString::number(state_input[i]->currentIndex());\par
 1377             data[i].clear();\par
 1378             data[i] = list[0];\par
 1379             for (int j = 1; j < 12; j++) \{\par
 1380                 data[i].append(";").append(list[j]);\par
 1381             \}\par
 1382             tModule.data[i] = data[i];\par
 1383         \}\par
 1384     \} else if (this->ui->tabWidget->currentIndex() == 1) \{\par
 1386         for (int i = 0; i < ui->tabel_output->rowCount(); i++)\par
 1387         \{\par
 1388             tModule.d_port[i].status_output = state_output[i]->currentIndex();\par
 1389             tModule.d_port[i].control = control[i]->currentIndex();\par
 1390             tModule.d_port[i].reg_output = reg_output[i]->value();\par
 1391 \par
 1392             data[i].sprintf("R;%d;%d;%d;%d", i+1\par
 1393                          , tModule.d_port[i].status_output\par
 1394                          , tModule.d_port[i].control\par
 1395                          , tModule.d_port[i].reg_output);\par
 1396 \par
 1397             tModule.Output[i] = data[i];\par
 1398 //            tModule.OutputName[i] = name_output[i]->text();\par
 1399         \}\par
 1400     \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1402         for (int i = 0; i < ui->tabel_sources->rowCount(); i++) \{\par
 1403             data[i] = QString::number(i+1) + ";" +\par
 1404                       name_source[i]->text() + ";" +\par
 1405                       ip_source[i]->text() + ";" +\par
 1406                       QString::number(port_source[i]->value()) + ";" +\par
 1407                       QString::number(state_source[i]->currentIndex()) + ";" +\par
 1408                       QString::number(type_source[i]->currentIndex()) + ";" +\par
 1409                       QString::number(id_source[i]->value()) + ";" +\par
 1410                       QString::number(sensor_reg_source[i]->value()) + ";" +\par
 1411 //                      QString::number(OffsetBase_source[i]->currentIndex()) + ";" +\par
 1412                       "0;" +\par
 1413                       QString::number(command_source[i]->currentIndex()) + ";" +\par
 1414                       length_source[i]->currentText() + ";" +\par
 1415                       target_reg_source[i]->currentText();\par
 1416 \par
 1417             tModule.sumber[i] = data[i];\par
 1418         \}\par
 1419     \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1421         for (int i = 0; i < ui->tabel_alarm->rowCount(); i++) \{\par
 1422             data[i] = QString::number(i+1) + ";" +\par
 1423                       name_alarm[i]->text() + ";" +\par
 1424                       QString::number(input_alarm[i]->currentIndex()) + ";" +\par
 1425                       QString::number(output_alarm[i]->currentIndex()) + ";" +\par
 1426                       QString::number(state_alarm[i]->currentIndex()) + ";" +\par
 1427                       range_l[i]->text() + ";" +\par
 1428                       batas_ll[i]->text() + ";" +\par
 1429                       batas_l[i]->text() + ";" +\par
 1430                       batas_h[i]->text() + ";" +\par
 1431                       batas_hh[i]->text() + ";" +\par
 1432                       range_h[i]->text();\par
 1433 \par
 1434             tModule.alarm[i] = data[i];\par
 1435             for (int j = 0; j < tModule.jml_data; j++) \{\par
 1436                 str = tModule.data.at(j);\par
 1437                 list = str.split(';');\par
 1438                 if (input_alarm[i]->currentIndex() > 0 &&\par
 1439                         input_alarm[i]->currentIndex() <= tModule.jml_input_digital) \{\par
 1440                     if (QString::number(input_alarm[i]->currentIndex()) == list.at(0)) \{\par
 1441                         str = list.at(0) + ";" +\par
 1442                               list.at(1) + ";" +\par
 1443                               name_alarm[i]->text() + ";" +\par
 1444                               list.at(3) + ";" +\par
 1445                               list.at(4) + ";" +\par
 1446                               range_l[i]->text() + ";" +\par
 1447                               batas_ll[i]->text() + ";" +\par
 1448                               batas_l[i]->text() + ";" +\par
 1449                               batas_h[i]->text() + ";" +\par
 1450                               batas_hh[i]->text() + ";" +\par
 1451                               range_h[i]->text() + ";" +\par
 1452                               list.at(11); //QString::number(state_alarm[i]->currentIndex());\par
 1453 \par
 1454                         tModule.data[j] = str;\par
 1455                     \}\par
 1456                 \} else if (input_alarm[i]->currentIndex() > tModule.jml_input_digital &&\par
 1457                            input_alarm[i]->currentIndex() <= tModule.jml_input_digital + tModule.jml_input_analog) \{\par
 1458                     if (QString::number(input_alarm[i]->currentIndex()+4) == list.at(0)) \{\par
 1459                         str = list.at(0) + ";" +\par
 1460                               list.at(1) + ";" +\par
 1461                               name_alarm[i]->text() + ";" +\par
 1462                               list.at(3) + ";" +\par
 1463                               list.at(4) + ";" +\par
 1464                               range_l[i]->text() + ";" +\par
 1465                               batas_ll[i]->text() + ";" +\par
 1466                               batas_l[i]->text() + ";" +\par
 1467                               batas_h[i]->text() + ";" +\par
 1468                               batas_hh[i]->text() + ";" +\par
 1469                               range_h[i]->text() + ";" +\par
 1470                               list.at(11); //QString::number(state_alarm[i]->currentIndex());\par
 1471 \par
 1472                         tModule.data[j] = str;\par
 1473                     \}\par
 1474                 \}\par
 1475             \}\par
 1476         \}\par
 1477     \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1479         for (int i = 0; i < ui->tabel_data_s->rowCount(); i++) \{\par
 1480             data[i] = QString::number(i+1) + ";" +\par
 1481                       QString::number(id_data_s[i]->value()) + ";" +\par
 1482                       name_data_s[i]->text() + ";" +\par
 1483                       "0;" +\par
 1484                       unit_data_s[i]->text() + ";" +\par
 1485                       QString::number(range_l_data_s[i]->value()) + ";" +\par
 1486                       QString::number(border_ll_data_s[i]->value()) + ";" +\par
 1487                       QString::number(border_l_data_s[i]->value()) + ";" +\par
 1488                       QString::number(border_h_data_s[i]->value()) + ";" +\par
 1489                       QString::number(border_hh_data_s[i]->value()) + ";" +\par
 1490                       QString::number(range_h_data_s[i]->value()) + ";" +\par
 1491                       QString::number(state_data_s[i]->currentIndex());\par
 1492 \par
 1493             tModule.data[i] = data[i];\par
 1494         \}\par
 1495     \}\par
 1496 \par
 1497     mod.write_module(&tModule);\par
 1498     cryp code; code.encryp(Address_Module);\par
 1499 \par
 1501     if (Serial_Com->isOpen()) \{\par
 1502         this->writeLogFile();\par
 1503         this->EnableButton(false);\par
 1504 \par
 1505         struct t_serial_settings tSerial;\par
 1506         QString Request; QStringList val_data;\par
 1507 \par
 1508         timeout = work->Request_ENV(Serial_Com, false);\par
 1509         if (timeout) \{fail = true;\} else \{\par
 1510             Serial->read_parsing(&tSerial);\par
 1511             val_data = tSerial.str_data_env.split(";");\par
 1512             if (NoSeri == val_data.at(1)) \{\par
 1513                 if (this->ui->tabWidget->currentIndex() == 0) \{\par
 1514                     Request = "0102";\par
 1515                 \} else if (this->ui->tabWidget->currentIndex() == 1) \{\par
 1516                     Request = "0103";\par
 1517                 \} else if (this->ui->tabWidget->currentIndex() == 2) \{\par
 1518                     Request = "0101";\par
 1519                 \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 1520                     Request = "0100";\par
 1521                 \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1522                     Request = "0104";\par
 1523                 \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1524 \par
 1525                 \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1526                     Request = "0105";\par
 1527                 \}\par
 1528 //                work->Reset_Board(busyForm, "Reset Board ...", Serial_Com);\par
 1529                 if (this->ui->tabWidget->currentIndex() <= 1) \{\par
 1530                     Request = Request + ";0005;0002";\par
 1531                 \} else if (this->ui->tabWidget->currentIndex() == 2) \{\par
 1532                     Request = Request + ";0001";\par
 1533                 \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 1534                     Request = Request + ";0000";\par
 1535                 \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1536                     Request = Request + ";0004;0005";\par
 1537                 \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1538 \par
 1539                 \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1540                     Request = Request + ";0005";\par
 1541                 \}\par
 1542 \par
 1543                 progress_dialog->show();\par
 1544                 progress_dialog->setWindowTitle("Set " + Message + "to board");\par
 1545                 progress_dialog->Processing(Serial_Com, Address_Module, Request);\par
 1546                 progress_dialog->close();\par
 1547                 mod.read_module(&tModule, Address_Module);\par
 1548 \par
 1549                 Message = "On-Board";\par
 1550 \par
 1551             \} else \{\par
 1552                 Message = "On-Local";\par
 1553                 if (val_data.at(1) != "") \{\par
 1554                     diff = 1;\par
 1555                 \} else \{\par
 1556                     diff = 2;\par
 1557                 \}\par
 1558             \}\par
 1559         \}\par
 1560     \} else \{\par
 1561         Message = "On-Local";\par
 1562     \}\par
 1563 \par
 1564     if (reset == 1) \{\par
 1565 //        Request = "reset\\r\\n";\par
 1566 //        Serial->write_data(Serial_Com, Request);\par
 1567 //        work->delay(jeda*5);\par
 1568     \}\par
 1569 \par
 1570     mod.write_module(&tModule);\par
 1571     code.encryp(Address_Module);\par
 1572 \par
 1573     this->setInterface(Address_Module);\par
 1574 \par
 1575     if (diff == 0 && !fail) \{\par
 1576         if (this->ui->tabWidget->currentIndex() == 0) \{\par
 1577             Message.prepend("Input Channel ");\par
 1578         \} else if (this->ui->tabWidget->currentIndex() == 1) \{\par
 1579             Message.prepend("Output Channel ");\par
 1580         \} else if (this->ui->tabWidget->currentIndex() == 2) \{\par
 1581             Message.prepend("SIM Configuration ");\par
 1582         \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 1583             Message.prepend("Environtment ");\par
 1584         \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1585             Message.prepend("Sources ");\par
 1586         \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1587             Message.prepend("Alarm ");\par
 1588         \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1589             Message.prepend("Data ");\par
 1590         \}\par
 1591         Message.prepend("Setting ").append(" Saved");\par
 1592         QMessageBox::information(this, "Success!!", Message, 0, 0);\par
 1593     \} else if (diff == 1 && !fail) \{\par
 1594         Message.prepend("Setting ").append(" Saved");\par
 1595         Message.append("\\n\\n Different Serial Number !!!");\par
 1596         QMessageBox::information(this, "Success!!", Message, 0, 0);\par
 1597     \} else if (diff == 2 && !fail) \{\par
 1598         Message.prepend("Setting ").append(" Saved");\par
 1599         Message.append("\\nBoard is not have Serial Number ..");\par
 1600         QMessageBox::information(this, "Success!!", Message, 0, 0);\par
 1601     \}\par
 1602 \par
 1603     if (fail) \{\par
 1604         QMessageBox::information(this, "Serial Communication", STR_TIMEOUT, 0, 0);\par
 1605     \}\par
 1606 \par
 1607     this->EnableButton(true);\par
 1608 \}\par
}
}
{\xe \v on_pbSetAll_clicked\:formModule}
{\xe \v formModule\:on_pbSetAll_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbSetAll_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbSetAll_clicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ON MODULE FILE\par
SET KANAL\par
SET RELAY\par
SET SUMBER\par
SET ALARM\par
SET DATA\par
ON BOARD \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1081 \{\par
 1082     struct t_module tModule;\par
 1083     QString data[60];\par
 1084     indx = 0;\par
 1085     diff = 0;\par
 1086     timeout = false;\par
 1087     fail = false;\par
 1088     cancel = false;\par
 1089 \par
 1090     module mod;\par
 1091     mod.read_module(&tModule, Address_Module);\par
 1092 \par
 1095     for (int i = 0; i < ui->tabel_input->rowCount(); i++)\par
 1096     \{\par
 1097 //        tModule.d_port[i].status_input = state_input[i]->currentIndex();\par
 1098         tModule.d_port[i].calib_m = calib_m[i]->value();\par
 1099         tModule.d_port[i].calib_x = calib_x[i]->value();\par
 1100 \par
 1101         if (i >= 6) \{\par
 1102             if (type_input[i]->currentIndex() == 0) \{indx = 250;\}\par
 1103             if (type_input[i]->currentIndex() == 1) \{indx = 230;\}\par
 1104             tModule.d_port[i].type_input = indx;\par
 1105 \par
 1106             data[i].sprintf("A;%d;%d;%.3f;%.3f", i+1\par
 1107                             , indx\par
 1108                             , tModule.d_port[i].calib_m\par
 1109                             , tModule.d_port[i].calib_x);\par
 1110         \} else \{\par
 1111             if (type_input[i]->currentIndex() == 0) \{indx = 1;\}\par
 1112             if (type_input[i]->currentIndex() == 1) \{indx = 2;\}\par
 1113             if (type_input[i]->currentIndex() == 2) \{indx = 6;\}\par
 1114             if (type_input[i]->currentIndex() == 3) \{indx = 7;\}\par
 1115             if (type_input[i]->currentIndex() == 4) \{indx = 9;\}\par
 1116             tModule.d_port[i].type_input = indx;\par
 1117 \par
 1118             data[i].sprintf("D;%d;%d;%.3f;%.3f", i+1\par
 1119                             , indx\par
 1120                             , tModule.d_port[i].calib_m\par
 1121                             , tModule.d_port[i].calib_x);\par
 1122         \}\par
 1123         tModule.Input[i] = data[i];\par
 1124         tModule.InputName[i] = name_input[i]->text();\par
 1125 \par
 1126         data[i] = tModule.data.at(i);\par
 1127         list = data[i].split(';');\par
 1128         list[1] = reg_input[i]->currentText();\par
 1129         list[2] = name_input[i]->text();\par
 1130         list[11] = QString::number(state_input[i]->currentIndex());\par
 1131         data[i].clear();\par
 1132         data[i] = list[0];\par
 1133         for (int j = 1; j < 12; j++) \{\par
 1134             data[i].append(";").append(list[j]);\par
 1135         \}\par
 1136         tModule.data[i] = data[i];\par
 1137     \}\par
 1138 \par
 1140     for (int i = 0; i < ui->tabel_output->rowCount(); i++)\par
 1141     \{\par
 1142         tModule.d_port[i].status_output = state_output[i]->currentIndex();\par
 1143         tModule.d_port[i].control = control[i]->currentIndex();\par
 1144         tModule.d_port[i].reg_output = reg_output[i]->value();\par
 1145 \par
 1146         data[i].sprintf("R;%d;%d;%d;%d", i+1\par
 1147                      , tModule.d_port[i].status_output\par
 1148                      , tModule.d_port[i].control\par
 1149                      , tModule.d_port[i].reg_output);\par
 1150 \par
 1151         tModule.Output[i] = data[i];\par
 1152 //        tModule.OutputName[i] = name_output[i]->text();\par
 1153     \}\par
 1154 \par
 1156     for (int i = 0; i < ui->tabel_sources->rowCount(); i++) \{\par
 1157         data[i] = QString::number(i+1) + ";" +\par
 1158                   name_source[i]->text() + ";" +\par
 1159                   ip_source[i]->text() + ";" +\par
 1160                   QString::number(port_source[i]->value()) + ";" +\par
 1161                   QString::number(state_source[i]->currentIndex()) + ";" +\par
 1162                   QString::number(type_source[i]->currentIndex()) + ";" +\par
 1163                   QString::number(id_source[i]->value()) + ";" +\par
 1164                   QString::number(sensor_reg_source[i]->value()) + ";" +\par
 1165 //                  QString::number(OffsetBase_source[i]->currentIndex()) + ";" +\par
 1166                   "0;" +\par
 1167                   QString::number(command_source[i]->currentIndex()) + ";" +\par
 1168                   length_source[i]->currentText() + ";" +\par
 1169                   target_reg_source[i]->currentText();\par
 1170 \par
 1171         tModule.sumber[i] = data[i];\par
 1172     \}\par
 1173 \par
 1175     for (int i = 0; i < ui->tabel_alarm->rowCount(); i++) \{\par
 1176         data[i] = QString::number(i+1) + ";" +\par
 1177                   name_alarm[i]->text() + ";" +\par
 1178                   QString::number(input_alarm[i]->currentIndex()) + ";" +\par
 1179                   QString::number(output_alarm[i]->currentIndex()) + ";" +\par
 1180                   QString::number(state_alarm[i]->currentIndex()) + ";" +\par
 1181                   range_l[i]->text() + ";" +\par
 1182                   batas_ll[i]->text() + ";" +\par
 1183                   batas_l[i]->text() + ";" +\par
 1184                   batas_h[i]->text() + ";" +\par
 1185                   batas_hh[i]->text() + ";" +\par
 1186                   range_h[i]->text();\par
 1187 \par
 1188         tModule.alarm[i] = data[i];\par
 1189         for (int j = 0; j < tModule.jml_data; j++) \{\par
 1190             str = tModule.data.at(j);\par
 1191             list = str.split(';');\par
 1192             if (input_alarm[i]->currentIndex() > 0 &&\par
 1193                     input_alarm[i]->currentIndex() < tModule.jml_input_digital) \{\par
 1194                 if (QString::number(input_alarm[i]->currentIndex()) == list.at(0)) \{\par
 1195                     str = list.at(0) + ";" +\par
 1196                           list.at(1) + ";" +\par
 1197                           name_alarm[i]->text() + ";" +\par
 1198                           list.at(3) + ";" +\par
 1199                           list.at(4) + ";" +\par
 1200                           range_l[i]->text() + ";" +\par
 1201                           batas_ll[i]->text() + ";" +\par
 1202                           batas_l[i]->text() + ";" +\par
 1203                           batas_h[i]->text() + ";" +\par
 1204                           batas_hh[i]->text() + ";" +\par
 1205                           range_h[i]->text() + ";" +\par
 1206                           list.at(11); //QString::number(state_alarm[i]->currentIndex());\par
 1207 \par
 1208                     tModule.data[j] = str;\par
 1209                 \}\par
 1210             \} else if (input_alarm[i]->currentIndex() > tModule.jml_input_digital &&\par
 1211                        input_alarm[i]->currentIndex() < tModule.jml_input_digital + tModule.jml_input_analog) \{\par
 1212                 if (QString::number(input_alarm[i]->currentIndex()+4) == list.at(0)) \{\par
 1213                     str = list.at(0) + ";" +\par
 1214                           list.at(1) + ";" +\par
 1215                           name_alarm[i]->text() + ";" +\par
 1216                           list.at(3) + ";" +\par
 1217                           list.at(4) + ";" +\par
 1218                           range_l[i]->text() + ";" +\par
 1219                           batas_ll[i]->text() + ";" +\par
 1220                           batas_l[i]->text() + ";" +\par
 1221                           batas_h[i]->text() + ";" +\par
 1222                           batas_hh[i]->text() + ";" +\par
 1223                           range_h[i]->text() + ";" +\par
 1224                           list.at(11); //QString::number(state_alarm[i]->currentIndex());\par
 1225 \par
 1226                     tModule.data[j] = str;\par
 1227                 \}\par
 1228             \}\par
 1229         \}\par
 1230     \}\par
 1231 \par
 1233     for (int i = 0; i < ui->tabel_data_s->rowCount(); i++) \{\par
 1234         data[i] = QString::number(i+1) + ";" +\par
 1235                   QString::number(id_data_s[i]->value()) + ";" +\par
 1236                   name_data_s[i]->text() + ";" +\par
 1237                   "0;" +\par
 1238                   unit_data_s[i]->text() + ";" +\par
 1239                   QString::number(range_l_data_s[i]->value()) + ";" +\par
 1240                   QString::number(border_ll_data_s[i]->value()) + ";" +\par
 1241                   QString::number(border_l_data_s[i]->value()) + ";" +\par
 1242                   QString::number(border_h_data_s[i]->value()) + ";" +\par
 1243                   QString::number(border_hh_data_s[i]->value()) + ";" +\par
 1244                   QString::number(range_h_data_s[i]->value()) + ";" +\par
 1245                   QString::number(state_data_s[i]->currentIndex());\par
 1246 \par
 1247         tModule.data[i] = data[i];\par
 1248     \}\par
 1249 \par
 1250     mod.write_module(&tModule);\par
 1251     cryp code; code.encryp(Address_Module);\par
 1252 \par
 1254     if (Serial_Com->isOpen()) \{\par
 1255         this->writeLogFile();\par
 1256         this->EnableButton(false);\par
 1257 \par
 1258         struct t_serial_settings tSerial;\par
 1259         QStringList val_data;\par
 1260 \par
 1261         timeout = work->Request_ENV(Serial_Com, false);\par
 1262         if (timeout) \{fail = true;\} else \{\par
 1263             Serial->read_parsing(&tSerial);\par
 1264             val_data = tSerial.str_data_env.split(";");\par
 1265             if (NoSeri == val_data.at(1)) \{\par
 1266                 if (!fail) \{\par
 1267                     progress_dialog->show();\par
 1268                     progress_dialog->setWindowTitle("Set All Configuration to board ..");\par
 1269                     progress_dialog->Processing(Serial_Com, Address_Module, "0102;0103;0101;0104;0105;0005;0002;0001;0004");\par
 1270                     cancel = progress_dialog->cancel;\par
 1271                     progress_dialog->close();\par
 1272                     mod.read_module(&tModule, Address_Module);\par
 1273                 \}\par
 1274 \par
 1275                 Message = "On-Board";\par
 1276 \par
 1277             \} else \{\par
 1278                 Message = "On-Local";\par
 1279                 if (val_data.at(1) != "") \{\par
 1280                     diff = 1;\par
 1281                 \} else \{\par
 1282                     diff = 2;\par
 1283                 \}\par
 1284             \}\par
 1285         \}\par
 1286     \} else \{\par
 1287         Message = "On-Local";\par
 1288     \}\par
 1289 \par
 1290 //    if (reset == 1) \{\par
 1291 //        Request = "reset\\r\\n";\par
 1292 //        Serial->write_data(Serial_Com, Request);\par
 1293 //        work->delay(jeda*5);\par
 1294 //    \}\par
 1295 \par
 1296     mod.write_module(&tModule);\par
 1297     code.encryp(Address_Module);\par
 1298 \par
 1299     this->setInterface(Address_Module);\par
 1300 \par
 1301     if (diff == 0 && !fail) \{\par
 1302         if (cancel) \{\par
 1303             Message.prepend("Setting ").append(" Canceled");\par
 1304             QMessageBox::information(this, "Cancel!!", Message, 0, 0);\par
 1305         \} else \{\par
 1306             Message.prepend("Setting ").append(" Saved");\par
 1307             QMessageBox::information(this, "Success!!", Message, 0, 0);\par
 1308         \}\par
 1309     \} else if (diff == 1 && !fail) \{\par
 1310         Message.prepend("Setting ").append(" Error !!");\par
 1311         Message.append("\\n\\n Different Serial Number !!!");\par
 1312         QMessageBox::information(this, "Error!!", Message, 0, 0);\par
 1313     \} else if (diff == 2 && !fail) \{\par
 1314         Message.prepend("Setting ").append(" Error !!");\par
 1315         Message.append("\\nBoard Serial Number is not exist ..");\par
 1316         QMessageBox::information(this, "Error!!", Message, 0, 0);\par
 1317     \}\par
 1318 \par
 1319     if (fail) \{\par
 1320         QMessageBox::information(this, "Serial Communication", STR_TIMEOUT, 0, 0);\par
 1321     \}\par
 1322 \par
 1323     this->EnableButton(true);\par
 1324 \}\par
}
}
{\xe \v on_pbSetChk_clicked\:formModule}
{\xe \v formModule\:on_pbSetChk_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbSetChk_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbSetChk_clicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ON MODULE FILE\par
SET INPUT\par
SET OUTPUT\par
SET SUMBER\par
SET ALARM\par
SET DATA\par
ON BOARD \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1611 \{\par
 1612     struct t_module tModule;\par
 1613     QString data[60];\par
 1614     indx = 0;\par
 1615     diff = 0;\par
 1616     reset = 0;\par
 1617     timeout = false;\par
 1618     fail = false;\par
 1619     int checked = 0;\par
 1620     Request.clear();\par
 1621 \par
 1622     module mod;\par
 1623     mod.read_module(&tModule, Address_Module);\par
 1624 \par
 1626     if (this->ui->tabWidget->currentIndex() == 0) \{\par
 1628         for (int i = 0; i < ui->tabel_input->rowCount(); i++) \{\par
 1629             if (check_input[i]->isChecked()) \{\par
 1630                 checked++;\par
 1631                 tModule.d_port[i].calib_m = calib_m[i]->value();\par
 1632                 tModule.d_port[i].calib_x = calib_x[i]->value();\par
 1633 \par
 1634                 if (i >= 6) \{\par
 1635                     if (type_input[i]->currentIndex() == 0) \{indx = 250;\}\par
 1636                     if (type_input[i]->currentIndex() == 1) \{indx = 230;\}\par
 1637                     tModule.d_port[i].type_input = indx;\par
 1638 \par
 1639                     data[i].sprintf("A;%d;%d;%.3f;%.3f", i+1\par
 1640                                     , indx\par
 1641                                     , tModule.d_port[i].calib_m\par
 1642                                     , tModule.d_port[i].calib_x);\par
 1643                 \} else \{\par
 1644                     if (type_input[i]->currentIndex() == 0) \{indx = 1;\}\par
 1645                     if (type_input[i]->currentIndex() == 1) \{indx = 2;\}\par
 1646                     if (type_input[i]->currentIndex() == 2) \{indx = 6;\}\par
 1647                     if (type_input[i]->currentIndex() == 3) \{indx = 7;\}\par
 1648                     if (type_input[i]->currentIndex() == 4) \{indx = 9;\}\par
 1649                     tModule.d_port[i].type_input = indx;\par
 1650 \par
 1651                     data[i].sprintf("D;%d;%d;%.3f;%.3f", i+1\par
 1652                                     , indx\par
 1653                                     , tModule.d_port[i].calib_m\par
 1654                                     , tModule.d_port[i].calib_x);\par
 1655                 \}\par
 1656                 tModule.Input[i] = data[i];\par
 1657                 tModule.InputName[i] = name_input[i]->text();\par
 1658 \par
 1659                 data[i] = tModule.data.at(i);\par
 1660                 list = data[i].split(';');\par
 1661                 list[1] = reg_input[i]->currentText();\par
 1662                 list[2] = name_input[i]->text();\par
 1663                 list[11] = QString::number(state_input[i]->currentIndex());\par
 1664                 data[i].clear();\par
 1665                 data[i] = list[0];\par
 1666                 for (int j = 1; j < 12; j++) \{\par
 1667                     data[i].append(";").append(list[j]);\par
 1668                 \}\par
 1669                 tModule.data[i] = data[i];\par
 1670             \}\par
 1671         \}\par
 1672     \} else if (this->ui->tabWidget->currentIndex() == 1) \{\par
 1674         for (int i = 0; i < ui->tabel_output->rowCount(); i++) \{\par
 1675             if (check_output[i]->isChecked()) \{\par
 1676                 checked++;\par
 1677                 tModule.d_port[i].status_output = state_output[i]->currentIndex();\par
 1678                 tModule.d_port[i].control = control[i]->currentIndex();\par
 1679                 tModule.d_port[i].reg_output = reg_output[i]->value();\par
 1680 \par
 1681                 data[i].sprintf("R;%d;%d;%d;%d", i+1\par
 1682                              , tModule.d_port[i].status_output\par
 1683                              , tModule.d_port[i].control\par
 1684                              , tModule.d_port[i].reg_output);\par
 1685 \par
 1686                 tModule.Output[i] = data[i];\par
 1687 //                tModule.OutputName[i] = name_output[i]->text();\par
 1688             \}\par
 1689         \}\par
 1690     \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1692         for (int i = 0; i < ui->tabel_sources->rowCount(); i++) \{\par
 1693             if (check_source[i]->isChecked()) \{\par
 1694                 checked++;\par
 1695                 data[i] = QString::number(i+1) + ";" +\par
 1696                           name_source[i]->text() + ";" +\par
 1697                           ip_source[i]->text() + ";" +\par
 1698                           QString::number(port_source[i]->value()) + ";" +\par
 1699                           QString::number(state_source[i]->currentIndex()) + ";" +\par
 1700                           QString::number(type_source[i]->currentIndex()) + ";" +\par
 1701                           QString::number(id_source[i]->value()) + ";" +\par
 1702                           QString::number(sensor_reg_source[i]->value()) + ";" +\par
 1703 //                          QString::number(OffsetBase_source[i]->currentIndex()) + ";" +\par
 1704                           "0;" +\par
 1705                           QString::number(command_source[i]->currentIndex()) + ";" +\par
 1706                           length_source[i]->currentText() + ";" +\par
 1707                           target_reg_source[i]->currentText();\par
 1708 \par
 1709                 tModule.sumber[i] = data[i];\par
 1710             \}\par
 1711         \}\par
 1712     \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1714         for (int i = 0; i < ui->tabel_alarm->rowCount(); i++) \{\par
 1715             if (check_alarm[i]->isChecked()) \{\par
 1716                 checked++;\par
 1717                 data[i] = QString::number(i+1) + ";" +\par
 1718                           name_alarm[i]->text() + ";" +\par
 1719                           QString::number(input_alarm[i]->currentIndex()) + ";" +\par
 1720                           QString::number(output_alarm[i]->currentIndex()) + ";" +\par
 1721                           QString::number(state_alarm[i]->currentIndex()) + ";" +\par
 1722                           range_l[i]->text() + ";" +\par
 1723                           batas_ll[i]->text() + ";" +\par
 1724                           batas_l[i]->text() + ";" +\par
 1725                           batas_h[i]->text() + ";" +\par
 1726                           batas_hh[i]->text() + ";" +\par
 1727                           range_h[i]->text();\par
 1728 \par
 1729                 tModule.alarm[i] = data[i];\par
 1730                 for (int j = 0; j < tModule.jml_data; j++) \{\par
 1731                     str = tModule.data.at(j);\par
 1732                     list = str.split(';');\par
 1733                     if (input_alarm[i]->currentIndex() > 0 &&\par
 1734                         input_alarm[i]->currentIndex() <= tModule.jml_input_digital) \{\par
 1735                        if (QString::number(input_alarm[i]->currentIndex()) == list.at(0)) \{\par
 1736                             str = list.at(0) + ";" +\par
 1737                                   list.at(1) + ";" +\par
 1738                                   name_alarm[i]->text() + ";" +\par
 1739                                   list.at(3) + ";" +\par
 1740                                   list.at(4) + ";" +\par
 1741                                   range_l[i]->text() + ";" +\par
 1742                                   batas_ll[i]->text() + ";" +\par
 1743                                   batas_l[i]->text() + ";" +\par
 1744                                   batas_h[i]->text() + ";" +\par
 1745                                   batas_hh[i]->text() + ";" +\par
 1746                                   range_h[i]->text() + ";" +\par
 1747                                   list.at(11); //QString::number(state_alarm[i]->currentIndex());\par
 1748 \par
 1749                             tModule.data[j] = str;\par
 1750                         \}\par
 1751                     \} else if (input_alarm[i]->currentIndex() > tModule.jml_input_digital &&\par
 1752                                input_alarm[i]->currentIndex() <= tModule.jml_input_digital + tModule.jml_input_analog) \{\par
 1753                         if (QString::number(input_alarm[i]->currentIndex()+4) == list.at(0)) \{\par
 1754                             str = list.at(0) + ";" +\par
 1755                                   list.at(1) + ";" +\par
 1756                                   name_alarm[i]->text() + ";" +\par
 1757                                   list.at(3) + ";" +\par
 1758                                   list.at(4) + ";" +\par
 1759                                   range_l[i]->text() + ";" +\par
 1760                                   batas_ll[i]->text() + ";" +\par
 1761                                   batas_l[i]->text() + ";" +\par
 1762                                   batas_h[i]->text() + ";" +\par
 1763                                   batas_hh[i]->text() + ";" +\par
 1764                                   range_h[i]->text() + ";" +\par
 1765                                   list.at(11); //QString::number(state_alarm[i]->currentIndex());\par
 1766 \par
 1767                             tModule.data[j] = str;\par
 1768                         \}\par
 1769                     \}\par
 1770                 \}\par
 1771             \}\par
 1772         \}\par
 1773     \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1775         for (int i = 0; i < ui->tabel_data_s->rowCount(); i++) \{\par
 1776             if (check_data_s[i]->isChecked()) \{\par
 1777                 checked++;\par
 1778                 data[i] = QString::number(i+1) + ";" +\par
 1779                           QString::number(id_data_s[i]->value()) + ";" +\par
 1780                           name_data_s[i]->text() + ";" +\par
 1781                           "0;" +\par
 1782                           unit_data_s[i]->text() + ";" +\par
 1783                           QString::number(range_l_data_s[i]->value()) + ";" +\par
 1784                           QString::number(border_ll_data_s[i]->value()) + ";" +\par
 1785                           QString::number(border_l_data_s[i]->value()) + ";" +\par
 1786                           QString::number(border_h_data_s[i]->value()) + ";" +\par
 1787                           QString::number(border_hh_data_s[i]->value()) + ";" +\par
 1788                           QString::number(range_h_data_s[i]->value()) + ";" +\par
 1789                           QString::number(state_data_s[i]->currentIndex());\par
 1790 \par
 1791                 tModule.data[i] = data[i];\par
 1792             \}\par
 1793         \}\par
 1794     \}\par
 1795 \par
 1796     mod.write_module(&tModule);\par
 1797     cryp code; code.encryp(Address_Module);\par
 1798 \par
 1800     if (Serial_Com->isOpen()) \{\par
 1801         this->writeLogFile();\par
 1802         this->EnableButton(false);\par
 1803 \par
 1804         struct t_serial_settings tSerial;\par
 1805         QStringList val_data;\par
 1806 \par
 1807         timeout = work->Request_ENV(Serial_Com, false);\par
 1808         if (timeout) \{fail = true;\} else \{\par
 1809             Serial->read_parsing(&tSerial);\par
 1810             val_data = tSerial.str_data_env.split(";");\par
 1811             if (NoSeri == val_data.at(1)) \{\par
 1812                 if (this->ui->tabWidget->currentIndex() == 0) \{\par
 1813                     for (int i = 0; i < ui->tabel_input->rowCount(); i++) \{\par
 1814                         if (check_input[i]->isChecked()) \{\par
 1815                             checked++;\par
 1816                             str = tModule.Input.at(i); list = str.split(';');\par
 1817                             if (!progress_dialog->isActiveWindow()) progress_dialog->show();\par
 1818                             progress_dialog->setWindowTitle("Set Input to board");\par
 1819                             if (i < 6) \{\par
 1820                                 progress_dialog->Processing(Serial_Com, Address_Module, "0102;0105", QString::number(i) + ";" + QString::number(i));\par
 1821                             \} else \{\par
 1822                                 progress_dialog->Processing(Serial_Com, Address_Module, "0102;0105", QString::number(i) + ";" + QString::number(i));\par
 1823                             \}\par
 1824                         \}\par
 1825                     \}\par
 1826                 \} else if (this->ui->tabWidget->currentIndex() == 1) \{\par
 1827                     for (int i = 0; i < ui->tabel_output->rowCount(); i++) \{\par
 1828                         if (check_output[i]->isChecked()) \{\par
 1829                             checked++;\par
 1830                             if (!progress_dialog->isActiveWindow()) progress_dialog->show();\par
 1831                             progress_dialog->setWindowTitle("Set Output to board");\par
 1832                             progress_dialog->Processing(Serial_Com, Address_Module, "0103", QString::number(i));\par
 1833                         \}\par
 1834                     \}\par
 1835                 \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1836                     for (int i = 0; i < ui->tabel_sources->rowCount(); i++) \{\par
 1837                         if (check_source[i]->isChecked()) \{\par
 1838                             checked++;\par
 1839                             if (!progress_dialog->isActiveWindow()) progress_dialog->show();\par
 1840                             progress_dialog->setWindowTitle("Set Sources to board");\par
 1841                             progress_dialog->Processing(Serial_Com, Address_Module, "0104", QString::number(i));\par
 1842                         \}\par
 1843                     \}\par
 1844                 \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1845 \par
 1846                 \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1847                     for (int i = 0; i < ui->tabel_data_s->rowCount(); i++) \{\par
 1848                         if (check_data_s[i]->isChecked()) \{\par
 1849                             checked++;\par
 1850                             if (!progress_dialog->isActiveWindow()) progress_dialog->show();\par
 1851                             progress_dialog->setWindowTitle("Set Data to board");\par
 1852                             progress_dialog->Processing(Serial_Com, Address_Module, "0105", QString::number(i));\par
 1853                         \}\par
 1854                     \}\par
 1855                 \}\par
 1856 \par
 1857                 if (checked != 0) \{\par
 1858 //                    progress_dialog->close();\par
 1859                     if (this->ui->tabWidget->currentIndex() <= 1) \{\par
 1860                         Message = "I/O ";\par
 1861                         Request = "0005;0002";\par
 1862                     \} else if (this->ui->tabWidget->currentIndex() == 2) \{\par
 1863                         Message = "SIM Configuration ";\par
 1864                         Request = "0001";\par
 1865                     \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 1866                         Message = "Environtment ";\par
 1867                         Request = "0000";\par
 1868                     \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1869                         Message = "Sources ";\par
 1870                         Request = "0005;0004";\par
 1871                     \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1872                         Message = "Alarm ";\par
 1873                     \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1874                         Message = "Data ";\par
 1875                         Request = "0005";\par
 1876                     \}\par
 1877 //                    progress_dialog->show();\par
 1878                     progress_dialog->setWindowTitle("Get " + Message + "from board");\par
 1879                     progress_dialog->Processing(Serial_Com, Address_Module, Request);\par
 1880                     progress_dialog->close();\par
 1881                     mod.read_module(&tModule, Address_Module);\par
 1882                 \}\par
 1883                 Message = "On-Board";\par
 1884 \par
 1885             \} else \{\par
 1886                 Message = "On-Local";\par
 1887                 if (val_data.at(1) != "") \{\par
 1888                     diff = 1;\par
 1889                 \} else \{\par
 1890                     diff = 2;\par
 1891                 \}\par
 1892             \}\par
 1893         \}\par
 1894     \} else \{\par
 1895         Message = "On-Local";\par
 1896     \}\par
 1897 \par
 1898     if (reset == 1) \{\par
 1899 //        Request = "reset\\r\\n";\par
 1900 //        Serial->write_data(Serial_Com, Request);\par
 1901 //        work->delay(jeda*5);\par
 1902     \}\par
 1903 \par
 1904     mod.write_module(&tModule);\par
 1905     code.encryp(Address_Module);\par
 1906 \par
 1907 //    this->setInterface(Address_Module);\par
 1908     if (checked != 0) \{\par
 1909         if (diff == 0 && !fail) \{\par
 1910             if (this->ui->tabWidget->currentIndex() == 0) \{\par
 1911                 Message.prepend("Input Channel ");\par
 1912             \} else if (this->ui->tabWidget->currentIndex() == 1) \{\par
 1913                 Message.prepend("Output Channel ");\par
 1914             \} else if (this->ui->tabWidget->currentIndex() == 2) \{\par
 1915                 Message.prepend("SIM Configuration ");\par
 1916             \} else if (this->ui->tabWidget->currentIndex() == 3) \{\par
 1917                 Message.prepend("Environtment ");\par
 1918             \} else if (this->ui->tabWidget->currentIndex() == 4) \{\par
 1919                 Message.prepend("Sources ");\par
 1920             \} else if (this->ui->tabWidget->currentIndex() == 5) \{\par
 1921                 Message.prepend("Alarm ");\par
 1922             \} else if (this->ui->tabWidget->currentIndex() == 6) \{\par
 1923                 Message.prepend("Data ");\par
 1924             \}\par
 1925             Message.prepend("Setting (with checked) ").append(" Saved");\par
 1926             QMessageBox::information(this, "Success!!", Message, 0, 0);\par
 1927         \} else if (diff == 1 && !fail) \{\par
 1928             Message.prepend("Setting (with checked) ").append(" Saved");\par
 1929             Message.append("\\n\\n Different Serial Number !!!");\par
 1930             QMessageBox::information(this, "Success!!", Message, 0, 0);\par
 1931         \} else if (diff == 2 && !fail) \{\par
 1932             Message.prepend("Setting (with checked) ").append(" Saved");\par
 1933             Message.append("\\nBoard is not have Serial Number ..");\par
 1934             QMessageBox::information(this, "Success!!", Message, 0, 0);\par
 1935         \}\par
 1936         if (fail) \{\par
 1937             QMessageBox::information(this, "Serial Communication", STR_TIMEOUT, 0, 0);\par
 1938         \}\par
 1939     \} else \{\par
 1940         QMessageBox::critical(this, "Settings Critical", "Please Check List Before Setting ..", 0, 0);\par
 1941     \}\par
 1942 \par
 1943     this->EnableButton(true);\par
 1944 \}\par
}
}
{\xe \v on_tabWidget_tabBarClicked\:formModule}
{\xe \v formModule\:on_tabWidget_tabBarClicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_tabWidget_tabBarClicked (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_tabWidget_tabBarClicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1015 \{\par
 1016     if (index == 2 || index == 3) \{\par
 1017         this->ui->pbSet->setHidden(true);\par
 1018         this->ui->pbSetChk->setHidden(true);\par
 1019         this->ui->pbGet->setHidden(true);\par
 1020         this->ui->pbEdit->setHidden(false);\par
 1021         this->ui->pbAddRow->setHidden(true);\par
 1022         this->ui->pbDeleteRows->setHidden(true);\par
 1023         this->ui->pbRefresh->setHidden(true);\par
 1024     \} else \{\par
 1025         this->ui->pbSet->setHidden(false);\par
 1026         this->ui->pbSetChk->setHidden(false);\par
 1027         this->ui->pbGet->setHidden(false);\par
 1028         this->ui->pbEdit->setHidden(true);\par
 1029         this->ui->pbRefresh->setHidden(true);\par
 1030         if (index == 4 || index == 5) \{\par
 1031             this->ui->pbAddRow->setHidden(false);\par
 1032             this->ui->pbDeleteRows->setHidden(false);\par
 1033         \} else \{\par
 1034             this->ui->pbAddRow->setHidden(true);\par
 1035             this->ui->pbDeleteRows->setHidden(true);\par
 1036         \}\par
 1037     \}\par
 1038     if (index == 7) \{\par
 1039         this->ui->pbSet->setHidden(true);\par
 1040         this->ui->pbSetChk->setHidden(true);\par
 1041         this->ui->pbSetAll->setHidden(true);\par
 1042         this->ui->pbGet->setHidden(true);\par
 1043         this->ui->pbGetAll->setHidden(true);\par
 1044         this->ui->pbRefresh->setHidden(false);\par
 1045     \} else \{\par
 1046         this->ui->pbSetAll->setHidden(false);\par
 1047         this->ui->pbGetAll->setHidden(false);\par
 1048         this->ui->pbRefresh->setHidden(true);\par
 1049     \}\par
 1050     this->ui->tabWidget->setCurrentIndex(index);\par
 1051 \par
 1052     if (index == 0) \{\par
 1053         this->ui->pbSet->setText("Set All Input Settings");\par
 1054         this->ui->pbSetChk->setText("Set Checked Input Settings");\par
 1055         this->ui->pbGet->setText("Get All Input Settings");\par
 1056     \} else if (index == 1) \{\par
 1057         this->ui->pbSet->setText("Set All Output Settings");\par
 1058         this->ui->pbSetChk->setText("Set Checked Output Settings");\par
 1059         this->ui->pbGet->setText("Get All Output Settings");\par
 1060     \} else if (index == 2) \{\par
 1061         this->ui->pbEdit->setText("Edit Communication");\par
 1062     \} else if (index == 3) \{\par
 1063         this->ui->pbEdit->setText("Edit Environtment");\par
 1064     \} else if (index == 4) \{\par
 1065         this->ui->pbSet->setText("Set Sources Settings");\par
 1066         this->ui->pbSetChk->setText("Set Checked Sources Settings");\par
 1067         this->ui->pbGet->setText("Get Sources Settings");\par
 1068     \} else if (index == 5) \{\par
 1069         this->ui->pbSet->setText("Set Alarm Settings");\par
 1070         this->ui->pbSetChk->setText("Set Checked Alarm Settings");\par
 1071         this->ui->pbGet->setText("Get Alarm Settings");\par
 1072         this->setInterface_Alarm(".RTUdata/module/m_" + this->windowTitle() + ".dbe");\par
 1073     \} else if (index == 6) \{\par
 1074         this->ui->pbSet->setText("Set Data Settings");\par
 1075         this->ui->pbSetChk->setText("Set Checked Data Settings");\par
 1076         this->ui->pbGet->setText("Get Data Settings");\par
 1077     \}\par
 1078 \}\par
}
}
{\xe \v reg_kanal_changed\:formModule}
{\xe \v formModule\:reg_kanal_changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reg_kanal_changed (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reg_kanal_changed }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2499 \{\par
 2500     struct t_module tModule; module mod;\par
 2501     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2502     QString tmp;\par
 2503     mod.read_module(&tModule, Address_Module);\par
 2504 \par
 2505     for (int i = 0; i < tModule.jml_input_digital; i++) \{\par
 2506         for (int j = 0; j < PIN_DIGITAL; j++) \{\par
 2507             qobject_cast<QStandardItemModel *>(reg_input[i]->model())->item(j)->setEnabled(true);\par
 2508         \}\par
 2509     \}\par
 2510     for (int i = tModule.jml_input_digital; i < tModule.jml_input_digital + tModule.jml_input_analog; i++) \{\par
 2511         for (int j = 0; j < PIN_ANALOG; j++) \{\par
 2512             qobject_cast<QStandardItemModel *>(reg_input[i]->model())->item(j)->setEnabled(true);\par
 2513         \}\par
 2514     \}\par
 2515     for (int i = 0; i < tModule.jml_input_digital; i++) \{\par
 2516         for (int j = 0; j < tModule.jml_input_digital; j++) \{\par
 2517             tmp = reg_input[j]->currentText();\par
 2518             qobject_cast<QStandardItemModel *>(reg_input[i]->model())->item(reg_input[i]->findText(tmp))->setEnabled(false);\par
 2519         \}\par
 2520     \}\par
 2521     for (int i = tModule.jml_input_digital; i < tModule.jml_input_digital + tModule.jml_input_analog; i++) \{\par
 2522         for (int j = tModule.jml_input_digital; j < tModule.jml_input_digital + tModule.jml_input_analog; j++) \{\par
 2523             tmp = reg_input[j]->currentText();\par
 2524             qobject_cast<QStandardItemModel *>(reg_input[i]->model())->item(reg_input[i]->findText(tmp))->setEnabled(false);\par
 2525         \}\par
 2526     \}\par
 2527 \}\par
}
}
{\xe \v setInterface\:formModule}
{\xe \v formModule\:setInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     this->setInterface_Input(address);\par
   52     this->setInterface_Output(address);\par
   53     this->setInterface_Communication(address);\par
   54     this->setInterface_Environtment(address);\par
   55     this->setInterface_Sumber(address);\par
   56     this->setInterface_Alarm(address);\par
   57     this->setInterface_Data_Settings(address);\par
   58     this->setInterface_Data_Monitoring(address);\par
   59 \}\par
}
}
{\xe \v setInterface_Alarm\:formModule}
{\xe \v formModule\:setInterface_Alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Alarm (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Alarm }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   577 \{\par
  578     struct t_module tModule;\par
  579     module mod;\par
  580     Address_Module = address;\par
  581     mod.read_module(&tModule, Address_Module);\par
  582     QString modules;\par
  583     QString type;\par
  584     QString str;\par
  585     QString tmp;\par
  586     QStringList list;\par
  587     QStringList data = tModule.data;\par
  588     QStringList temp = tModule.data;\par
  589     tModule.data.clear();\par
  590     for (int i = 0; i < this->ui->tabel_input->rowCount(); i++) \{\par
  591         for (int j = 0; j < data.length(); j++) \{\par
  592             str = data.at(j);\par
  593             str2 = tModule.Input.at(i);\par
  594             list = str.split(';');\par
  595             list2 = str2.split(';');\par
  596             if (list.at(0) == list2.at(1)) \{\par
  597                 tModule.data.append(str);\par
  598             \}\par
  599         \}\par
  600     \}\par
  601     data = tModule.data;\par
  602     tModule.data = temp;\par
  603     mod.read_module(&tModule, Address_Module);\par
  604     int rowAlarm = tModule.jml_alarm;\par
  605 \par
  606     this->ui->tabel_alarm->verticalHeader()->setHidden(true);\par
  607     this->ui->tabel_alarm->setColumnCount(13);\par
  608     this->ui->tabel_alarm->setColumnWidth(0, 25);\par
  609     this->ui->tabel_alarm->setColumnWidth(1, 25);\par
  610 //    this->ui->tabel_alarm->setColumnWidth(2, 75);\par
  611     this->ui->tabel_alarm->setColumnWidth(3, 100);\par
  612     this->ui->tabel_alarm->setColumnWidth(4, 175);\par
  613 //    this->ui->tabel_alarm->setColumnWidth(5, 75);\par
  614     this->ui->tabel_alarm->setColumnWidth(6, 100);\par
  615 //    this->ui->tabel_alarm->setColumnWidth(7, 50);\par
  616 //    this->ui->tabel_alarm->setColumnWidth(8, 75);\par
  617 //    this->ui->tabel_alarm->setColumnWidth(9, 75);\par
  618 //    this->ui->tabel_alarm->setColumnWidth(10, 75);\par
  619 //    this->ui->tabel_alarm->setColumnWidth(11, 75);\par
  620 //    this->ui->tabel_alarm->setColumnWidth(12, 75);\par
  621     this->ui->tabel_alarm->setRowCount(rowAlarm);\par
  622 \par
  623     SigMapDel_alarm = new QSignalMapper(this);\par
  624     SigMapInput_alarm = new QSignalMapper(this);\par
  625     for (int i = 0; i < rowAlarm; i++)\{\par
  626         check_alarm[i] = new QCheckBox(this);\par
  627         delete_alarm[i] = new QPushButton("Del", this);\par
  628         SigMapDel_alarm->setMapping(delete_alarm[i], i);\par
  629         connect(delete_alarm[i],SIGNAL(clicked()),SigMapDel_alarm,SLOT(map()));\par
  630 \par
  631         name_alarm[i] = new QLineEdit(this);\par
  632         name_alarm[i]->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
  633 \par
  634         state_alarm[i] = new QComboBox(this);\par
  635         state_alarm[i]->addItem("NOT ACTIVE",0);\par
  636         state_alarm[i]->addItem("ACTIVE",1);\par
  637 \par
  638         input_alarm[i] = new QComboBox(this);\par
  639         input_alarm[i]->addItem("");\par
  640         for (int j = 0; j < tModule.jml_input_digital + tModule.jml_input_analog; j++) \{\par
  641             if (j < tModule.jml_input_digital) \{\par
  642                 str = data.at(j); list = str.split(';');\par
  643                 type = "Kanal " + list.at(0) + " - Digital - REG: " + list.at(1);\par
  644                 input_alarm[i]->addItem(type);\par
  645                 type.clear();\par
  646             \} else \{\par
  647                 str = data.at(j); list = str.split(';');\par
  648                 type = "Kanal " + list.at(0) + " - Analog - REG: " + list.at(1);\par
  649                 input_alarm[i]->addItem(type);\par
  650                 type.clear();\par
  651             \}\par
  652         \}\par
  653 \par
  654         output_alarm[i] = new QComboBox(this);\par
  655         for (int j = 0; j < tModule.jml_output; j++) \{\par
  656             str = tModule.Output.at(j); list = str.split(';');\par
  657             type = "Relay " + list.at(1);\par
  658             output_alarm[i]->addItem(type);\par
  659             type.clear();\par
  660         \}\par
  661 \par
  662         range_l[i] = new QLineEdit(this);\par
  663         range_l[i]->setAlignment(Qt::AlignCenter);\par
  664         range_l[i]->setValidator(new QDoubleValidator(-9999.999,9999.999,1,this));\par
  665 \par
  666         batas_ll[i] = new QLineEdit(this);\par
  667         batas_ll[i]->setAlignment(Qt::AlignCenter);\par
  668         batas_ll[i]->setValidator(new QDoubleValidator(-9999.999,9999.999,1,this));\par
  669 \par
  670         batas_l[i] = new QLineEdit(this);\par
  671         batas_l[i]->setAlignment(Qt::AlignCenter);\par
  672         batas_l[i]->setValidator(new QDoubleValidator(-9999.999,9999.999,1,this));\par
  673 \par
  674         batas_h[i] = new QLineEdit(this);\par
  675         batas_h[i]->setAlignment(Qt::AlignCenter);\par
  676         batas_h[i]->setValidator(new QDoubleValidator(-9999.999,9999.999,1,this));\par
  677 \par
  678         batas_hh[i] = new QLineEdit(this);\par
  679         batas_hh[i]->setAlignment(Qt::AlignCenter);\par
  680         batas_hh[i]->setValidator(new QDoubleValidator(-9999.999,9999.999,1,this));\par
  681 \par
  682         range_h[i] = new QLineEdit(this);\par
  683         range_h[i]->setAlignment(Qt::AlignCenter);\par
  684         range_h[i]->setValidator(new QDoubleValidator(-9999.999,9999.999,1,this));\par
  685     \}\par
  686     connect(SigMapDel_alarm,SIGNAL(mapped(int)),this,SLOT(del_alrm_clicked(int)));\par
  687 \par
  688     for (int i = 0; i < rowAlarm; i++)\{\par
  689         type = "Alarm - ";\par
  690         if (i <= tModule.alarm.length()) \{\par
  691             str = tModule.alarm.at(i);\par
  692             list = str.split(';');\par
  693             type.append(list[0]);\par
  694             name_alarm[i]->setText(list.at(1));\par
  695             input_alarm[i]->setCurrentIndex(list.at(2).toInt());\par
  696             output_alarm[i]->setCurrentIndex(list.at(3).toInt());\par
  697             state_alarm[i]->setCurrentIndex(list.at(4).toInt());\par
  698             range_l[i]->setText(list.at(5));\par
  699             batas_ll[i]->setText(list.at(6));\par
  700             batas_l[i]->setText(list.at(7));\par
  701             batas_h[i]->setText(list.at(8));\par
  702             batas_hh[i]->setText(list.at(9));\par
  703             range_h[i]->setText(list.at(10));\par
  704         \}\par
  705         SigMapInput_alarm->setMapping(input_alarm[i], i);\par
  706         connect(input_alarm[i],SIGNAL(currentIndexChanged(int)),SigMapInput_alarm,SLOT(map()));\par
  707 \par
  708         this->ui->tabel_alarm->setCellWidget(i,0, check_alarm[i]);\par
  709         this->ui->tabel_alarm->setCellWidget(i,1, delete_alarm[i]);\par
  710         this->ui->tabel_alarm->setItem(i,2, new QTableWidgetItem(type));\par
  711         this->ui->tabel_alarm->setCellWidget(i,3, name_alarm[i]);\par
  712         this->ui->tabel_alarm->setCellWidget(i,4, input_alarm[i]);\par
  713         this->ui->tabel_alarm->setCellWidget(i,5, output_alarm[i]);\par
  714         this->ui->tabel_alarm->setCellWidget(i,6, state_alarm[i]);\par
  715         this->ui->tabel_alarm->setCellWidget(i,7, range_l[i]);\par
  716         this->ui->tabel_alarm->setCellWidget(i,8, batas_ll[i]);\par
  717         this->ui->tabel_alarm->setCellWidget(i,9, batas_l[i]);\par
  718         this->ui->tabel_alarm->setCellWidget(i,10, batas_h[i]);\par
  719         this->ui->tabel_alarm->setCellWidget(i,11, batas_hh[i]);\par
  720         this->ui->tabel_alarm->setCellWidget(i,12, range_h[i]);\par
  721     \}\par
  722     connect(SigMapInput_alarm,SIGNAL(mapped(int)),this,SLOT(input_alrm_changed(int)));\par
  723 \par
  724     this->ui->tabel_alarm->setEditTriggers(QAbstractItemView::NoEditTriggers);\par
  725     this->ui->tabel_alarm->hideColumn(5);\par
  726     this->ui->tabel_alarm->hideColumn(5);\par
  727 \par
  728     for (int i = 0; i < tModule.jml_alarm; i++) \{\par
  729         for (int j = 0; j < tModule.jml_alarm; j++) \{\par
  730             qobject_cast<QStandardItemModel *>(input_alarm[i]->model())->item(input_alarm[i]->findText(input_alarm[j]->currentText()))->setEnabled(false);\par
  731         \}\par
  732     \}\par
  733 \}\par
}
}
{\xe \v setInterface_Communication\:formModule}
{\xe \v formModule\:setInterface_Communication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Communication (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Communication }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   286 \{\par
  287     struct t_module tModule;\par
  288     module mod;\par
  289     Address_Module = address;\par
  290     mod.read_module(&tModule, Address_Module);\par
  291     QString modules;\par
  292 \par
  293     modules.sprintf("%s", tModule.name_gsm_1);\par
  294     this->ui->opt_1->setText(modules);\par
  295     modules.sprintf("%s", tModule.name_gsm_2);\par
  296     this->ui->opt_2->setText(modules);\par
  297     modules.sprintf("%s", tModule.device_name_gsm_1);\par
  298     this->ui->device_1->setText(modules);\par
  299     modules.sprintf("%s", tModule.device_name_gsm_2);\par
  300     this->ui->device_2->setText(modules);\par
  301     modules.sprintf("%s", tModule.status_gsm_1);\par
  302     this->ui->status_1->setText(modules);\par
  303     modules.sprintf("%s", tModule.status_gsm_2);\par
  304     this->ui->status_2->setText(modules);\par
  305     modules.sprintf("%s", tModule.com_gsm_1);\par
  306     this->ui->com_1->setText(modules);\par
  307     modules.sprintf("%s", tModule.com_gsm_2);\par
  308     this->ui->com_2->setText(modules);\par
  309     modules.sprintf("%s", tModule.number_gsm_1);\par
  310     this->ui->number_1->setText(modules);\par
  311     modules.sprintf("%s", tModule.number_gsm_2);\par
  312     this->ui->number_2->setText(modules);\par
  313 \par
  314     modules.sprintf("%s", tModule.user_gsm_1);\par
  315     this->ui->user_1->setText(modules);\par
  316     modules.sprintf("%s", tModule.apn_gsm_1);\par
  317     this->ui->apn_1->setText(modules);\par
  318     modules.sprintf("%s", tModule.passwd_gsm_1);\par
  319     this->ui->passwd_1->setText(modules);\par
  320 \par
  321     modules.sprintf("%s", tModule.user_gsm_2);\par
  322     this->ui->user_2->setText(modules);\par
  323     modules.sprintf("%s", tModule.apn_gsm_2);\par
  324     this->ui->apn_2->setText(modules);\par
  325     modules.sprintf("%s", tModule.passwd_gsm_2);\par
  326     this->ui->passwd_2->setText(modules);\par
  327 \}\par
}
}
{\xe \v setInterface_Data_Monitoring\:formModule}
{\xe \v formModule\:setInterface_Data_Monitoring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Data_Monitoring (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Data_Monitoring }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   856 \{\par
  857     struct t_module tModule;\par
  858     module mod;\par
  859     Address_Module = address;\par
  860     mod.read_module(&tModule, Address_Module);\par
  861     QString modules;\par
  862 \par
  863     QString str;\par
  864     QString tmp;\par
  865     QStringList list;\par
  866     QStringList data = tModule.data;\par
  867     QStringList temp = tModule.data;\par
  868     tModule.data.clear();\par
  869     for (int i = 0; i < data.length(); i++) \{\par
  870         str = data.at(i);\par
  871         list =str.split(';');\par
  872         if (list.at(11) == "1") \{\par
  873             tModule.data.append(str);\par
  874         \}\par
  875     \}\par
  876 \par
  877     int rowData = tModule.data.length();\par
  878     QString type;\par
  879 \par
  880     this->ui->tabel_data_m->verticalHeader()->setHidden(true);\par
  881     this->ui->tabel_data_m->setColumnCount(5);\par
  882     this->ui->tabel_data_m->setColumnWidth(0, 25);\par
  883 //    this->ui->tabel_data_m->setColumnWidth(1, 75);\par
  884     this->ui->tabel_data_m->setColumnWidth(2, 100);\par
  885     this->ui->tabel_data_m->setColumnWidth(3, 100);\par
  886     this->ui->tabel_data_m->setColumnWidth(4, 50);\par
  887     this->ui->tabel_data_m->setRowCount(rowData);\par
  888 \par
  889     for (int i = 0; i < rowData; i++)\{\par
  890         reg_data[i] = new QLabel(this);\par
  891         reg_data[i]->setAlignment(Qt::AlignCenter);\par
  892 \par
  893         name_data[i] = new QLabel(this);\par
  894         name_data[i]->setAlignment(Qt::AlignCenter);\par
  895 \par
  896         value_data[i] = new QLabel(this);\par
  897         value_data[i]->setAlignment(Qt::AlignCenter);\par
  898 \par
  899         unit_data[i] = new QLabel(this);\par
  900         unit_data[i]->setAlignment(Qt::AlignCenter);\par
  901     \}\par
  902 \par
  903     for (int i = 0; i < rowData; i++)\{\par
  904         str = tModule.data.at(i);\par
  905         list = str.split(';');\par
  906         type = list[0];\par
  907         reg_data[i]->setText(list[1]);\par
  908         name_data[i]->setText(list[2]);\par
  909         value_data[i]->setText(list[3]);\par
  910         unit_data[i]->setText(list[4]);\par
  911 \par
  912         this->ui->tabel_data_m->setItem(i,0, new QTableWidgetItem(type));\par
  913         this->ui->tabel_data_m->setCellWidget(i,1, reg_data[i]);\par
  914         this->ui->tabel_data_m->setCellWidget(i,2, name_data[i]);\par
  915         this->ui->tabel_data_m->setCellWidget(i,3, value_data[i]);\par
  916         this->ui->tabel_data_m->setCellWidget(i,4, unit_data[i]);\par
  917     \}\par
  918 \par
  919     this->ui->tabel_data_m->setEditTriggers(QAbstractItemView::NoEditTriggers);\par
  920     tModule.data = temp;\par
  921 \}\par
}
}
{\xe \v setInterface_Data_Settings\:formModule}
{\xe \v formModule\:setInterface_Data_Settings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Data_Settings (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Data_Settings }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   736 \{\par
  737     struct t_module tModule;\par
  738     module mod;\par
  739     Address_Module = address;\par
  740     mod.read_module(&tModule, Address_Module);\par
  741     QString modules;\par
  742 \par
  743     QString str;\par
  744     QString tmp;\par
  745     QStringList list;\par
  746 \par
  747     int rowData = tModule.jml_data;\par
  748     QString type;\par
  749 \par
  750     this->ui->tabel_data_s->verticalHeader()->setHidden(true);\par
  751     this->ui->tabel_data_s->setColumnCount(12);\par
  752     this->ui->tabel_data_s->setColumnWidth(0, 25);\par
  753     this->ui->tabel_data_s->setColumnWidth(1, 25);\par
  754     this->ui->tabel_data_s->setColumnWidth(2, 75);\par
  755     this->ui->tabel_data_s->setColumnWidth(3, 75);\par
  756 //    this->ui->tabel_data_s->setColumnWidth(4, 75);\par
  757     this->ui->tabel_data_s->setColumnWidth(4, 75);\par
  758     this->ui->tabel_data_s->setColumnWidth(5, 100);\par
  759     this->ui->tabel_data_s->setColumnWidth(6, 100);\par
  760     this->ui->tabel_data_s->setColumnWidth(7, 100);\par
  761     this->ui->tabel_data_s->setColumnWidth(8, 100);\par
  762     this->ui->tabel_data_s->setColumnWidth(9, 100);\par
  763     this->ui->tabel_data_s->setColumnWidth(10, 100);\par
  764     this->ui->tabel_data_s->setColumnWidth(11, 125);\par
  765     this->ui->tabel_data_s->setRowCount(rowData);\par
  766 \par
  767     SigMapState_data_s = new QSignalMapper(this);\par
  768     for (int i = 0; i < rowData; i++)\{\par
  769         check_data_s[i] = new QCheckBox(this);\par
  770 \par
  771         id_data_s[i] = new QSpinBox(this);\par
  772         id_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  773         id_data_s[i]->setRange(0,9999);\par
  774 \par
  775         name_data_s[i] = new QLineEdit(this);\par
  776         name_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  777         name_data_s[i]->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
  778 \par
  779 //        value_data_s[i] = new QDoubleSpinBox(this);\par
  780 //        value_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  781 //        value_data_s[i]->setEnabled(false);\par
  782 //        value_data_s[i]->setRange(-999999,999999);\par
  783 \par
  784         unit_data_s[i] = new QLineEdit(this);\par
  785         unit_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  786         unit_data_s[i]->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
  787 \par
  788         range_l_data_s[i] = new QDoubleSpinBox(this);\par
  789         range_l_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  790         range_l_data_s[i]->setRange(-999999,999999);\par
  791 \par
  792         border_ll_data_s[i] = new QDoubleSpinBox(this);\par
  793         border_ll_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  794         border_ll_data_s[i]->setRange(-999999,999999);\par
  795 \par
  796         border_l_data_s[i] = new QDoubleSpinBox(this);\par
  797         border_l_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  798         border_l_data_s[i]->setRange(-999999,999999);\par
  799 \par
  800         border_h_data_s[i] = new QDoubleSpinBox(this);\par
  801         border_h_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  802         border_h_data_s[i]->setRange(-999999,999999);\par
  803 \par
  804         border_hh_data_s[i] = new QDoubleSpinBox(this);\par
  805         border_hh_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  806         border_hh_data_s[i]->setRange(-999999,999999);\par
  807 \par
  808         range_h_data_s[i] = new QDoubleSpinBox(this);\par
  809         range_h_data_s[i]->setAlignment(Qt::AlignHCenter);\par
  810         range_h_data_s[i]->setRange(-999999,999999);\par
  811 \par
  812         state_data_s[i] = new QComboBox(this);\par
  813         state_data_s[i]->addItem("NOT ACTIVE");\par
  814         state_data_s[i]->addItem("ACTIVE");\par
  815         SigMapState_data_s->setMapping(state_data_s[i], i);\par
  816         connect(state_data_s[i], SIGNAL(currentIndexChanged(int)), SigMapState_data_s, SLOT(map()));\par
  817     \}\par
  818     connect(SigMapState_data_s,SIGNAL(mapped(int)),this,SLOT(state_data_change(int)));\par
  819 \par
  820     for (int i = 0; i < rowData; i++)\{\par
  821         str = tModule.data.at(i);\par
  822         list = str.split(';');\par
  823         type = list[0];\par
  824 \par
  825         id_data_s[i]->setValue(list.at(1).toInt());\par
  826         name_data_s[i]->setText(list.at(2));\par
  827 //        value_data_s[i]->setValue(list.at(3).toInt());\par
  828         unit_data_s[i]->setText(list.at(4));\par
  829         range_l_data_s[i]->setValue(list.at(5).toInt());\par
  830         border_ll_data_s[i]->setValue(list.at(6).toInt());\par
  831         border_l_data_s[i]->setValue(list.at(7).toInt());\par
  832         border_h_data_s[i]->setValue(list.at(8).toInt());\par
  833         border_hh_data_s[i]->setValue(list.at(9).toInt());\par
  834         range_h_data_s[i]->setValue(list.at(10).toInt());\par
  835         state_data_s[i]->setCurrentIndex(list.at(11).toInt());\par
  836 \par
  837         this->ui->tabel_data_s->setCellWidget(i,0, check_data_s[i]);\par
  838         this->ui->tabel_data_s->setItem(i,1, new QTableWidgetItem(type));\par
  839         this->ui->tabel_data_s->setCellWidget(i,2, id_data_s[i]);\par
  840         this->ui->tabel_data_s->setCellWidget(i,3, name_data_s[i]);\par
  841 //        this->ui->tabel_data_s->setCellWidget(i,4, value_data_s[i]);\par
  842         this->ui->tabel_data_s->setCellWidget(i,4, unit_data_s[i]);\par
  843         this->ui->tabel_data_s->setCellWidget(i,5, range_l_data_s[i]);\par
  844         this->ui->tabel_data_s->setCellWidget(i,6, border_ll_data_s[i]);\par
  845         this->ui->tabel_data_s->setCellWidget(i,7, border_l_data_s[i]);\par
  846         this->ui->tabel_data_s->setCellWidget(i,8, border_h_data_s[i]);\par
  847         this->ui->tabel_data_s->setCellWidget(i,9, border_hh_data_s[i]);\par
  848         this->ui->tabel_data_s->setCellWidget(i,10, range_h_data_s[i]);\par
  849         this->ui->tabel_data_s->setCellWidget(i,11, state_data_s[i]);\par
  850     \}\par
  851 \par
  852     this->ui->tabel_data_s->setEditTriggers(QAbstractItemView::NoEditTriggers);\par
  853 \}\par
}
}
{\xe \v setInterface_Environtment\:formModule}
{\xe \v formModule\:setInterface_Environtment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Environtment (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Environtment }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   330 \{\par
  331     struct t_module tModule;\par
  332     module mod;\par
  333     Address_Module = address;\par
  334     mod.read_module(&tModule, Address_Module);\par
  335     QString modules;\par
  336 \par
  337     modules.sprintf("%s", tModule.module_name);\par
  338     this->ui->module_name->setText(modules);\par
  339     modules.sprintf("%s", tModule.serial_number);\par
  340     this->ui->serial_number->setText(modules);\par
  341 \par
  342 //    modules.sprintf("%s", tModule.ip_address);\par
  343 //    this->ui->ip_address->setText(modules);\par
  344     modules.sprintf("%s", tModule.server_address);\par
  345     this->ui->server_address->setText(modules);\par
  346     modules.sprintf("%s", tModule.file_address);\par
  347     this->ui->file_address->setText(modules);\par
  348     modules.sprintf("%s", tModule.status_webclient);\par
  349     this->ui->web_client->setText(modules);\par
  350     int s = 0; int m = 0; int h = 0; int d = 0;\par
  351     if (tModule.interval_relay <= 60) \{\par
  352         this->ui->interval_relay->setText(QString::number(tModule.interval_relay) + " s");\par
  353     \} else \{\par
  354         s = tModule.interval_relay;\par
  355         m = s / 60;\par
  356         for (int i = 0; i < m; i++) s = s - 60;\par
  357         if (m > 60) \{\par
  358             h = m / 60;\par
  359             for (int i = 0; i < h; i++) m = m - 60;\par
  360             if (h > 24) \{\par
  361                 d = h / 24;\par
  362                 for (int i = 0; i < d; i++) h = h - 24;\par
  363                 this->ui->interval_relay->setText(QString::number(d) + " d " + QString::number(h) + " h " + QString::number(m) + " m " + QString::number(s) + " s");\par
  364             \} else \{\par
  365                 this->ui->interval_relay->setText(QString::number(h) + " h " + QString::number(m) + " m " + QString::number(s) + " s");\par
  366             \}\par
  367         \} else \{\par
  368             this->ui->interval_relay->setText(QString::number(m) + " m " + QString::number(s) + " s");\par
  369         \}\par
  370     \}\par
  371     s = 0; m = 0; h = 0; d = 0;\par
  372     if (tModule.interval_data <= 60) \{\par
  373         this->ui->interval_data->setText(QString::number(tModule.interval_data) + " s");\par
  374     \} else \{\par
  375         s = tModule.interval_data;\par
  376         m = s / 60;\par
  377         for (int i = 0; i < m; i++) s = s - 60;\par
  378         if (m > 60) \{\par
  379             h = m / 60;\par
  380             for (int i = 0; i < h; i++) m = m - 60;\par
  381             if (h > 24) \{\par
  382                 d = h / 24;\par
  383                 for (int i = 0; i < d; i++) h = h - 24;\par
  384                 this->ui->interval_data->setText(QString::number(d) + " d " + QString::number(h) + " h " + QString::number(m) + " m " + QString::number(s) + " s");\par
  385             \} else \{\par
  386                 this->ui->interval_data->setText(QString::number(h) + " h " + QString::number(m) + " m " + QString::number(s) + " s");\par
  387             \}\par
  388         \} else \{\par
  389             this->ui->interval_data->setText(QString::number(m) + " m " + QString::number(s) + " s");\par
  390         \}\par
  391     \}\par
  392     modules.sprintf("%s", tModule.mode_http);\par
  393     this->ui->mode_http->setText(modules);\par
  394     this->ui->port->setText(QString::number(tModule.port));\par
  395     this->ui->utc->setText(QString::number(tModule.utc));\par
  396 \}\par
}
}
{\xe \v setInterface_Input\:formModule}
{\xe \v formModule\:setInterface_Input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Input (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Input }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    62 \{\par
   63     struct t_module tModule;\par
   64     module mod;\par
   65     Address_Module = address;\par
   66     mod.read_module(&tModule, Address_Module);\par
   67     QStringList data = tModule.data;\par
   68 \par
   69     int rowInputDigital = tModule.jml_input_digital;\par
   70     int rowInputAnalog = tModule.jml_input_analog;\par
   71 \par
   72     this->ui->tabel_input->verticalHeader()->setHidden(true);\par
   73     this->ui->tabel_input->setColumnCount(8);\par
   74     this->ui->tabel_input->setColumnWidth(0, 25);\par
   75 //    this->ui->tabel_input->setColumnWidth(1, 50);\par
   76     this->ui->tabel_input->setColumnWidth(2, 100);\par
   77     this->ui->tabel_input->setColumnWidth(3, 150);\par
   78 //    this->ui->tabel_input->setColumnWidth(4, 100);\par
   79 //    this->ui->tabel_input->setColumnWidth(5, 100);\par
   80 //    this->ui->tabel_input->setColumnWidth(6, 100);\par
   81     this->ui->tabel_input->setColumnWidth(7, 125);\par
   82     this->ui->tabel_input->setRowCount(rowInputDigital + rowInputAnalog);\par
   83 \par
   84     SigMapReg_input = new QSignalMapper(this);\par
   85     SigMapState_input = new QSignalMapper(this);\par
   86     for (int i = 0; i < rowInputDigital + rowInputAnalog; i++) \{\par
   87         check_input[i] = new QCheckBox(this);\par
   88 \par
   89         name_input[i] = new QLineEdit(this);\par
   90         name_input[i]->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
   91 \par
   92         type_input[i] = new QComboBox(this);\par
   93         if (i >= rowInputDigital) \{\par
   94             type_input[i]->addItem("Analog Monita",250);\par
   95             type_input[i]->addItem("Analog Running Hours",230);\par
   96         \} else\par
   97         \{\par
   98             type_input[i]->addItem("RPM",1);\par
   99             type_input[i]->addItem("ON / OFF",2);\par
  100 //            type_input[i]->addItem("Push Button",3);\par
  101             type_input[i]->addItem("Flow - X",6);\par
  102             type_input[i]->addItem("RPM - RH",7);\par
  103 //            type_input[i]->addItem("Running Hours",8);\par
  104             type_input[i]->addItem("ON / OFF - RH",9);\par
  105         \}\par
  106 \par
  107         calib_m[i] = new QDoubleSpinBox(this);\par
  108         calib_m[i]->setAlignment(Qt::AlignRight);\par
  109         calib_m[i]->setRange(-99999,99999);\par
  110 \par
  111         calib_x[i] = new QDoubleSpinBox(this);\par
  112         calib_x[i]->setAlignment(Qt::AlignRight);\par
  113         calib_x[i]->setRange(-99999,99999);\par
  114 \par
  115         reg_input[i] = new QComboBox(this);\par
  116         SigMapReg_input->setMapping(reg_input[i], i);\par
  117         connect(reg_input[i],SIGNAL(currentIndexChanged(int)),SigMapReg_input,SLOT(map()));\par
  118         if (i < rowInputDigital) \{\par
  119             for (int j = 0; j < PIN_DIGITAL; j++) \{\par
  120                 tmp = tModule.data.at(j); list = tmp.split(';');\par
  121                 reg_input[i]->addItem(list.at(1));\par
  122             \}\par
  123         \} else \{\par
  124             for (int j = PIN_DIGITAL; j < PIN_DIGITAL + PIN_ANALOG; j++) \{\par
  125                 tmp = tModule.data.at(j); list = tmp.split(';');\par
  126                 reg_input[i]->addItem(list.at(1));\par
  127             \}\par
  128         \}\par
  129 \par
  130         state_input[i] = new QComboBox(this);\par
  131         state_input[i]->addItem("NOT ACTIVE",0);\par
  132         state_input[i]->addItem("ACTIVE",1);\par
  133         SigMapState_input->setMapping(state_input[i], i);\par
  134         connect(state_input[i], SIGNAL(currentIndexChanged(int)), SigMapState_input, SLOT(map()));\par
  135     \}\par
  136     connect(SigMapReg_input,SIGNAL(mapped(int)),this,SLOT(reg_kanal_changed()));\par
  137     connect(SigMapState_input,SIGNAL(mapped(int)),this,SLOT(state_kanal_change(int)));\par
  138 \par
  139     tModule.data.clear();\par
  140     for (int i = 0; i < rowInputDigital + rowInputAnalog; i++) \{\par
  141         for (int j = 0; j < data.length(); j++) \{\par
  142             str = data.at(j);\par
  143             str2 = tModule.Input.at(i);\par
  144             list = str.split(';');\par
  145             list2 = str2.split(';');\par
  146             if (list.at(0) == list2.at(1)) \{\par
  147                 tModule.data.append(str);\par
  148             \}\par
  149         \}\par
  150     \}\par
  151 \par
  152     str.clear();\par
  153     for (int i = 0; i < tModule.Input.length(); i++) \{\par
  154         str.append(tModule.InputName.at(i)).append(";").append(tModule.Input.at(i)).append(";");\par
  155         tmp = tModule.data.at(i); list = tmp.split(';');\par
  156         str.append(list.at(1)).append(";").append(list.at(11)).append(";");\par
  157     \}\par
  158 \par
  159     list = str.split(';');\par
  160     tModule.data = data;\par
  161 \par
  162     for(int i = 0; i < rowInputDigital + rowInputAnalog; i++)\{\par
  163         if (i >= rowInputDigital) \{\par
  164             type = " - Analog";\par
  165         \} else \{\par
  166             type = " - Digital";\par
  167         \}\par
  168 \par
  169         type.prepend(QString::number(i+1));\par
  170 \par
  171         name_input[i]->setText(list[i*8]);\par
  172         if (list.at((i*8)+3).toInt() == Analog_Monita) \{indx = 0;\}\par
  173         if (list.at((i*8)+3).toInt() == Analog_Running_Hours) \{indx = 1;\}\par
  174         if (list.at((i*8)+3).toInt() == RPM) \{indx = 0;\}\par
  175         if (list.at((i*8)+3).toInt() == ON_OFF) \{indx = 1;\}\par
  176         if (list.at((i*8)+3).toInt() == FLOW_X) \{indx = 2;\}\par
  177         if (list.at((i*8)+3).toInt() == RPM_RH) \{indx = 3;\}\par
  178         if (list.at((i*8)+3).toInt() == ON_OFF_RH) \{indx = 4;\}\par
  179         type_input[i]->setCurrentIndex(indx);\par
  180         calib_m[i]->setValue(list.at((i*8)+4).toFloat());\par
  181         calib_x[i]->setValue(list.at((i*8)+5).toFloat());\par
  182         if (i < rowInputDigital) \{reg_input[i]->setCurrentText(list.at((i*8)+6));\}\par
  183         else \{reg_input[i]->setCurrentText(list.at((i*8)+6));\}\par
  184         state_input[i]->setCurrentIndex(list.at((i*8)+7).toInt());\par
  185 \par
  186         this->ui->tabel_input->setCellWidget(i,0, check_input[i]);\par
  187         this->ui->tabel_input->setItem(i,1, new QTableWidgetItem(type));\par
  188         this->ui->tabel_input->setCellWidget(i,2, name_input[i]);\par
  189         this->ui->tabel_input->setCellWidget(i,3, type_input[i]);\par
  190         this->ui->tabel_input->setCellWidget(i,4, calib_m[i]);\par
  191         this->ui->tabel_input->setCellWidget(i,5, calib_x[i]);\par
  192         this->ui->tabel_input->setCellWidget(i,6, reg_input[i]);\par
  193         this->ui->tabel_input->setCellWidget(i,7, state_input[i]);\par
  194     \}\par
  195 \par
  196     this->ui->tabel_input->setEditTriggers(QAbstractItemView::NoEditTriggers);\par
  197 \par
  198     for (int i = 0; i < tModule.jml_input_digital; i++) \{\par
  199         for (int j = 0; j < tModule.jml_input_digital; j++) \{\par
  200             qobject_cast<QStandardItemModel *>(reg_input[i]->model())\par
  201                     ->item(reg_input[i]->findText(reg_input[j]->currentText()))\par
  202                     ->setEnabled(false);\par
  203         \}\par
  204     \}\par
  205     for (int i = tModule.jml_input_digital; i < tModule.jml_input_digital + tModule.jml_input_analog; i++) \{\par
  206         for (int j = tModule.jml_input_digital; j < tModule.jml_input_digital + tModule.jml_input_analog; j++) \{\par
  207             tmp = reg_input[j]->currentText();\par
  208             type = QString::number(reg_input[i]->findText(reg_input[j]->currentText()));\par
  209             qobject_cast<QStandardItemModel *>(reg_input[i]->model())\par
  210                     ->item(reg_input[i]->findText(reg_input[j]->currentText()))\par
  211                     ->setEnabled(false);\par
  212         \}\par
  213     \}\par
  214 \}\par
}
}
{\xe \v setInterface_Output\:formModule}
{\xe \v formModule\:setInterface_Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Output (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Output }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   217 \{\par
  218     struct t_module tModule;\par
  219     module mod;\par
  220     Address_Module = address;\par
  221     mod.read_module(&tModule, Address_Module);\par
  222     QString modules;\par
  223 \par
  224     int rowOutput = tModule.jml_output;\par
  225     QString type;\par
  226 \par
  227     this->ui->tabel_output->verticalHeader()->setHidden(true);\par
  228     this->ui->tabel_output->setColumnCount(5);\par
  229         this->ui->tabel_output->setColumnWidth(0, 25);\par
  230         this->ui->tabel_output->setColumnWidth(1, 100);\par
  231         this->ui->tabel_output->setColumnWidth(2, 125);\par
  232     //    this->ui->tabel_output->setColumnWidth(3, 100);\par
  233     //    this->ui->tabel_output->setColumnWidth(4, 75);\par
  234     this->ui->tabel_output->setRowCount(rowOutput);\par
  235 \par
  236     for (int i = 0; i < rowOutput; i++)\{\par
  237         check_output[i] = new QCheckBox(this);\par
  238 \par
  239 //        name_output[i] = new QLineEdit(this);\par
  240 //        name_output[i]->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
  241 \par
  242         state_output[i] = new QComboBox(this);\par
  243         state_output[i]->addItem("NOT ACTIVE");\par
  244         state_output[i]->addItem("ACTIVE");\par
  245 \par
  246         control[i] = new QComboBox(this);\par
  247         control[i]->addItem("LATCH");\par
  248         control[i]->addItem("LOGIC");\par
  249         control[i]->addItem("SCHEDULER");\par
  250 \par
  251         reg_output[i] = new QSpinBox(this);\par
  252         reg_output[i]->setAlignment(Qt::AlignCenter);\par
  253         reg_output[i]->setRange(0,99999);\par
  254     \}\par
  255 \par
  256     QString str;\par
  257     QString tmp;\par
  258     QStringList list;\par
  259     for (int i = 0; i < tModule.Output.length(); i++) \{\par
  260         str.append(tModule.OutputName.at(i)).append(";")\par
  261                 .append(tModule.Output.at(i)).append(";");\par
  262     \}\par
  263     list = str.split(';');\par
  264 \par
  265     for(int i = 0; i < rowOutput; i++)\{\par
  266 //        name_output[i]->setText(list[i*6]);\par
  267         state_output[i]->setCurrentIndex(list.at((i*6)+3).toInt());\par
  268         control[i]->setCurrentIndex(list.at((i*6)+4).toInt());\par
  269         reg_output[i]->setValue(list.at((i*6)+5).toInt());\par
  270 //        reg_output[i]->setText(QString::number(i+1) + QString::number(i+1) + QString::number(i+1));\par
  271 \par
  272         type = " - Relay";\par
  273         type.prepend(list.at((i*6)+2));\par
  274         this->ui->tabel_output->setCellWidget(i,0, check_output[i]);\par
  275         this->ui->tabel_output->setItem(i,1, new QTableWidgetItem(type));\par
  276 //        this->ui->tabel_output->setCellWidget(i,2, name_output[i]);\par
  277         this->ui->tabel_output->setCellWidget(i,2, state_output[i]);\par
  278         this->ui->tabel_output->setCellWidget(i,3, control[i]);\par
  279         this->ui->tabel_output->setCellWidget(i,4, reg_output[i]);\par
  280     \}\par
  281 \par
  282     this->ui->tabel_output->setEditTriggers(QAbstractItemView::NoEditTriggers);\par
  283 \}\par
}
}
{\xe \v setInterface_Sumber\:formModule}
{\xe \v formModule\:setInterface_Sumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setInterface_Sumber (QString  {\i address}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setInterface_Sumber }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   399 \{\par
  400     struct t_module tModule;\par
  401     module mod;\par
  402     Address_Module = address;\par
  403     mod.read_module(&tModule, Address_Module);\par
  404     QString modules;\par
  405 \par
  406     QString str;\par
  407     QString tmp;\par
  408     QStringList list;\par
  409 \par
  410     int rowSource = tModule.jml_sumber;\par
  411     QString type;\par
  412 \par
  413     this->ui->tabel_sources->verticalHeader()->setHidden(true);\par
  414     this->ui->tabel_sources->setColumnCount(13);\par
  415     this->ui->tabel_sources->setColumnWidth(0, 25);\par
  416     this->ui->tabel_sources->setColumnWidth(1, 25);\par
  417 //    this->ui->tabel_sources->setColumnWidth(2, 75);\par
  418     this->ui->tabel_sources->setColumnWidth(3, 100);\par
  419     this->ui->tabel_sources->setColumnWidth(4, 125);\par
  420 //    this->ui->tabel_sources->setColumnWidth(5, 75);\par
  421     this->ui->tabel_sources->setColumnWidth(6, 125);\par
  422 //    this->ui->tabel_sources->setColumnWidth(7, 75);\par
  423     this->ui->tabel_sources->setColumnWidth(8, 75);\par
  424     this->ui->tabel_sources->setColumnWidth(9, 150);\par
  425     this->ui->tabel_sources->setColumnWidth(10, 125);\par
  426     this->ui->tabel_sources->setColumnWidth(11, 125);\par
  427 //    this->ui->tabel_sources->setColumnWidth(12, 75);\par
  428     this->ui->tabel_sources->setRowCount(rowSource);\par
  429 \par
  430     SigMapDel_Source = new QSignalMapper(this);\par
  431     SigMap_length_source = new QSignalMapper(this);\par
  432     SigMap_tReg_source = new QSignalMapper(this);\par
  433     for (int i = 0; i < rowSource; i++)\{\par
  434         check_source[i] = new QCheckBox(this);\par
  435         delete_source[i] = new QPushButton("Del", this);\par
  436         SigMapDel_Source->setMapping(delete_source[i], i);\par
  437         connect(delete_source[i],SIGNAL(clicked()),SigMapDel_Source,SLOT(map()));\par
  438 \par
  439         name_source[i] = new QLineEdit(this);\par
  440         name_source[i]->setValidator(new QRegExpValidator(QRegExp("^\\\\S\{1,10\}$"),this));\par
  441 \par
  442         ip_source[i] = new QLineEdit(this);\par
  443         ip_source[i]->setAlignment(Qt::AlignCenter);\par
  444         ip_source[i]->setInputMask("000.000.000.000");\par
  445 \par
  446         port_source[i] = new QSpinBox(this);\par
  447         port_source[i]->setAlignment(Qt::AlignCenter);\par
  448         port_source[i]->setRange(0,99999);\par
  449 \par
  450         state_source[i] = new QComboBox(this);\par
  451         state_source[i]->addItem("NOT ACTIVE",0);\par
  452         state_source[i]->addItem("ACTIVE",1);\par
  453 \par
  454         type_source[i] = new QComboBox(this);\par
  455         type_source[i]->addItem("",0);\par
  456         type_source[i]->addItem("Native",1);\par
  457         type_source[i]->addItem("PM810",2);\par
  458         type_source[i]->addItem("Santer",3);\par
  459         type_source[i]->addItem("GWR",4);\par
  460         type_source[i]->addItem("PM5560",5);\par
  461 \par
  462         id_source[i] = new QSpinBox(this);\par
  463         id_source[i]->setAlignment(Qt::AlignCenter);\par
  464         id_source[i]->setRange(0,999);\par
  465 \par
  466         sensor_reg_source[i] = new QSpinBox(this);\par
  467         sensor_reg_source[i]->setAlignment(Qt::AlignCenter);\par
  468         sensor_reg_source[i]->setRange(0,99999);\par
  469 \par
  470 //        OffsetBase_source[i] = new QComboBox(this);\par
  471 //        OffsetBase_source[i]->addItem("Offset",0);\par
  472 //        OffsetBase_source[i]->addItem("Base",1);\par
  473 \par
  474         command_source[i] = new QComboBox(this);\par
  475         command_source[i]->addItem("Read Holding Register",0);\par
  476         command_source[i]->addItem("Write Holding Register",1);\par
  477 \par
  478         length_source[i] = new QComboBox(this);\par
  479         for (int j = 0; j <= tModule.data.length()+(DATA_PERIOD*2); j+=2) \{\par
  480             length_source[i]->addItem(QString::number(j));\par
  481         \}\par
  482 \par
  483         target_reg_source[i] = new QComboBox(this);\par
  484         target_reg_source[i]->addItem("");\par
  485         for (int j = tModule.data.length()-(tModule.data.length()-(DATA_PERIOD*2)); j < tModule.data.length(); j++) \{\par
  486             str = tModule.data.at(j); list = str.split(';');\par
  487             target_reg_source[i]->addItem(list.at(1));\par
  488         \}\par
  489     \}\par
  490     connect(SigMapDel_Source,SIGNAL(mapped(int)),this,SLOT(del_src_clicked(int)));\par
  491 \par
  492     for (int i = 0; i < rowSource; i++)\{\par
  493         type = "Source - ";\par
  494         type.append(QString::number(i+1));\par
  495 \par
  496         if (i <= tModule.sumber.length()) \{\par
  497             if (this->checkFormula(tModule.sumber.at(i))) \{\par
  498                 str = tModule.sumber.at(i);\par
  499                 list = str.split(';');\par
  500                 name_source[i]->setText(list.at(1));\par
  501                 ip_source[i]->setText(list.at(2));\par
  502                 port_source[i]->setValue(list.at(3).toInt());\par
  503                 state_source[i]->setCurrentIndex(list.at(4).toInt());\par
  504                 type_source[i]->setCurrentIndex(list.at(5).toInt());\par
  505                 id_source[i]->setValue(list.at(6).toInt());\par
  506                 sensor_reg_source[i]->setValue(list.at(7).toInt());\par
  507 //                OffsetBase_source[i]->setCurrentIndex(list.at(8).toInt());\par
  508                 command_source[i]->setCurrentIndex(list.at(9).toInt());\par
  509                 length_source[i]->setCurrentText(list.at(10));\par
  510                 if (list[11] != "") \{\par
  511                     target_reg_source[i]->setCurrentText(list.at(11));\par
  512                 \} else \{\par
  513                     target_reg_source[i]->setCurrentIndex(0);\par
  514                 \}\par
  515             \} else \{\par
  516                 str = tModule.sumber.at(i);\par
  517                 list = str.split(';');\par
  518                 name_source[i]->setText(list.at(1));\par
  519                 ip_source[i]->setText(list.at(2));\par
  520                 port_source[i]->setValue(list.at(3).toInt());\par
  521                 state_source[i]->setCurrentIndex(list.at(4).toInt());\par
  522             \}\par
  523         \}\par
  524         SigMap_length_source->setMapping(length_source[i], i);\par
  525         connect(length_source[i],SIGNAL(currentIndexChanged(int)),SigMap_length_source,SLOT(map()));\par
  526         SigMap_tReg_source->setMapping(target_reg_source[i], i);\par
  527         connect(target_reg_source[i],SIGNAL(currentIndexChanged(int)),SigMap_tReg_source,SLOT(map()));\par
  528 \par
  529         this->ui->tabel_sources->setCellWidget(i,0, check_source[i]);\par
  530         this->ui->tabel_sources->setCellWidget(i,1, delete_source[i]);\par
  531         this->ui->tabel_sources->setItem(i,2, new QTableWidgetItem(type));\par
  532         this->ui->tabel_sources->setCellWidget(i,3, name_source[i]);\par
  533         this->ui->tabel_sources->setCellWidget(i,4, ip_source[i]);\par
  534         this->ui->tabel_sources->setCellWidget(i,5, port_source[i]);\par
  535         this->ui->tabel_sources->setCellWidget(i,6, state_source[i]);\par
  536         this->ui->tabel_sources->setCellWidget(i,7, type_source[i]);\par
  537         this->ui->tabel_sources->setCellWidget(i,8, id_source[i]);\par
  538         this->ui->tabel_sources->setCellWidget(i,9, command_source[i]);\par
  539         this->ui->tabel_sources->setCellWidget(i,10, sensor_reg_source[i]);\par
  540         this->ui->tabel_sources->setCellWidget(i,11, target_reg_source[i]);\par
  541         this->ui->tabel_sources->setCellWidget(i,12, length_source[i]);\par
  542     \}\par
  543     connect(SigMap_length_source,SIGNAL(mapped(int)),this,SLOT(length_src_changed()));\par
  544     connect(SigMap_tReg_source,SIGNAL(mapped(int)),this,SLOT(tReg_src_changed()));\par
  545     this->ui->tabel_sources->setEditTriggers(QAbstractItemView::NoEditTriggers);\par
  546 \par
  547     int val;\par
  548     for (int i = 0; i < tModule.jml_sumber; i++) \{\par
  549         for (int j = 0; j < tModule.jml_sumber; j++) \{\par
  550             for (int k = 0; k < length_source[i]->currentIndex(); k++) \{\par
  551                 qobject_cast<QStandardItemModel *>(target_reg_source[j]->model())\par
  552                         ->item(target_reg_source[i]->currentIndex()+k)\par
  553                         ->setEnabled(false);\par
  554             \}\par
  555             if (target_reg_source[i]->currentIndex() == 0) \{\par
  556                 for (int k = 0; k <= tModule.data.length()+(DATA_PERIOD*2); k+=2) \{\par
  557                     qobject_cast<QStandardItemModel *>(length_source[i]->model())\par
  558                             ->item(length_source[i]->findText(QString::number(k)))\par
  559                             ->setEnabled(false);\par
  560                 \}\par
  561             \} else \{\par
  562                 val = 0;\par
  563                 for (int k = 0; k < tModule.jml_sumber; k++) \{\par
  564                     val = val + length_source[k]->currentIndex();\par
  565                 \}\par
  566                 for (int k = 0; k < val; k++) \{\par
  567                     qobject_cast<QStandardItemModel *>(length_source[j]->model())\par
  568                             ->item((tModule.data.length()+(DATA_PERIOD*2))/2-k)\par
  569                             ->setEnabled(false);\par
  570                 \}\par
  571             \}\par
  572         \}\par
  573     \}\par
  574 \}\par
}
}
{\xe \v state_data_change\:formModule}
{\xe \v formModule\:state_data_change}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void state_data_change (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_data_change }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2494 \{\par
 2495 //    state_input[index]->setCurrentIndex(state_data_s[index]->currentIndex());\par
 2496 \}\par
}
}
{\xe \v state_kanal_change\:formModule}
{\xe \v formModule\:state_kanal_change}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void state_kanal_change (int  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_kanal_change }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2489 \{\par
 2490 //    state_data_s[index]->setCurrentIndex(state_input[index]->currentIndex());\par
 2491 \}\par
}
}
{\xe \v tReg_src_changed\:formModule}
{\xe \v formModule\:tReg_src_changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tReg_src_changed (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tReg_src_changed }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2291 \{\par
 2292     struct t_module tModule; module mod;\par
 2293     Address_Module = ".RTUdata/module/m_" + this->windowTitle() + ".dbe";\par
 2294     QString tmp; int val;\par
 2295     mod.read_module(&tModule, Address_Module);\par
 2296 \par
 2297     for (int i = 0; i < tModule.jml_sumber; i++) \{\par
 2298         for (int j = 0; j <= 30; j++) \{\par
 2299             qobject_cast<QStandardItemModel *>(length_source[i]->model())->item(j)->setEnabled(true);\par
 2300         \}\par
 2301         for (int j = 0; j <= 30; j++) \{\par
 2302             qobject_cast<QStandardItemModel *>(target_reg_source[i]->model())->item(j)->setEnabled(true);\par
 2303         \}\par
 2304     \}\par
 2305     for (int i = 0; i < tModule.jml_sumber; i++) \{\par
 2306         for (int j = 0; j < tModule.jml_sumber; j++) \{\par
 2307             for (int k = 0; k < length_source[i]->currentIndex(); k++) \{\par
 2308                 qobject_cast<QStandardItemModel *>(target_reg_source[j]->model())\par
 2309                         ->item(target_reg_source[i]->currentIndex()+k)\par
 2310                         ->setEnabled(false);\par
 2311             \}\par
 2312             if (target_reg_source[i]->currentIndex() == 0) \{\par
 2313                 for (int k = 0; k <= tModule.data.length()+(DATA_PERIOD*2); k+=2) \{\par
 2314                     qobject_cast<QStandardItemModel *>(length_source[i]->model())\par
 2315                             ->item(length_source[i]->findText(QString::number(k)))\par
 2316                             ->setEnabled(false);\par
 2317                 \}\par
 2318             \} else \{\par
 2319                 val = 0;\par
 2320                 for (int k = 0; k < tModule.jml_sumber; k++) \{\par
 2321                     val = val + length_source[k]->currentIndex();\par
 2322                 \}\par
 2323                 for (int k = 0; k < val; k++) \{\par
 2324                     qobject_cast<QStandardItemModel *>(length_source[j]->model())\par
 2325                             ->item((tModule.data.length()+(DATA_PERIOD*2))/2-k)\par
 2326                             ->setEnabled(false);\par
 2327                 \}\par
 2328             \}\par
 2329         \}\par
 2330     \}\par
 2331 \}\par
}
}
{\xe \v writeLogFile\:formModule}
{\xe \v formModule\:writeLogFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeLogFile (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writeLogFile }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  2158                               \{\par
 2159     /* Try and open a file for output */\par
 2160     QString outputFilename = PATH_LOG;\par
 2161     QFile outputFile(outputFilename);\par
 2162     outputFile.open(QIODevice::Append | QIODevice::Text);\par
 2163 \par
 2164     /* Check it opened OK */\par
 2165     if(!outputFile.isOpen())\{\par
 2166         qDebug() << "- Error, unable to open" << outputFilename << "for output";\par
 2167     \} else \{\par
 2168 \par
 2169         /* Point a QTextStream object at the file */\par
 2170         QTextStream outStream(&outputFile);\par
 2171 \par
 2172         /* Write the line to the file */\par
 2173         outStream << "----------" << "----------" <<\par
 2174                      "----------" << "----------" <<\par
 2175                      "----------" << "----------" <<\par
 2176                      "----------" << "----------" <<\par
 2177                      "----------" << "----------" <<\par
 2178                      "----------" << "----------" <<\par
 2179                      "----------" << "----------" <<\par
 2180                      "----------" << "----------" <<\par
 2181                      "\\r\\n";\par
 2182 \par
 2183         /* Close the file */\par
 2184         outputFile.close();\par
 2185     \}\par
 2186 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v Address_Module\:formModule}
{\xe \v formModule\:Address_Module}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Address_Module{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address_Module. }}\par
}
{\xe \v batas_h\:formModule}
{\xe \v formModule\:batas_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* batas_h[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
batas_h }}\par
}
{\xe \v batas_hh\:formModule}
{\xe \v formModule\:batas_hh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* batas_hh[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
batas_hh }}\par
}
{\xe \v batas_l\:formModule}
{\xe \v formModule\:batas_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* batas_l[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
batas_l }}\par
}
{\xe \v batas_ll\:formModule}
{\xe \v formModule\:batas_ll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* batas_ll[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
batas_ll }}\par
}
{\xe \v border_h_data_s\:formModule}
{\xe \v formModule\:border_h_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* border_h_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
border_h_data_s }}\par
}
{\xe \v border_hh_data_s\:formModule}
{\xe \v formModule\:border_hh_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* border_hh_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
border_hh_data_s }}\par
}
{\xe \v border_l_data_s\:formModule}
{\xe \v formModule\:border_l_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* border_l_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
border_l_data_s }}\par
}
{\xe \v border_ll_data_s\:formModule}
{\xe \v formModule\:border_ll_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* border_ll_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
border_ll_data_s }}\par
}
{\xe \v calib_m\:formModule}
{\xe \v formModule\:calib_m}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* calib_m[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calib_m }}\par
}
{\xe \v calib_x\:formModule}
{\xe \v formModule\:calib_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* calib_x[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calib_x }}\par
}
{\xe \v cancel\:formModule}
{\xe \v formModule\:cancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool cancel{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cancel }}\par
}
{\xe \v check_alarm\:formModule}
{\xe \v formModule\:check_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox* check_alarm[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check_alarm }}\par
}
{\xe \v check_data_s\:formModule}
{\xe \v formModule\:check_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox* check_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check_data_s }}\par
}
{\xe \v check_input\:formModule}
{\xe \v formModule\:check_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox* check_input[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check_input }}\par
}
{\xe \v check_output\:formModule}
{\xe \v formModule\:check_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox* check_output[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check_output }}\par
}
{\xe \v check_source\:formModule}
{\xe \v formModule\:check_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox* check_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check_source }}\par
}
{\xe \v command_source\:formModule}
{\xe \v formModule\:command_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* command_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
command_source }}\par
}
{\xe \v control\:formModule}
{\xe \v formModule\:control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* control[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control }}\par
}
{\xe \v delete_alarm\:formModule}
{\xe \v formModule\:delete_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPushButton* delete_alarm[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
delete_alarm }}\par
}
{\xe \v delete_source\:formModule}
{\xe \v formModule\:delete_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPushButton* delete_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
delete_source }}\par
}
{\xe \v diff\:formModule}
{\xe \v formModule\:diff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int diff{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
diff }}\par
}
{\xe \v faddModule\:formModule}
{\xe \v formModule\:faddModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b form_addModule}* faddModule{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
faddModule }}\par
}
{\xe \v fail\:formModule}
{\xe \v formModule\:fail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool fail{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fail }}\par
}
{\xe \v id_data_s\:formModule}
{\xe \v formModule\:id_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSpinBox* id_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
id_data_s }}\par
}
{\xe \v id_source\:formModule}
{\xe \v formModule\:id_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSpinBox* id_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
id_source }}\par
}
{\xe \v indx\:formModule}
{\xe \v formModule\:indx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int indx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
indx }}\par
}
{\xe \v input_alarm\:formModule}
{\xe \v formModule\:input_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* input_alarm[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
input_alarm }}\par
}
{\xe \v ip_source\:formModule}
{\xe \v formModule\:ip_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* ip_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ip_source }}\par
}
{\xe \v length_source\:formModule}
{\xe \v formModule\:length_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* length_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
length_source }}\par
}
{\xe \v list\:formModule}
{\xe \v formModule\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList list{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
list }}\par
}
{\xe \v list2\:formModule}
{\xe \v formModule\:list2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList list2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
list2 }}\par
}
{\xe \v Main\:formModule}
{\xe \v formModule\:Main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MainWindow}* Main{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main. }}\par
}
{\xe \v Message\:formModule}
{\xe \v formModule\:Message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message. }}\par
}
{\xe \v mod\:formModule}
{\xe \v formModule\:mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b module} mod{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mod }}\par
}
{\xe \v module_name\:formModule}
{\xe \v formModule\:module_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString module_name{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
module_name }}\par
}
{\xe \v name_alarm\:formModule}
{\xe \v formModule\:name_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* name_alarm[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_alarm }}\par
}
{\xe \v name_data\:formModule}
{\xe \v formModule\:name_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* name_data[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_data }}\par
}
{\xe \v name_data_s\:formModule}
{\xe \v formModule\:name_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* name_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_data_s }}\par
}
{\xe \v name_input\:formModule}
{\xe \v formModule\:name_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* name_input[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_input }}\par
}
{\xe \v name_output\:formModule}
{\xe \v formModule\:name_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* name_output[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_output }}\par
}
{\xe \v name_source\:formModule}
{\xe \v formModule\:name_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* name_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_source }}\par
}
{\xe \v NoSeri\:formModule}
{\xe \v formModule\:NoSeri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString NoSeri{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NoSeri. }}\par
}
{\xe \v output_alarm\:formModule}
{\xe \v formModule\:output_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* output_alarm[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
output_alarm }}\par
}
{\xe \v port_source\:formModule}
{\xe \v formModule\:port_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSpinBox* port_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
port_source }}\par
}
{\xe \v progress_dialog\:formModule}
{\xe \v formModule\:progress_dialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ProgressDialog}* progress_dialog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
progress_dialog }}\par
}
{\xe \v range_h\:formModule}
{\xe \v formModule\:range_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* range_h[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
range_h }}\par
}
{\xe \v range_h_data_s\:formModule}
{\xe \v formModule\:range_h_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* range_h_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
range_h_data_s }}\par
}
{\xe \v range_l\:formModule}
{\xe \v formModule\:range_l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* range_l[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
range_l }}\par
}
{\xe \v range_l_data_s\:formModule}
{\xe \v formModule\:range_l_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* range_l_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
range_l_data_s }}\par
}
{\xe \v reg_data\:formModule}
{\xe \v formModule\:reg_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* reg_data[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reg_data }}\par
}
{\xe \v reg_input\:formModule}
{\xe \v formModule\:reg_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* reg_input[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reg_input }}\par
}
{\xe \v reg_output\:formModule}
{\xe \v formModule\:reg_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSpinBox* reg_output[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reg_output }}\par
}
{\xe \v Request\:formModule}
{\xe \v formModule\:Request}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Request{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request. }}\par
}
{\xe \v reset\:formModule}
{\xe \v formModule\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int reset{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reset }}\par
}
{\xe \v sensor_reg_source\:formModule}
{\xe \v formModule\:sensor_reg_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSpinBox* sensor_reg_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sensor_reg_source }}\par
}
{\xe \v Serial\:formModule}
{\xe \v formModule\:Serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b serial}* Serial{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial. }}\par
}
{\xe \v Serial_Com\:formModule}
{\xe \v formModule\:Serial_Com}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSerialPort* Serial_Com{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial_Com. }}\par
}
{\xe \v Setting\:formModule}
{\xe \v formModule\:Setting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b setting}* Setting{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setting. }}\par
}
{\xe \v SigMap_length_source\:formModule}
{\xe \v formModule\:SigMap_length_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMap_length_source{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMap_length_source. }}\par
}
{\xe \v SigMap_tReg_source\:formModule}
{\xe \v formModule\:SigMap_tReg_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMap_tReg_source{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMap_tReg_source. }}\par
}
{\xe \v SigMapDel_alarm\:formModule}
{\xe \v formModule\:SigMapDel_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMapDel_alarm{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMapDel_alarm. }}\par
}
{\xe \v SigMapDel_Source\:formModule}
{\xe \v formModule\:SigMapDel_Source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMapDel_Source{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMapDel_Source. }}\par
}
{\xe \v SigMapInput_alarm\:formModule}
{\xe \v formModule\:SigMapInput_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMapInput_alarm{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMapInput_alarm. }}\par
}
{\xe \v SigMapReg_input\:formModule}
{\xe \v formModule\:SigMapReg_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMapReg_input{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMapReg_input. }}\par
}
{\xe \v SigMapState_data_s\:formModule}
{\xe \v formModule\:SigMapState_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMapState_data_s{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMapState_data_s. }}\par
}
{\xe \v SigMapState_input\:formModule}
{\xe \v formModule\:SigMapState_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* SigMapState_input{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SigMapState_input. }}\par
}
{\xe \v state_alarm\:formModule}
{\xe \v formModule\:state_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* state_alarm[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_alarm }}\par
}
{\xe \v state_data_s\:formModule}
{\xe \v formModule\:state_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* state_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_data_s }}\par
}
{\xe \v state_input\:formModule}
{\xe \v formModule\:state_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* state_input[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_input }}\par
}
{\xe \v state_output\:formModule}
{\xe \v formModule\:state_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* state_output[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_output }}\par
}
{\xe \v state_source\:formModule}
{\xe \v formModule\:state_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* state_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_source }}\par
}
{\xe \v str\:formModule}
{\xe \v formModule\:str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString str{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str }}\par
}
{\xe \v str2\:formModule}
{\xe \v formModule\:str2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString str2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str2 }}\par
}
{\xe \v target_reg_source\:formModule}
{\xe \v formModule\:target_reg_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* target_reg_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
target_reg_source }}\par
}
{\xe \v timeout\:formModule}
{\xe \v formModule\:timeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool timeout{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
timeout }}\par
}
{\xe \v tmp\:formModule}
{\xe \v formModule\:tmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString tmp{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tmp }}\par
}
{\xe \v tmp2\:formModule}
{\xe \v formModule\:tmp2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString tmp2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tmp2 }}\par
}
{\xe \v type\:formModule}
{\xe \v formModule\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
type }}\par
}
{\xe \v type_input\:formModule}
{\xe \v formModule\:type_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* type_input[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
type_input }}\par
}
{\xe \v type_output\:formModule}
{\xe \v formModule\:type_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* type_output[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
type_output }}\par
}
{\xe \v type_source\:formModule}
{\xe \v formModule\:type_source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QComboBox* type_source[16]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
type_source }}\par
}
{\xe \v ui\:formModule}
{\xe \v formModule\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::formModule* ui}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ui }}\par
}
{\xe \v unit_data\:formModule}
{\xe \v formModule\:unit_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* unit_data[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
unit_data }}\par
}
{\xe \v unit_data_s\:formModule}
{\xe \v formModule\:unit_data_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineEdit* unit_data_s[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
unit_data_s }}\par
}
{\xe \v value_data\:formModule}
{\xe \v formModule\:value_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* value_data[60]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
value_data }}\par
}
{\xe \v wait\:formModule}
{\xe \v formModule\:wait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wait_process* wait}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
wait }}\par
}
{\xe \v work\:formModule}
{\xe \v formModule\:work}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b worker}* work{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
work }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b formmodule.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b formmodule.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas gprs\par \pard\plain 
{\tc\tcl2 \v gprs}
{\xe \v gprs}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
{
{\f2 #include <gprs.h>}}\par
Diagram kolaborasi untuk gprs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d41/a00666.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v gprs\:gprs}
{\xe \v gprs\:gprs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b gprs} ()}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 \par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/communication/{\b gprs.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/communication/{\b gprs.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas gsm\par \pard\plain 
{\tc\tcl2 \v gsm}
{\xe \v gsm}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
{
{\f2 #include <gsm.h>}}\par
Diagram kolaborasi untuk gsm:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d97/a00670.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v gsm\:gsm}
{\xe \v gsm\:gsm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b gsm} ()}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 \par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/communication/{\b gsm.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/communication/{\b gsm.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas loginForm\par \pard\plain 
{\tc\tcl2 \v loginForm}
{\xe \v loginForm}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b loginForm} class. }}\par
{
{\f2 #include <loginform.h>}}\par
Diagram hierarki kelas untuk loginForm:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/ddc/a00727.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagram kolaborasi untuk loginForm:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d59/a00726.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabel Data\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b loginForm} class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v loginForm\:loginForm}
{\xe \v loginForm\:loginForm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b loginForm} (QWidget *  {\i parent} = {\f2 0}, QString  {\i mode} = {\f2 0}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b loginForm} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4                                                   :\par
    5     QDialog(parent),\par
    6     ui(new Ui::loginForm)\par
    7 \{\par
    8     ui->setupUi(this);\par
    9 \par
   10     formMode = mode;\par
   11     if (formMode == "CREATE") \{\par
   12         ui->label_4->setHidden(true);\par
   13         ui->loginButton->setText("Create User");\par
   14     \} else if (formMode == "EDIT") \{\par
   15         ui->editUser->setText(this->readUser());\par
   16         ui->editPass->setText(this->readPass());\par
   17         ui->label_4->setHidden(true);\par
   18         ui->loginButton->setText("Edit User");\par
   19     \} else \{\par
   20         ui->label_4->setHidden(false);\par
   21         loginForm::setWindowTitle("Log In");\par
   22         ui->loginButton->setText("Login");\par
   23     \}\par
   24 \par
   25     ui->editPass->setEchoMode(QLineEdit::Password);\par
   26 \}\par
}
}
{\xe \v ~loginForm\:loginForm}
{\xe \v loginForm\:~loginForm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
~{\b loginForm} ()}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    29 \{\par
   30     delete ui;\par
   31 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v loginSuccess\:loginForm}
{\xe \v loginForm\:loginSuccess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int loginSuccess ()}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
loginSuccess }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33                            \{\par
   34     QString user = ui->editUser->text();\par
   35     QString pass = ui->editPass->text();\par
   36 \par
   37     QFile usr(PATH_USER_ACCESS);\par
   38     if (usr.exists()) \{\par
   39         if (user == this->readUser() && pass == this->readPass()) return 1;\par
   40         else return 0;\par
   41     \} else \{\par
   42         if((user == DEFAULT_USERNAME && pass == DEFAULT_PASSWORD)) return 1;\par
   43 //        else if (user == "" && pass == "") return 1;\par
   44         else return 0;\par
   45     \}\par
   46 \}\par
}
}
{\xe \v on_loginButton_clicked\:loginForm}
{\xe \v loginForm\:on_loginButton_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_loginButton_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_loginButton_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    74 \{\par
   75     if (formMode == "CREATE" || formMode == "EDIT") \{\par
   76         this->writeUserAccess(ui->editUser->text(), ui->editPass->text());\par
   77         cryp code; code.encryp(PATH_USER_ACCESS);\par
   78         this->hide();\par
   79     \} else \{\par
   80         if(loginSuccess())\{\par
   81             MainWindow *mWindow;\par
   82             mWindow = new MainWindow(this);\par
   83             mWindow->showMaximized();\par
   84 \par
   85             this->hide();\par
   86         \} else \{\par
   87             QMessageBox::warning(this, "Warning!!", "Username & Password Not Match!", 0, 0);\par
   88             return;\par
   89         \}\par
   90     \}\par
   91 \}\par
}
}
{\xe \v readPass\:loginForm}
{\xe \v loginForm\:readPass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString readPass ()}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
readPass }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    65 \{\par
   66     cryp code; code.decryp(PATH_USER_ACCESS);\par
   67     QSettings sett(PATH_USER_ACCESS, QSettings::IniFormat);\par
   68     QString pass = sett.value("PASSWORD").toString();\par
   69     code.encryp(PATH_USER_ACCESS);\par
   70     return pass;\par
   71 \}\par
}
}
{\xe \v readUser\:loginForm}
{\xe \v loginForm\:readUser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString readUser ()}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
readUser }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    56 \{\par
   57     cryp code; code.decryp(PATH_USER_ACCESS);\par
   58     QSettings sett(PATH_USER_ACCESS, QSettings::IniFormat);\par
   59     QString user = sett.value("USER").toString();\par
   60     code.encryp(PATH_USER_ACCESS);\par
   61     return user;\par
   62 \}\par
}
}
{\xe \v writeUserAccess\:loginForm}
{\xe \v loginForm\:writeUserAccess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeUserAccess (QString  {\i user}, QString  {\i pass})}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writeUserAccess }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pass} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49 \{\par
   50     QSettings sett(PATH_USER_ACCESS, QSettings::IniFormat);\par
   51     sett.setValue("USER", user.toUtf8());\par
   52     sett.setValue("PASSWORD", pass.toUtf8());\par
   53 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v formMode\:loginForm}
{\xe \v loginForm\:formMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString formMode}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
formMode }}\par
}
{\xe \v ui\:loginForm}
{\xe \v loginForm\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::loginForm* ui{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ui }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b loginform.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b loginform.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas MainWindow\par \pard\plain 
{\tc\tcl2 \v MainWindow}
{\xe \v MainWindow}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b MainWindow} class. }}\par
{
{\f2 #include <mainwindow.h>}}\par
Diagram hierarki kelas untuk MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df7/a00731.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagram kolaborasi untuk MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/db1/a00730.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabel Data\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b MainWindow} class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v MainWindow\:MainWindow}
{\xe \v MainWindow\:MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MainWindow} (QWidget *  {\i parent} = {\f2 0}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b MainWindow}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    11                                       :\par
   12     QMainWindow(parent),\par
   13     ui(new Ui::MainWindow)\par
   14 \{\par
   15     ui->setupUi(this);\par
   16 \par
   17     MainWindow::setWindowTitle("Sarasvati ver 1.0.2-4 - MONITA RTU Configuration");\par
   18     ui->treeView->header()->setHidden(true);\par
   19     ui->treeView->setEditTriggers(QAbstractItemView::NoEditTriggers);\par
   20 \par
   21     init_signalSlots();\par
   22 \par
   23     module_count = 0;\par
   24 \par
   25     modelTree = new QStandardItemModel();\par
   26     this->Refresh_Tree();\par
   27 \par
   28     bottom_message = new QLabel(this);\par
   29     this->ui->statusBar->addPermanentWidget(bottom_message,1);\par
   30     bottom_message->setStyleSheet("QLabel \{ color : black; \}");\par
   31     bottom_message->setText("Not Connected");\par
   32 //    this->ui->statusBar->setStyleSheet("QLabel \{ color : black; \}");\par
   33 //    this->ui->statusBar->showMessage("Not Connected");\par
   34 \par
   35 //    serial = new QSerialPort(this);\par
   36 //    SettingsDialogForm = new SettingsDialog(this);\par
   37 \par
   38 //    connect(serial, SIGNAL(error(QSerialPort::SerialPortError)), this, SLOT(handleError(QSerialPort::SerialPortError)));\par
   39 \par
   40     SerialPort = new  QSerialPort(this);\par
   41     Serial = new serial();\par
   42     connect(SerialPort, SIGNAL(readyRead()), this, SLOT(readData()));\par
   43     connect(SerialPort, SIGNAL(error(QSerialPort::SerialPortError)), this,SLOT(handleError(QSerialPort::SerialPortError)));\par
   44 \par
   45     this->ui->actionConnect->setEnabled(true);\par
   46     this->ui->actionDisconnect->setEnabled(false);\par
   47     this->ui->actionConfig->setEnabled(true);\par
   48 \par
   49     QFile usr(PATH_USER_ACCESS);\par
   50     if (usr.exists()) \{\par
   51         this->ui->actionCreate_User->setEnabled(false);\par
   52         this->ui->actionEdit_User->setEnabled(true);\par
   53     \} else \{\par
   54         this->ui->actionCreate_User->setEnabled(true);\par
   55         this->ui->actionEdit_User->setEnabled(false);\par
   56     \}\par
   57 \par
   58     progress_dialog = new ProgressDialog(this);\par
   59     progress_dialog->setModal(true);\par
   60     standBy = false;\par
   61 \}\par
}
}
{\xe \v ~MainWindow\:MainWindow}
{\xe \v MainWindow\:~MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
~{\b MainWindow} ()}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    64 \{\par
   65 //    if (serial->isOpen())\par
   66 //        serial->close();\par
   67     delete ui;\par
   68 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v checkRinjaniPassword\:MainWindow}
{\xe \v MainWindow\:checkRinjaniPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void checkRinjaniPassword ()}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
checkRinjaniPassword }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   693 \{\par
  694     standBy = false;\par
  695 //    int cnt_standBy_timeout = 0; int cnt = 0;\par
  696 //    while (!standBy) \{\par
  697 //        cnt_standBy_timeout++;\par
  698 //        if (cnt_standBy_timeout > 50000) \{\par
  699 //            if (SerialPort->isOpen()) \{\par
  700 //                SerialPort->write("\\r\\n");\par
  701 //                cnt_standBy_timeout = 0; cnt++;\par
  702 //            \} else \{\par
  703 //                qDebug() << "Not Connected";\par
  704 //            \}\par
  705 //        \}\par
  706 //        if (standBy) break;\par
  707 //        if (cnt > 10) break;\par
  708 //    \}\par
  709     SerialPort->write("\\r\\n");\par
  710     qDebug() << "Selesai Periksa";\par
  711 \}\par
}
}
{\xe \v handleError\:MainWindow}
{\xe \v MainWindow\:handleError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleError (QSerialPort::SerialPortError  {\i error}){\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
handleError }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   719 \{\par
  720     if (error == QSerialPort::ResourceError) \{\par
  721 //        QMessageBox::critical(this, tr("Critical Error"), SerialPort->errorString());\par
  722         this->on_actionDisconnect_triggered();\par
  723         QMessageBox::critical(this, tr("Critical Error"), "Please check your connection ..!!!");\par
  724     \}\par
  725 \}\par
}
}
{\xe \v init_signalSlots\:MainWindow}
{\xe \v MainWindow\:init_signalSlots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void init_signalSlots (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
init_signalSlots }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    70                                  \{\par
   71     num_window = 0;\par
   72     windowMapper = new QSignalMapper(this);\par
   73 \par
   74     QObject::connect(ui->menuActive_Window, SIGNAL(aboutToShow()), this, SLOT(update_activeWindow()));\par
   75     QObject::connect(windowMapper, SIGNAL(mapped(QWidget*)), this, SLOT(setActiveSubWindow(QWidget*)));\par
   76 \}\par
}
}
{\xe \v on_actionConfig_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionConfig_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionConfig_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionConfig_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   656 \{\par
  657     int exe;\par
  658     settings_dialog = new SettingsDialog(this);\par
  659     settings_dialog->setWindowTitle("Serial Communication Setting");\par
  660     settings_dialog->setModal(true);\par
  661     exe = settings_dialog->exec();\par
  662     if(exe == 0) return;\par
  663 \}\par
}
}
{\xe \v on_actionConnect_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionConnect_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionConnect_triggered (){\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionConnect_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   420 \{\par
  421     struct t_serial_settings tSerial;\par
  422     serial Serial;\par
  423     setting Setting;\par
  424 \par
  425     if (!Setting.checkSetting()) \{\par
  426         int exe;\par
  427         settings_dialog = new SettingsDialog(this);\par
  428         settings_dialog->setWindowTitle("Serial Communication Setting");\par
  429         settings_dialog->setModal(true);\par
  430         exe = settings_dialog->exec();\par
  431         if(exe == 0) return;\par
  432 \par
  433         Setting.read_setting(&tSerial);\par
  434         if (!SerialPort->isOpen())\par
  435             Serial.open_serial(SerialPort, &tSerial);\par
  436     \} else \{\par
  437         Setting.read_setting(&tSerial);\par
  438         if (!SerialPort->isOpen())\par
  439             Serial.open_serial(SerialPort, &tSerial);\par
  440     \}\par
  441 \par
  442     if (SerialPort->open(QIODevice::ReadWrite)) \{\par
  443         this->checkRinjaniPassword();\par
  444 //        if (standBy) \{\par
  445             Setting.read_setting(&tSerial);\par
  446             bottom_message->setStyleSheet("QLabel \{ color : blue; \}");\par
  447 //            this->ui->statusBar->setStyleSheet("QLabel \{ color : blue; \}");\par
  448             StatusMessage = QString("Connected to ") + tSerial.name +\par
  449                             QString(", BR = ") + tSerial.stringBaudRate +\par
  450                             QString(", DB = ") + tSerial.stringDataBits +\par
  451                             QString(", PR = ") + tSerial.stringParity +\par
  452                             QString(", SB = ") + tSerial.stringStopBits +\par
  453                             QString(", FC = ") + tSerial.stringFlowControl;\par
  454             bottom_message->setText(StatusMessage);\par
  455             this->ui->statusBar->showMessage(StatusMessage);\par
  456             this->ui->actionConnect->setEnabled(false);\par
  457             this->ui->actionDisconnect->setEnabled(true);\par
  458             this->ui->actionConfig->setEnabled(false);\par
  459 //        \} else \{\par
  461 //            bottom_message->setStyleSheet("QLabel \{ color : red; \}");\par
  462 //            bottom_message->setText("Connecting Fail");\par
  465 //            if (SerialPort->isOpen()) SerialPort->close();\par
  466 //            this->ui->actionConnect->setEnabled(true);\par
  467 //            this->ui->actionDisconnect->setEnabled(false);\par
  468 //            this->ui->actionConfig->setEnabled(true);\par
  469 //        \}\par
  470     \} else \{\par
  471 //        QMessageBox::critical(this, tr("Error"), SerialPort->errorString());\par
  472         bottom_message->setStyleSheet("QLabel \{ color : red; \}");\par
  473         bottom_message->setText("Connecting Fail");\par
  474 //        this->ui->statusBar->setStyleSheet("QLabel \{ color : red; \}");\par
  475 //        this->ui->statusBar->showMessage("Connecting Fail");\par
  476         if (SerialPort->isOpen())\par
  477             SerialPort->close();\par
  478         this->ui->actionConnect->setEnabled(true);\par
  479         this->ui->actionDisconnect->setEnabled(false);\par
  480         this->ui->actionConfig->setEnabled(true);\par
  481     \}\par
  482 \}\par
}
}
{\xe \v on_actionCreate_User_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionCreate_User_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionCreate_User_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionCreate_User_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   728 \{\par
  729     int exe;\par
  730     LoginForm = new loginForm(this, "CREATE");\par
  731     LoginForm->setWindowTitle("Create User Access");\par
  732     LoginForm->setModal(true);\par
  733     exe = LoginForm->exec();\par
  734     if(exe != 0) return;\par
  735 \par
  736     this->ui->actionCreate_User->setEnabled(false);\par
  737     this->ui->actionEdit_User->setEnabled(true);\par
  738 \}\par
}
}
{\xe \v on_actionDelete_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionDelete_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionDelete_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionDelete_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   349 \{\par
  350     QString Message;\par
  351     if (!module_name_sv.isEmpty()) \{\par
  352         Message = "Module : " + module_name_sv.remove("m_").remove(".dbe") + "\\n\\nAre you sure you want to delete this module";\par
  353         QMessageBox::StandardButton reply;\par
  354         reply = QMessageBox::question(this, "Attention !!", Message,\par
  355                                       QMessageBox::Yes|QMessageBox::No);\par
  356         if (reply == QMessageBox::Yes) \{\par
  357             QList<QMdiSubWindow *> windows = ui->mdiArea->subWindowList();\par
  358             for (int i = 0; i < windows.size(); i++) \{\par
  359                 if (module_name_sv.remove("m_").remove(".dbe") == windows.at(i)->windowTitle()) \{\par
  360                     windows.at(i)->close();\par
  361                 \}\par
  362             \}\par
  363             QFile d_m(module_address_sv);\par
  364             if (d_m.remove()) \{\par
  365                 Message = "Module with name : " + module_name_sv + " was deleted";\par
  366                 QMessageBox::information(this, "Delete Successfully ..", Message, 0, 0);\par
  367             \} else \{\par
  368                 Message = d_m.errorString();\par
  369                 QMessageBox::information(this, "Delete Error ..", Message, 0, 0);\par
  370             \}\par
  371             this->Refresh_Tree();\par
  372         \}\par
  373     \} else \{\par
  374         QMessageBox::information(this, "Cannot Deleting ..", "Please Select Module Name Before Delete Module ..", 0, 0);\par
  375     \}\par
  376 \}\par
}
}
{\xe \v on_actionDisconnect_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionDisconnect_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionDisconnect_triggered (){\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionDisconnect_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   485 \{\par
  486 //    serial Serial;\par
  487 //    Serial.close_serial(SerialPort);\par
  488     if (SerialPort->isOpen()) \{\par
  489 //        if (SerialPort->open(QIODevice::ReadWrite)) \{\par
  490 //            SerialPort->close();\par
  491 //        \} else if (SerialPort->open(QIODevice::ReadOnly)) \{\par
  492 //            SerialPort->close();\par
  493 //        \}\par
  494         SerialPort->close();\par
  495         bottom_message->setStyleSheet("QLabel \{ color : black; \}");\par
  496 //        this->ui->statusBar->setStyleSheet("QLabel \{ color : black; \}");\par
  497         StatusMessage.replace("Connected to ", "Disconnected from ");\par
  498 //        StatusMessage = "Disconnect";\par
  499         bottom_message->setText(StatusMessage);\par
  500 //        this->ui->statusBar->showMessage(StatusMessage);\par
  501     \} else \{\par
  502         bottom_message->setStyleSheet("QLabel \{ color : black; \}");\par
  503 //        this->ui->statusBar->setStyleSheet("QLabel \{ color : black; \}");\par
  504         StatusMessage = "Disconnect";\par
  505         bottom_message->setText(StatusMessage);\par
  506 //        this->ui->statusBar->showMessage(StatusMessage);\par
  507     \}\par
  508 \par
  509     this->ui->actionConnect->setEnabled(true);\par
  510     this->ui->actionDisconnect->setEnabled(false);\par
  511     this->ui->actionConfig->setEnabled(true);\par
  512 \}\par
}
}
{\xe \v on_actionEdit_User_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionEdit_User_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionEdit_User_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionEdit_User_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   741 \{\par
  742     int exe;\par
  743     LoginForm = new loginForm(this, "EDIT");\par
  744     LoginForm->setWindowTitle("Edit User Access");\par
  745     LoginForm->setModal(true);\par
  746     exe = LoginForm->exec();\par
  747     if(exe == 0) return;\par
  748 \}\par
}
}
{\xe \v on_actionExit_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionExit_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionExit_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionExit_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   751 \{\par
  752     QApplication::quit();\par
  753 \}\par
}
}
{\xe \v on_actionLoad_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionLoad_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionLoad_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionLoad_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   265 \{\par
  266     struct t_module tModule;\par
  267     bool cek;\par
  268     QString currName;\par
  269     QString newName;\par
  270     int cpy_num = 0;\par
  271     QString file;\par
  272     QString command;\par
  273 \par
  274     QStringList fileName = QFileDialog::getOpenFileNames(this, tr("Load Module"), tr(".RTUdata/module/"), tr("(*.dbe)"));\par
  275 \par
  276     if (fileName.isEmpty()) return;\par
  277 \par
  278     for(int i = 0; i < fileName.count(); i++)\{\par
  279         mod->read_module(&tModule, fileName.at(i));\par
  280         file.sprintf("m_%s.dbe", tModule.module_name);\par
  281 //        file = work->checkModule(QString(fileName.at(i)).toUtf8().data());\par
  282         cek = false;\par
  283         for (int j = 0; j < module_count; j++) \{\par
  284             currName = module_name[j];\par
  285             if (currName.prepend("m_").append(".dbe") == file) \{\par
  286                 cek = true;\par
  287                 break;\par
  288             \} else \{\par
  289                 cek = false;\par
  290             \}\par
  291         \}\par
  292         if (!cek) \{\par
  293             mod->write_module(&tModule);\par
  294             QString pth; pth.sprintf(".RTUdata/module/m_%s.dbe", tModule.module_name);\par
  295             cryp code; code.encryp(pth);\par
  296 \par
  297 //            QApplication::processEvents();\par
  298             module_name[module_count] = work->loadModule(modelTree, this->ui->treeView, pth, newName);\par
  299 //            module_name[module_count] = work->loadModule(modelTree, this->ui->treeView, QString(fileName.at(i)).toUtf8().data(), newName);\par
  300             module_count++;\par
  301 //            this->Refresh_Tree();\par
  302         \} else \{\par
  303             command.sprintf("Module : %s\\nis Exist !!\\n\\n", file.toUtf8().data());\par
  304             command.append("Replace it ??");\par
  305             QMessageBox::StandardButton reply;\par
  306             reply = QMessageBox::question(this, "Attention !!", command,\par
  307                                           QMessageBox::Yes|QMessageBox::No);\par
  308             if (reply == QMessageBox::Yes) \{\par
  309                 mod->read_module(&tModule, fileName[i]);\par
  310                 mod->write_module(&tModule);\par
  311                 QString pth; pth.sprintf(".RTUdata/module/m_%s.dbe", tModule.module_name);\par
  312                 cryp code; code.encryp(pth);\par
  313                 return;\par
  314             \} else \{\par
  315                 mod->read_module(&tModule, fileName[i]);\par
  316                 cek = false;\par
  317                 while (1) \{\par
  318                     cpy_num++;\par
  319                     newName.sprintf("%s_%d", tModule.module_name, cpy_num);\par
  320                     for (int l = 0; l < module_count; l++) \{\par
  321                         currName = module_name[l];\par
  322                         if (currName == newName) \{\par
  323                             cek = true;\par
  324                             break;\par
  325                         \} else \{\par
  326                             cek = false;\par
  327                             strcpy(tModule.module_name, newName.toLatin1());\par
  328                         \}\par
  329                     \}\par
  330                     if (!cek)\par
  331                         break;\par
  332                 \}\par
  333                 if(!cek) \{\par
  334                     mod->write_module(&tModule);\par
  335                     QString pth; pth.sprintf(".RTUdata/module/m_%s.dbe", tModule.module_name);\par
  336                     cryp code; code.encryp(pth);\par
  337 \par
  338 //                    QApplication::processEvents();\par
  339                     module_name[module_count] = work->loadModule(modelTree, this->ui->treeView, pth, newName);\par
  340 //                    module_name[module_count] = work->loadModule(modelTree, this->ui->treeView, QString(fileName.at(i)).toUtf8().data(), newName);\par
  341                     module_count++;\par
  342                 \}\par
  343             \}\par
  344         \}\par
  345     \}\par
  346 \}\par
}
}
{\xe \v on_actionNew_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionNew_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionNew_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionNew_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   102 \{\par
  103     if (SerialPort->isOpen()) \{\par
  104 //        this->checkRinjaniPassword();\par
  105 //        if (standBy) \{\par
  106             bool timeout = false;\par
  107             timeout = work->Request_ENV(SerialPort, timeout);\par
  108             if (timeout) \{this->on_actionDisconnect_triggered(); QMessageBox::information(this, "Serial Communication", "Please check your serial communication port ..", 0, 0); return;\}\par
  109 \par
  110             struct t_module tModule;\par
  111             bool cek = false;\par
  112             QString command;\par
  113             QString newFiles;\par
  114             QDir path(".RTUdata/module");\par
  115             QStringList files = path.entryList(QDir::Files);\par
  116 \par
  117             newFiles = GetNamaBoard;\par
  118             newFiles.prepend("m_").append(".dbe");\par
  119 \par
  120             /* cek apakah nama module sudah dipakai atau belum */\par
  121             for(int i = 0; i < files.count(); i++)\{\par
  122                 if(newFiles == QString(files.at(i))) \{\par
  123                     cek = true;\par
  124                     break;\par
  125                 \} else \{\par
  126                     cek = false;\par
  127                 \}\par
  128             \}\par
  129 \par
  130             if (cek) \{\par
  131                 command.sprintf("Module : %s\\nis Exist !!\\n\\n", GetNamaBoard.toUtf8().data());\par
  132                 command.append("Replace it ??");\par
  133                 QMessageBox::StandardButton reply;\par
  134                 reply = QMessageBox::question(this, "Attention !!", command,\par
  135                                               QMessageBox::Yes|QMessageBox::No);\par
  136                 if (reply == QMessageBox::Yes) \{\par
  137                     QString Address = ".RTUdata/module/" + newFiles;\par
  138                     mod->read_module(&tModule, Address);\par
  139                     strcpy(tModule.serial_number, GetNoSeri.toLatin1());\par
  140 \par
  141                     progress_dialog->show();\par
  142                     progress_dialog->setWindowTitle("Get from board ..");\par
  143                     progress_dialog->Processing(SerialPort, Address, "0000;0001;0005;0002;0004");\par
  144                     progress_dialog->close();\par
  145 \par
  146                 \} else \{\par
  147                     GetNamaBoard.append("_new");\par
  148                     QString newModule = "m_" + GetNamaBoard + ".dbe";\par
  149                     strcpy(tModule.module_name, GetNamaBoard.toUtf8().data());\par
  150                     strcpy(tModule.serial_number, GetNoSeri.toLatin1());\par
  151                     QString Address = ".RTUdata/module/" + newModule;\par
  152 \par
  153                     tModule.InputName.clear();\par
  154                     tModule.OutputName.clear();\par
  155                     tModule.jml_alarm = 0;\par
  156 \par
  157                     progress_dialog->show();\par
  158                     progress_dialog->setWindowTitle("Get from board ..");\par
  159                     progress_dialog->Processing(SerialPort, Address, "0000;0001;0005;0002;0004");\par
  160                     progress_dialog->close();\par
  161 \par
  162                     faddModule = new form_addModule(this, false, Address, 1);\par
  163                     faddModule->setWindowTitle("New Module");\par
  164                     faddModule->setModal(true);\par
  165 \par
  166                     faddModule->exec();\par
  167 \par
  168                     if (faddModule->accept == 0) \{\par
  169                         QFile CurrFile(Address);\par
  170                         CurrFile.remove();\par
  171                         return;\par
  172                     \}\par
  173 \par
  174                     Address = faddModule->currentFile;\par
  175                     mod->read_module(&tModule, Address);\par
  176 \par
  177                     bool fail = false;\par
  178 \par
  179                     progress_dialog->show();\par
  180                     progress_dialog->setWindowTitle("Set to board ..");\par
  181                     progress_dialog->Processing(SerialPort, Address, "0100;0101");\par
  182                     progress_dialog->close();\par
  183 \par
  184                     this->GetNamaBoard.sprintf("%s", tModule.module_name);\par
  185                     this->Refresh_Tree();\par
  186 \par
  187                     if (fail) \{\par
  188                         this->on_actionDisconnect_triggered();\par
  189                         QMessageBox::information(this,\par
  190                                                  "Serial Communication",\par
  191                                                  "Please check your serial communication port ..", 0, 0);\par
  192                         return;\par
  193                     \}\par
  194                 \}\par
  195             \} else \{\par
  196                 QString Address = ".RTUdata/module/" + newFiles;\par
  197                 tModule.InputName.clear();\par
  198                 tModule.OutputName.clear();\par
  199                 tModule.jml_alarm = 0;\par
  200 \par
  201                 progress_dialog->show();\par
  202                 progress_dialog->setWindowTitle("Get from board ..");\par
  203                 progress_dialog->Processing(SerialPort, Address, "0000;0001;0005;0002;0004");\par
  204                 progress_dialog->close();\par
  205 \par
  206                 strcpy(tModule.module_name, GetNamaBoard.toUtf8().data());\par
  207                 strcpy(tModule.serial_number, GetNoSeri.toLatin1());\par
  208 \par
  209                 QString title;\par
  210                 title.sprintf("%s", tModule.module_name);\par
  211 \par
  212                 module_name[module_count] = work->newModule(modelTree, this->ui->treeView, title);\par
  213                 module_count++;\par
  214             \}\par
  215 //        \} else \{\par
  217 //            bottom_message->setStyleSheet("QLabel \{ color : red; \}");\par
  218 //            bottom_message->setText("Connecting Fail");\par
  221 //            if (SerialPort->isOpen()) SerialPort->close();\par
  222 //            this->ui->actionConnect->setEnabled(true);\par
  223 //            this->ui->actionDisconnect->setEnabled(false);\par
  224 //            this->ui->actionConfig->setEnabled(true);\par
  225 //        \}\par
  226     \} else \{\par
  227         faddModule = new form_addModule(this, true);\par
  228         faddModule->setWindowTitle("New Module");\par
  229         faddModule->setModal(true);\par
  230 \par
  231         faddModule->exec();\par
  232 \par
  233         if (faddModule->accept == 0) return;\par
  234 \par
  235         QString title;\par
  236         title.sprintf("%s [%s]", faddModule->ui->edit_module_name->text().toUtf8().data(), faddModule->ui->edit_sn->text().toUtf8().data());\par
  237 \par
  238         module_name[module_count] = work->newModule(modelTree, this->ui->treeView, title);\par
  239         module_count++;\par
  240         this->GetNamaBoard = title;\par
  241     \}\par
  242     QString Message = this->GetNamaBoard;\par
  243     Message.prepend("Module with name : \\n").append("\\nwas created ..");\par
  244     QMessageBox::information(this, "New Module", Message, 0, 0);\par
  245 \}\par
}
}
{\xe \v on_actionRefresh_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionRefresh_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionRefresh_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionRefresh_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   714 \{\par
  715     this->Refresh_Tree();\par
  716 \}\par
}
}
{\xe \v on_actionSave_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionSave_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_actionSave_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_actionSave_triggered }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   248 \{\par
  249     QString Message;\par
  250     if (!module_name_sv.isEmpty()) \{\par
  251         struct t_module tModule;\par
  252         mod->read_module(&tModule, module_address_sv);\par
  253         QString newAddress = QFileDialog::getSaveFileName(this, tr("Save As Module"), module_address_sv, tr("(*.dbe)"));\par
  254         mod->save_as_module(&tModule, newAddress);\par
  255         cryp code; code.encryp(newAddress);\par
  256         Message = "Module with name : " + module_name_sv + " was saved on \\n\\n";\par
  257         Message.append(newAddress);\par
  258         QMessageBox::information(this, "Saving Successfully ..", Message, 0, 0);\par
  259     \} else \{\par
  260         QMessageBox::information(this, "Cannot Saving ..", "Please Select Module Name Before Save Module ..", 0, 0);\par
  261     \}\par
  262 \}\par
}
}
{\xe \v on_treeView_clicked\:MainWindow}
{\xe \v MainWindow\:on_treeView_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_treeView_clicked (const QModelIndex &  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_treeView_clicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   379 \{\par
  380     QString name = index.data(Qt::DisplayRole).toString();\par
  381     QStringList list = name.split(" ");\par
  382     name = list.at(0);\par
  383     if(work->checkIfmodule(name)) \{\par
  384         module_name_sv = name;\par
  385         module_name_sv.prepend("m_").append(".dbe");\par
  386         module_address_sv = ".RTUdata/module/" + module_name_sv;\par
  387     \} else \{\par
  388         module_name_sv = "";\par
  389         module_address_sv = "";\par
  390         return;\par
  391     \}\par
  392 \}\par
}
}
{\xe \v on_treeView_doubleClicked\:MainWindow}
{\xe \v MainWindow\:on_treeView_doubleClicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_treeView_doubleClicked (const QModelIndex &  {\i index}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_treeView_doubleClicked }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   395 \{\par
  396     QString name = index.data(Qt::DisplayRole).toString();\par
  397     QStringList list = name.split(" ");\par
  398     name = list.at(0);\par
  399     QList<QMdiSubWindow *> windows = ui->mdiArea->subWindowList();\par
  400     bool cek = false;\par
  401     for (int i = 0; i < windows.size(); i++)\{\par
  402         QWidget *sublist = qobject_cast<QWidget *>(windows.at(i)->widget());\par
  403 \par
  404         if (name == sublist->windowTitle()) \{\par
  405             sublist->setFocus();\par
  406             cek = true;\par
  407         \}\par
  408     \}\par
  409 \par
  410     if (cek)\par
  411         return;\par
  412 \par
  413     if(work->checkIfmodule(name))\par
  414         work->showModule(this, this->ui->mdiArea, name, SerialPort);\par
  415     else\par
  416         return;\par
  417 \}\par
}
}
{\xe \v readData\:MainWindow}
{\xe \v MainWindow\:readData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readData (){\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
readData }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   515 \{\par
  516     QCoreApplication::processEvents();\par
  517     struct t_serial_settings tSerial;\par
  518     str_data.append(SerialPort->readAll());\par
  519     if (str_data.indexOf("<ENV") > 0 && str_data.indexOf("ENV>") > 0) \{\par
  520         int a = str_data.indexOf("<ENV");\par
  521         int b = str_data.indexOf("ENV>");\par
  522         str_data = str_data.mid(a+4, b-a);\par
  523         val_data = str_data\par
  524                     .remove(" ")\par
  525                     .remove("<ENV")\par
  526                     .remove("<ENVani$")\par
  527                     .remove("ENV>")\par
  528                     .remove("Rinjani$")\par
  529                     .remove("0000")\par
  530                     .remove("hmi_cek_env")\par
  531                     .remove("\\r").remove("\\n").split(";");\par
  532         GetNamaBoard = val_data[0];\par
  533         GetNoSeri = val_data[1];\par
  534         tSerial.str_data_env = str_data;\par
  535         Serial->write_parsing_env(&tSerial);\par
  536         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  537         str_data.clear();\par
  538         FinishRead = true;\par
  539         progress_dialog->write_FinishRead(FinishRead, 0, "");\par
  540         code.encryp(PATH_SERIAL_PARSING);\par
  541     \} else if (str_data.indexOf("<I/O") > 0 && str_data.indexOf("I/O>") > 0) \{\par
  542         int a = str_data.indexOf("<I/O");\par
  543         int b = str_data.indexOf("I/O>");\par
  544         str_data = str_data.mid(a+4, b-a);\par
  545         val_data = str_data\par
  546                     .remove(" ")\par
  547                     .remove("<I/O")\par
  548                     .remove("<I/Oani$")\par
  549                     .remove("I/O>")\par
  550                     .remove("Rinjani$")\par
  551                     .remove("hmi_sync")\par
  552                     .remove("\\r").remove("\\n").remove("(X)").split("*");\par
  553         tSerial.str_data_io = str_data;\par
  554         Serial->write_parsing_io(&tSerial);\par
  555         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  556         str_data.clear();\par
  557         FinishRead = true;\par
  558         progress_dialog->write_FinishRead(FinishRead, 0, "");\par
  559         code.encryp(PATH_SERIAL_PARSING);\par
  560     \} else if (str_data.indexOf("<SIM") > 0 && str_data.indexOf("SIM>") > 0) \{\par
  561         int a = str_data.indexOf("<SIM");\par
  562         int b = str_data.indexOf("SIM>");\par
  563         str_data = str_data.mid(a+4, b-a);\par
  564         val_data = str_data\par
  565                     .remove(" ")\par
  566                     .remove("<SIM")\par
  567                     .remove("<SIMani$")\par
  568                     .remove("SIM>")\par
  569                     .remove("Rinjani$")\par
  570                     .remove("0001")\par
  571                     .remove("hmi_cek_cfg_sim")\par
  572                     .remove("\\r").remove("\\n").remove("(X)").split("*");\par
  573         tSerial.str_data_sim = str_data;\par
  574         Serial->write_parsing_sim(&tSerial);\par
  575         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  576         str_data.clear();\par
  577         FinishRead = true;\par
  578         progress_dialog->write_FinishRead(FinishRead, 0, "");\par
  579         code.encryp(PATH_SERIAL_PARSING);\par
  580     \} else if (str_data.indexOf("<SRC") > 0 && str_data.indexOf("SRC>") > 0) \{\par
  581         int a = str_data.indexOf("<SRC");\par
  582         int b = str_data.indexOf("SRC>");\par
  583         str_data = str_data.mid(a+4, b-a);\par
  584         val_data = str_data\par
  585                     .remove(" ")\par
  586                     .remove("<SRC")\par
  587                     .remove("<SRCani$")\par
  588                     .remove("SRC>")\par
  589                     .remove("Rinjani$")\par
  590                     .remove("0004")\par
  591                     .remove("hmi_cek_sumber")\par
  592                     .remove("\\r").remove("\\n").remove("(X)").split("*");\par
  593         tSerial.str_data_src = str_data;\par
  594         Serial->write_parsing_src(&tSerial);\par
  595         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  596         str_data.clear();\par
  597         FinishRead = true;\par
  598         progress_dialog->write_FinishRead(FinishRead, 0, "");\par
  599         code.encryp(PATH_SERIAL_PARSING);\par
  600     \} else if (str_data.indexOf("<DAT") > 0 && str_data.indexOf("DAT>") > 0) \{\par
  601         int a = str_data.indexOf("<DAT");\par
  602         int b = str_data.indexOf("DAT>");\par
  603         str_data = str_data.mid(a+4, b-a);\par
  604         val_data = str_data\par
  605                     .remove(" ")\par
  606                     .remove("<DAT")\par
  607                     .remove("<DATani$")\par
  608                     .remove("DAT>")\par
  609                     .remove("Rinjani$")\par
  610                     .remove("0005")\par
  611                     .remove("hmi_cek_data")\par
  612                     .remove("\\r").remove("\\n").remove("(X)").split("*");\par
  613         tSerial.str_data_dat = str_data;\par
  614         Serial->write_parsing_dat(&tSerial);\par
  615         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  616         str_data.clear();\par
  617         FinishRead = true;\par
  618         progress_dialog->write_FinishRead(FinishRead, 0, "");\par
  619         code.encryp(PATH_SERIAL_PARSING);\par
  620     \} else if (str_data.indexOf("<OK>") > 0) \{\par
  621         FinishRead = true;\par
  622         progress_dialog->write_FinishRead(FinishRead, 0, "");\par
  623         str_data.clear();\par
  624         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  625     \} else if (str_data.indexOf("<OK:") > 0 && str_data.indexOf(":OK>") > 0) \{\par
  626         int a = str_data.indexOf("<OK:");\par
  627         int b = str_data.indexOf(":OK>");\par
  628         str_data = str_data.mid(a+4, b-a-4);\par
  629         FinishRead = true;\par
  630         progress_dialog->write_FinishRead(FinishRead, 0, str_data);\par
  631         str_data.clear();\par
  632         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  633     \} else if (str_data.indexOf("<ERR>") > 0) \{\par
  634         FinishRead = true;\par
  635         progress_dialog->write_FinishRead(FinishRead, 1, "ERROR");\par
  636         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  637         str_data.clear();\par
  638     \} else if (str_data.indexOf("<ERR:") > 0 && str_data.indexOf(":ERR>") > 0) \{\par
  639         int a = str_data.indexOf("<ERR:");\par
  640         int b = str_data.indexOf(":ERR>");\par
  641         str_data = str_data.mid(a+5, b-a-5);\par
  642         FinishRead = true;\par
  643         progress_dialog->write_FinishRead(FinishRead, 1, str_data);\par
  644         cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  645         str_data.clear();\par
  646     \} else if (str_data.indexOf("Passwd salah   !") > 0 || str_data.indexOf("assword lock!") > 0) \{\par
  647         SerialPort->write("monita\\r\\n");\par
  648         SerialPort->write("\\r\\n");\par
  649         str_data.clear();\par
  650     \} else if (str_data.indexOf("injani$") > 0) \{\par
  651         standBy = true;\par
  652     \}\par
  653 \}\par
}
}
{\xe \v Refresh_Tree\:MainWindow}
{\xe \v MainWindow\:Refresh_Tree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Refresh_Tree ()}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Refresh_Tree. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check current module active \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   666 \{\par
  667     modelTree->clear();\par
  668     module_count = 0;\par
  669     mTree.add_firstItem(modelTree, ui->treeView, "Module");\par
  670 \par
  672     QDir path(".RTUdata/module");\par
  673     QStringList files = path.entryList(QDir::Files);\par
  674 \par
  675     QString moduleName;\par
  676     QString filePath;\par
  677     for(int i = 0; i < files.count(); i++)\{\par
  678         moduleName = work->check_statusModule(QString(files.at(i)));\par
  679 \par
  680         if(moduleName != "none")\{\par
  681             filePath.sprintf(".RTUdata/module/%s", moduleName.toUtf8().data());\par
  682 \par
  683             module_name[module_count] = work->loadModule(modelTree, this->ui->treeView, filePath, "");\par
  684             module_count++;\par
  685         \}\par
  686     \}\par
  687 \par
  688 //    mTree.add_firstItem(modelTree, ui->treeView, "Text");\par
  689     //    mTree.add_firstItem(modelTree, ui->treeView, "Configuration");\par
  690 \}\par
}
}
{\xe \v setActiveSubWindow\:MainWindow}
{\xe \v MainWindow\:setActiveSubWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setActiveSubWindow (QWidget *  {\i window}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setActiveSubWindow }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i window} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     if (!window) return;\par
   98     ui->mdiArea->setActiveSubWindow(qobject_cast<QMdiSubWindow *>(window));\par
   99 \}\par
}
}
{\xe \v update_activeWindow\:MainWindow}
{\xe \v MainWindow\:update_activeWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_activeWindow (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
update_activeWindow }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    78                                     \{\par
   79     ui->menuActive_Window->clear();\par
   80 \par
   81     QList<QMdiSubWindow *> windows = ui->mdiArea->subWindowList();\par
   82 \par
   83     for (int i = 0; i < windows.size(); i++)\{\par
   84         QWidget *sublist = qobject_cast<QWidget *>(windows.at(i)->widget());\par
   85 \par
   86         QString text;\par
   87         text = tr("%1 / %2").arg(i+1).arg(sublist->windowTitle());\par
   88 \par
   89         QAction *action  = this->ui->menuActive_Window->addAction(text);\par
   90         QObject::connect(action, SIGNAL(triggered(bool)), windowMapper, SLOT(map()));\par
   91         windowMapper->setMapping(action, windows.at(i));\par
   92     \}\par
   93 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v ActiveAddress\:MainWindow}
{\xe \v MainWindow\:ActiveAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString ActiveAddress[]}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ActiveAddress. }}\par
}
{\xe \v ActiveWidget\:MainWindow}
{\xe \v MainWindow\:ActiveWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget ActiveWidget[]}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ActiveWidget. }}\par
}
{\xe \v bottom_message\:MainWindow}
{\xe \v MainWindow\:bottom_message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* bottom_message}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bottom_message }}\par
}
{\xe \v faddModule\:MainWindow}
{\xe \v MainWindow\:faddModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b form_addModule}* faddModule{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
faddModule }}\par
}
{\xe \v FinishRead\:MainWindow}
{\xe \v MainWindow\:FinishRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FinishRead}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FinishRead. }}\par
}
{\xe \v GetNamaBoard\:MainWindow}
{\xe \v MainWindow\:GetNamaBoard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString GetNamaBoard}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetNamaBoard. }}\par
}
{\xe \v GetNoSeri\:MainWindow}
{\xe \v MainWindow\:GetNoSeri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString GetNoSeri}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetNoSeri. }}\par
}
{\xe \v LoginForm\:MainWindow}
{\xe \v MainWindow\:LoginForm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b loginForm}* LoginForm{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LoginForm. }}\par
}
{\xe \v mod\:MainWindow}
{\xe \v MainWindow\:mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b module}* mod{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mod }}\par
}
{\xe \v modelTree\:MainWindow}
{\xe \v MainWindow\:modelTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStandardItemModel* modelTree}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
modelTree }}\par
}
{\xe \v module_address_sv\:MainWindow}
{\xe \v MainWindow\:module_address_sv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString module_address_sv{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
module_address_sv }}\par
}
{\xe \v module_count\:MainWindow}
{\xe \v MainWindow\:module_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int module_count{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
module_count }}\par
}
{\xe \v module_name\:MainWindow}
{\xe \v MainWindow\:module_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString module_name[MAX_MODULE]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
module_name }}\par
}
{\xe \v module_name_sv\:MainWindow}
{\xe \v MainWindow\:module_name_sv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString module_name_sv{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
module_name_sv }}\par
}
{\xe \v mTree\:MainWindow}
{\xe \v MainWindow\:mTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mTreeview} mTree{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mTree }}\par
}
{\xe \v NoSeri\:MainWindow}
{\xe \v MainWindow\:NoSeri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString NoSeri{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NoSeri. }}\par
}
{\xe \v num_window\:MainWindow}
{\xe \v MainWindow\:num_window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int num_window{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
num_window }}\par
}
{\xe \v progress_dialog\:MainWindow}
{\xe \v MainWindow\:progress_dialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ProgressDialog}* progress_dialog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
progress_dialog }}\par
}
{\xe \v Serial\:MainWindow}
{\xe \v MainWindow\:Serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b serial}* Serial{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial. }}\par
}
{\xe \v SerialPort\:MainWindow}
{\xe \v MainWindow\:SerialPort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSerialPort* SerialPort{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SerialPort. }}\par
}
{\xe \v settings_dialog\:MainWindow}
{\xe \v MainWindow\:settings_dialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SettingsDialog}* settings_dialog{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
settings_dialog }}\par
}
{\xe \v standBy\:MainWindow}
{\xe \v MainWindow\:standBy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool standBy}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
standBy }}\par
}
{\xe \v StatusMessage\:MainWindow}
{\xe \v MainWindow\:StatusMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString StatusMessage{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
StatusMessage. }}\par
}
{\xe \v str_data\:MainWindow}
{\xe \v MainWindow\:str_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString str_data}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str_data }}\par
}
{\xe \v ui\:MainWindow}
{\xe \v MainWindow\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* ui}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ui }}\par
}
{\xe \v val_data\:MainWindow}
{\xe \v MainWindow\:val_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList val_data}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
val_data }}\par
}
{\xe \v windowMapper\:MainWindow}
{\xe \v MainWindow\:windowMapper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSignalMapper* windowMapper{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
windowMapper }}\par
}
{\xe \v work\:MainWindow}
{\xe \v MainWindow\:work}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b worker}* work{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
work }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b mainwindow.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b mainwindow.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas module\par \pard\plain 
{\tc\tcl2 \v module}
{\xe \v module}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The module class. }}\par
{
{\f2 #include <module.h>}}\par
Diagram kolaborasi untuk module:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d3a/a00694.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The module class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v module\:module}
{\xe \v module\:module}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b module} ()}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
module }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 \par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v read_module\:module}
{\xe \v module\:read_module}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_module (struct {\b t_module} *  {\i tmodule}, QString  {\i addressModule})}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read_module }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tmodule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i addressModule} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   144                                                                        \{\par
  145     QString pth = addressModule;\par
  146     cryp code; code.decryp(pth);\par
  147     QString temp;\par
  148     QSettings sett(pth, QSettings::IniFormat);\par
  149 \par
  150     tmodule->flag_active = sett.value("MODULE/ACTIVE").toInt();\par
  151     strcpy(tmodule->module_name, sett.value("MODULE/MODULE_NAME").toString().toLatin1());\par
  152     strcpy(tmodule->serial_number, sett.value("MODULE/SN").toString().toLatin1());\par
  153     strcpy(tmodule->ip_address, sett.value("MODULE/IP_ADDRESS").toString().toLatin1());\par
  154     strcpy(tmodule->server_address, sett.value("MODULE/SERVER_ADDRESS").toString().toLatin1());\par
  155     strcpy(tmodule->file_address, sett.value("MODULE/FILE_ADDRESS").toString().toLatin1());\par
  156     tmodule->flag_webclient = sett.value("MODULE/FLAG_WEBCLIENT").toInt();\par
  157     strcpy(tmodule->status_webclient, sett.value("MODULE/WEBCLIENT").toString().toLatin1());\par
  158     tmodule->interval_relay = sett.value("MODULE/INTERVAL_RELAY").toInt();\par
  159     tmodule->interval_data = sett.value("MODULE/INTERVAL_DATA").toInt();\par
  160     tmodule->flag_mode_http = sett.value("MODULE/FLAG_MODE_HTTP").toInt();\par
  161     strcpy(tmodule->mode_http, sett.value("MODULE/MODE_HTTP").toString().toLatin1());\par
  162     tmodule->port = sett.value("MODULE/PORT").toInt();\par
  163     tmodule->utc = sett.value("MODULE/UTC").toInt();\par
  164 \par
  165     tmodule->flag_dual_gsm = sett.value("MODULE/FLAG_DUAL_GSM").toInt();\par
  166 \par
  167     tmodule->jml_input_digital = sett.value("INPUT/JML_INPUT_DIGITAL").toInt();\par
  168     tmodule->jml_input_analog = sett.value("INPUT/JML_INPUT_ANALOG").toInt();\par
  169     tmodule->Input.clear(); tmodule->InputName.clear();\par
  170     int j = 0;\par
  171     for (int i = 1; i <= tmodule->jml_input_digital + tmodule->jml_input_analog; i++) \{\par
  172         if (i <= tmodule->jml_input_digital) \{\par
  173             temp.sprintf("INPUT/KANAL_%d", i);\par
  174             tmodule->Input.insert(j,sett.value(temp).toString());\par
  175             temp.sprintf("INPUT/KANAL_NAME_%d", i);\par
  176             tmodule->InputName.insert(j,sett.value(temp).toString());\par
  177             j++;\par
  178         \} else \{\par
  179 //            temp.sprintf("INPUT/KANAL_%d", i+(DATA_PERIOD-tmodule->jml_input_digital));\par
  180             temp.sprintf("INPUT/KANAL_%d", i);\par
  181             tmodule->Input.insert(j,sett.value(temp).toString());\par
  182 //            temp.sprintf("INPUT/KANAL_NAME_%d", i+(DATA_PERIOD-tmodule->jml_input_digital));\par
  183             temp.sprintf("INPUT/KANAL_NAME_%d", i);\par
  184             tmodule->InputName.insert(j,sett.value(temp).toString());\par
  185             j++;\par
  186         \}\par
  187     \}\par
  188 \par
  189     tmodule->jml_output = sett.value("OUTPUT/JML_OUTPUT").toInt();\par
  190     tmodule->Output.clear(); tmodule->OutputName.clear();\par
  191     for (int i = 1; i <= tmodule->jml_output; i++) \{\par
  192         temp.sprintf("OUTPUT/RELAY_%d", i);\par
  193         tmodule->Output.insert(i-1,sett.value(temp).toString());\par
  194         temp.sprintf("OUTPUT/RELAY_NAME_%d", i);\par
  195         tmodule->OutputName.insert(i-1,sett.value(temp).toString());\par
  196     \}\par
  197 \par
  198     tmodule->flag_gsm_1 = sett.value("GSM_1/FLAG_GSM_1").toInt();\par
  199     strcpy(tmodule->name_gsm_1, sett.value("GSM_1/GSM_NAME_1").toString().toLatin1());\par
  200     strcpy(tmodule->device_name_gsm_1, sett.value("GSM_1/DEVICE_NAME_1").toString().toLatin1());\par
  201     tmodule->flag_status_active_gsm_1 = sett.value("GSM_1/FLAG_STATUS_GSM_1").toInt();\par
  202     strcpy(tmodule->status_gsm_1, sett.value("GSM_1/STATUS_GSM_1").toString().toLatin1());\par
  203     tmodule->flag_com_gsm_1 = sett.value("GSM_1/FLAG_COM_GSM_1").toInt();\par
  204     strcpy(tmodule->com_gsm_1, sett.value("GSM_1/COM_GSM_1").toString().toLatin1());\par
  205     strcpy(tmodule->number_gsm_1, sett.value("GSM_1/NUMBER_GSM_1").toString().toLatin1());\par
  206     strcpy(tmodule->apn_gsm_1, sett.value("GSM_1/APN_GSM_1").toString().toLatin1());\par
  207     if (QString(tmodule->apn_gsm_1) == "") strcpy(tmodule->apn_gsm_1,"-");\par
  208     strcpy(tmodule->user_gsm_1, sett.value("GSM_1/USER_GSM_1").toString().toLatin1());\par
  209     if (QString(tmodule->user_gsm_1) == "") strcpy(tmodule->user_gsm_1,"-");\par
  210     strcpy(tmodule->passwd_gsm_1, sett.value("GSM_1/PASSWD_GSM_1").toString().toLatin1());\par
  211     if (QString(tmodule->passwd_gsm_1) == "") strcpy(tmodule->passwd_gsm_1,"-");\par
  212 \par
  213     tmodule->flag_gsm_2 = sett.value("GSM_2/FLAG_GSM_2").toInt();\par
  214     strcpy(tmodule->name_gsm_2, sett.value("GSM_2/GSM_NAME_2").toString().toLatin1());\par
  215     strcpy(tmodule->device_name_gsm_2, sett.value("GSM_2/DEVICE_NAME_2").toString().toLatin1());\par
  216     tmodule->flag_status_active_gsm_2 = sett.value("GSM_2/FLAG_STATUS_GSM_2").toInt();\par
  217     strcpy(tmodule->status_gsm_2, sett.value("GSM_2/STATUS_GSM_2").toString().toLatin1());\par
  218     tmodule->flag_com_gsm_2 = sett.value("GSM_2/FLAG_COM_GSM_2").toInt();\par
  219     strcpy(tmodule->com_gsm_2, sett.value("GSM_2/COM_GSM_2").toString().toLatin1());\par
  220     strcpy(tmodule->number_gsm_2, sett.value("GSM_2/NUMBER_GSM_2").toString().toLatin1());\par
  221     strcpy(tmodule->apn_gsm_2, sett.value("GSM_2/APN_GSM_2").toString().toLatin1());\par
  222     if (QString(tmodule->apn_gsm_2) == "") strcpy(tmodule->apn_gsm_2,"-");\par
  223     strcpy(tmodule->user_gsm_2, sett.value("GSM_2/USER_GSM_2").toString().toLatin1());\par
  224     if (QString(tmodule->user_gsm_2) == "") strcpy(tmodule->user_gsm_2,"-");\par
  225     strcpy(tmodule->passwd_gsm_2, sett.value("GSM_2/PASSWD_GSM_2").toString().toLatin1());\par
  226     if (QString(tmodule->passwd_gsm_2) == "") strcpy(tmodule->passwd_gsm_2,"-");\par
  227 \par
  228     tmodule->jml_sumber = sett.value("SOURCES/JML_SUMBER").toInt();\par
  229     tmodule->sumber.clear();\par
  230     for (int i = 1; i <= tmodule->jml_sumber; i++) \{\par
  231         temp.sprintf("SOURCES/SUMBER_%d", i);\par
  232         tmodule->sumber.insert(i-1,sett.value(temp).toString());\par
  233     \}\par
  234 \par
  235     tmodule->jml_alarm = sett.value("ALARM/JML_ALARM").toInt();\par
  236     tmodule->alarm.clear();\par
  237     for (int i = 1; i <= tmodule->jml_alarm; i++) \{\par
  238         temp.sprintf("ALARM/ALARM_%d", i);\par
  239         tmodule->alarm.insert(i-1,sett.value(temp).toString());\par
  240     \}\par
  241 \par
  242     tmodule->jml_data = sett.value("DATA/JML_DATA").toInt();\par
  243     tmodule->data.clear();\par
  244     for (int i = 1; i <= tmodule->jml_data; i++) \{\par
  245         temp.sprintf("DATA/DATA_%d", i);\par
  246         tmodule->data.insert(i-1,sett.value(temp).toString());\par
  247     \}\par
  248 \par
  249     code.encryp(pth);\par
  250 \}\par
}
}
{\xe \v save_as_module\:module}
{\xe \v module\:save_as_module}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void save_as_module (struct {\b t_module} *  {\i tmodule}, QString  {\i address})}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
save_as_module }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tmodule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   252                                                                     \{\par
  253     QStringList temp1; QString temp2; int index;\par
  254     QString pth = address;\par
  255     QSettings sett(pth, QSettings::IniFormat);\par
  256 \par
  257     sett.beginGroup( "MODULE" );\par
  258     sett.setValue("ACTIVE", tmodule->flag_active);\par
  259     sett.setValue("MODULE_NAME", tmodule->module_name);\par
  260     sett.setValue("SN", tmodule->serial_number);\par
  261     sett.setValue("FLAG_DUAL_GSM", tmodule->flag_dual_gsm);\par
  262     sett.setValue("IP_ADDRESS", tmodule->ip_address);\par
  263     sett.setValue("SERVER_ADDRESS", tmodule->server_address);\par
  264     sett.setValue("FILE_ADDRESS", tmodule->file_address);\par
  265     sett.setValue("FLAG_WEBCLIENT", tmodule->flag_webclient);\par
  266     sett.setValue("WEBCLIENT", tmodule->status_webclient);\par
  267     sett.endGroup();\par
  268 \par
  269     sett.beginGroup( "INPUT" );\par
  270     for (int i = 0; i < tmodule->Input.length(); i++) \{\par
  271         temp2 = tmodule->Input.at(i);\par
  272         temp1 = temp2.split(';');\par
  273         temp2 = "KANAL_" + temp1.at(1);\par
  274         sett.setValue(temp2, tmodule->Input.at(i));\par
  275     \}\par
  276     for (int i = 0; i < tmodule->InputName.length(); i++) \{\par
  277         temp2 = tmodule->Input.at(i);\par
  278         temp1 = temp2.split(';');\par
  279         temp2 = "KANAL_NAME_" + temp1.at(1);\par
  280         sett.setValue(temp2, tmodule->InputName.at(i));\par
  281     \}\par
  282     sett.setValue("JML_INPUT_DIGITAL", tmodule->jml_input_digital);\par
  283     sett.setValue("JML_INPUT_ANALOG", tmodule->jml_input_analog);\par
  284     sett.endGroup();\par
  285 \par
  286     sett.beginGroup( "OUTPUT" );\par
  287     for (int i = 0; i < tmodule->Output.length(); i++) \{\par
  288         temp2 = tmodule->Output.at(i);\par
  289         temp1 = temp2.split(';');\par
  290         temp2 = "RELAY_" + temp1.at(1);\par
  291         sett.setValue(temp2, tmodule->Output.at(i));\par
  292         temp2 = "RELAY_NAME_" + temp1.at(1);\par
  293         sett.setValue(temp2, tmodule->OutputName.at(i));\par
  294     \}\par
  295     sett.setValue("JML_OUTPUT", tmodule->jml_output);\par
  296     sett.endGroup();\par
  297 \par
  298     sett.beginGroup( "GSM_1" );\par
  299     sett.setValue("FLAG_GSM_1", tmodule->flag_gsm_1);\par
  300     sett.setValue("GSM_NAME_1", tmodule->name_gsm_1);\par
  301     sett.setValue("DEVICE_NAME_1", tmodule->device_name_gsm_1);\par
  302     sett.setValue("FLAG_STATUS_GSM_1", tmodule->flag_status_active_gsm_1);\par
  303     sett.setValue("STATUS_GSM_1", tmodule->status_gsm_1);\par
  304     sett.setValue("FLAG_COM_GSM_1", tmodule->flag_com_gsm_1);\par
  305     sett.setValue("COM_GSM_1", tmodule->com_gsm_1);\par
  306     sett.setValue("NUMBER_GSM_1", tmodule->number_gsm_1);\par
  307     sett.setValue("APN_GSM_1", tmodule->apn_gsm_1);\par
  308     sett.setValue("USER_GSM_1", tmodule->user_gsm_1);\par
  309     sett.setValue("PASSWD_GSM_1", tmodule->passwd_gsm_1);\par
  310     sett.endGroup();\par
  311 \par
  312     sett.beginGroup( "GSM_2" );\par
  313     if (tmodule->flag_dual_gsm == 1) \{\par
  314         sett.setValue("FLAG_GSM_2", tmodule->flag_gsm_2);\par
  315         sett.setValue("GSM_NAME_2", tmodule->name_gsm_2);\par
  316         sett.setValue("DEVICE_NAME_2", tmodule->device_name_gsm_2);\par
  317         sett.setValue("FLAG_STATUS_GSM_2", tmodule->flag_status_active_gsm_2);\par
  318         sett.setValue("STATUS_GSM_2", tmodule->status_gsm_2);\par
  319         sett.setValue("FLAG_COM_GSM_2", tmodule->flag_com_gsm_2);\par
  320         sett.setValue("COM_GSM_2", tmodule->com_gsm_2);\par
  321         sett.setValue("NUMBER_GSM_2", tmodule->number_gsm_2);\par
  322         sett.setValue("APN_GSM_2", tmodule->apn_gsm_2);\par
  323         sett.setValue("USER_GSM_2", tmodule->user_gsm_2);\par
  324         sett.setValue("PASSWD_GSM_2", tmodule->passwd_gsm_2);\par
  325     \} else \{\par
  326         sett.setValue("FLAG_GSM_2", "");\par
  327         sett.setValue("GSM_NAME_2", "");\par
  328         sett.setValue("DEVICE_NAME_2", "");\par
  329         sett.setValue("FLAG_STATUS_GSM_2", "");\par
  330         sett.setValue("STATUS_GSM_2", "");\par
  331         sett.setValue("FLAG_COM_GSM_2", "");\par
  332         sett.setValue("COM_GSM_2", "");\par
  333         sett.setValue("NUMBER_GSM_2", "");\par
  334         sett.setValue("APN_GSM_2", "");\par
  335         sett.setValue("USER_GSM_2", "");\par
  336         sett.setValue("PASSWD_GSM_2", "");\par
  337     \}\par
  338     sett.endGroup();\par
  339 \par
  340     sett.beginGroup( "SOURCES" );\par
  341     index = tmodule->sumber.length();\par
  342     for (int i = 0; i < index; i++) \{\par
  343         temp2.sprintf("SUMBER_%d", i+1);\par
  344         sett.setValue(temp2, tmodule->sumber.at(i));\par
  345     \}\par
  346     sett.setValue("JML_SUMBER", tmodule->jml_sumber);\par
  347     sett.endGroup();\par
  348 \par
  349     sett.beginGroup( "ALARM" );\par
  350     index = tmodule->alarm.length();\par
  351     for (int i = 0; i < index; i++) \{\par
  352         temp2.sprintf("ALARM_%d", i+1);\par
  353         sett.setValue(temp2, tmodule->alarm.at(i));\par
  354     \}\par
  355     sett.setValue("JML_ALARM", tmodule->jml_alarm);\par
  356     sett.endGroup();\par
  357 \par
  358     sett.beginGroup( "DATA" );\par
  359     index = tmodule->data.length();\par
  360     for (int i = 0; i < index; i++) \{\par
  361         temp2.sprintf("DATA_%d", i+1);\par
  362         sett.setValue(temp2, tmodule->data.at(i));\par
  363     \}\par
  364     sett.setValue("JML_DATA", tmodule->jml_data);\par
  365     sett.endGroup();\par
  366 \}\par
}
}
{\xe \v write_module\:module}
{\xe \v module\:write_module}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_module (struct {\b t_module} *  {\i tmodule})}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_module }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tmodule} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8                                                  \{\par
    9 \par
   10     QStringList temp1; QString temp2; int index;\par
   11     QString pth;\par
   12     pth.sprintf(".RTUdata/module/m_%s.dbe",tmodule->module_name);\par
   13     QSettings sett(pth, QSettings::IniFormat);\par
   14 \par
   15     sett.beginGroup( "MODULE" );\par
   16     sett.setValue("ACTIVE", tmodule->flag_active);\par
   17     sett.setValue("MODULE_NAME", tmodule->module_name);\par
   18     sett.setValue("SN", tmodule->serial_number);\par
   19     sett.setValue("FLAG_DUAL_GSM", tmodule->flag_dual_gsm);\par
   20     sett.setValue("IP_ADDRESS", tmodule->ip_address);\par
   21     sett.setValue("SERVER_ADDRESS", tmodule->server_address);\par
   22     sett.setValue("FILE_ADDRESS", tmodule->file_address);\par
   23     sett.setValue("FLAG_WEBCLIENT", tmodule->flag_webclient);\par
   24     if (tmodule->flag_webclient == 0) \{\par
   25         strcpy(tmodule->status_webclient, "NOT ACTIVE");\par
   26         sett.setValue("WEBCLIENT", tmodule->status_webclient);\par
   27     \} else \{\par
   28         strcpy(tmodule->status_webclient, "ACTIVE");\par
   29         sett.setValue("WEBCLIENT", tmodule->status_webclient);\par
   30     \}\par
   31     sett.setValue("INTERVAL_RELAY", tmodule->interval_relay);\par
   32     sett.setValue("INTERVAL_DATA", tmodule->interval_data);\par
   33     sett.setValue("FLAG_MODE_HTTP", tmodule->mode_http);\par
   34     if (tmodule->flag_mode_http == 0) \{\par
   35         strcpy(tmodule->mode_http, "GET");\par
   36         sett.setValue("MODE_HTTP", tmodule->mode_http);\par
   37     \} else if (tmodule->flag_mode_http == 1) \{\par
   38         strcpy(tmodule->mode_http, "POST");\par
   39         sett.setValue("MODE_HTTP", tmodule->mode_http);\par
   40     \}\par
   41     sett.setValue("PORT", tmodule->port);\par
   42     sett.setValue("UTC", tmodule->utc);\par
   43     sett.endGroup();\par
   44 \par
   45     sett.beginGroup( "INPUT" );\par
   46     for (int i = 0; i < tmodule->Input.length(); i++) \{\par
   47         temp2 = tmodule->Input.at(i);\par
   48         temp1 = temp2.split(';');\par
   49         temp2 = "KANAL_" + temp1.at(1);\par
   50         sett.setValue(temp2, tmodule->Input.at(i));\par
   51     \}\par
   52     for (int i = 0; i < tmodule->InputName.length(); i++) \{\par
   53         temp2 = tmodule->Input.at(i);\par
   54         temp1 = temp2.split(';');\par
   55         temp2 = "KANAL_NAME_" + temp1.at(1);\par
   56         sett.setValue(temp2, tmodule->InputName.at(i));\par
   57     \}\par
   58     sett.setValue("JML_INPUT_DIGITAL", tmodule->jml_input_digital);\par
   59     sett.setValue("JML_INPUT_ANALOG", tmodule->jml_input_analog);\par
   60     sett.endGroup();\par
   61 \par
   62     sett.beginGroup( "OUTPUT" );\par
   63     for (int i = 0; i < tmodule->Output.length(); i++) \{\par
   64         temp2 = tmodule->Output.at(i);\par
   65         temp1 = temp2.split(';');\par
   66         temp2 = "RELAY_" + temp1.at(1);\par
   67         sett.setValue(temp2, tmodule->Output.at(i));\par
   68         temp2 = "RELAY_NAME_" + temp1.at(1);\par
   69         sett.setValue(temp2, tmodule->OutputName.at(i));\par
   70     \}\par
   71     sett.setValue("JML_OUTPUT", tmodule->jml_output);\par
   72     sett.endGroup();\par
   73 \par
   74     sett.beginGroup( "GSM_1" );\par
   75     sett.setValue("FLAG_GSM_1", tmodule->flag_gsm_1);\par
   76     sett.setValue("GSM_NAME_1", tmodule->name_gsm_1);\par
   77     sett.setValue("DEVICE_NAME_1", tmodule->device_name_gsm_1);\par
   78     sett.setValue("FLAG_STATUS_GSM_1", tmodule->flag_status_active_gsm_1);\par
   79     sett.setValue("STATUS_GSM_1", tmodule->status_gsm_1);\par
   80     sett.setValue("FLAG_COM_GSM_1", tmodule->flag_com_gsm_1);\par
   81     sett.setValue("COM_GSM_1", tmodule->com_gsm_1);\par
   82     sett.setValue("NUMBER_GSM_1", tmodule->number_gsm_1);\par
   83     sett.setValue("APN_GSM_1", tmodule->apn_gsm_1);\par
   84     sett.setValue("USER_GSM_1", tmodule->user_gsm_1);\par
   85     sett.setValue("PASSWD_GSM_1", tmodule->passwd_gsm_1);\par
   86     sett.endGroup();\par
   87 \par
   88     sett.beginGroup( "GSM_2" );\par
   89     if (tmodule->flag_dual_gsm == 1) \{\par
   90         sett.setValue("FLAG_GSM_2", tmodule->flag_gsm_2);\par
   91         sett.setValue("GSM_NAME_2", tmodule->name_gsm_2);\par
   92         sett.setValue("DEVICE_NAME_2", tmodule->device_name_gsm_2);\par
   93         sett.setValue("FLAG_STATUS_GSM_2", tmodule->flag_status_active_gsm_2);\par
   94         sett.setValue("STATUS_GSM_2", tmodule->status_gsm_2);\par
   95         sett.setValue("FLAG_COM_GSM_2", tmodule->flag_com_gsm_2);\par
   96         sett.setValue("COM_GSM_2", tmodule->com_gsm_2);\par
   97         sett.setValue("NUMBER_GSM_2", tmodule->number_gsm_2);\par
   98         sett.setValue("APN_GSM_2", tmodule->apn_gsm_2);\par
   99         sett.setValue("USER_GSM_2", tmodule->user_gsm_2);\par
  100         sett.setValue("PASSWD_GSM_2", tmodule->passwd_gsm_2);\par
  101     \} else \{\par
  102         sett.setValue("FLAG_GSM_2", "");\par
  103         sett.setValue("GSM_NAME_2", "");\par
  104         sett.setValue("DEVICE_NAME_2", "");\par
  105         sett.setValue("FLAG_STATUS_GSM_2", "");\par
  106         sett.setValue("STATUS_GSM_2", "");\par
  107         sett.setValue("FLAG_COM_GSM_2", "");\par
  108         sett.setValue("COM_GSM_2", "");\par
  109         sett.setValue("NUMBER_GSM_2", "");\par
  110         sett.setValue("APN_GSM_2", "");\par
  111         sett.setValue("USER_GSM_2", "");\par
  112         sett.setValue("PASSWD_GSM_2", "");\par
  113     \}\par
  114     sett.endGroup();\par
  115 \par
  116     sett.beginGroup( "SOURCES" );\par
  117     index = tmodule->sumber.length();\par
  118     for (int i = 0; i < index; i++) \{\par
  119         temp2.sprintf("SUMBER_%d", i+1);\par
  120         sett.setValue(temp2, tmodule->sumber.at(i));\par
  121     \}\par
  122     sett.setValue("JML_SUMBER", tmodule->jml_sumber);\par
  123     sett.endGroup();\par
  124 \par
  125     sett.beginGroup( "ALARM" );\par
  126     index = tmodule->alarm.length();\par
  127     for (int i = 0; i < index; i++) \{\par
  128         temp2.sprintf("ALARM_%d", i+1);\par
  129         sett.setValue(temp2, tmodule->alarm.at(i));\par
  130     \}\par
  131     sett.setValue("JML_ALARM", tmodule->jml_alarm);\par
  132     sett.endGroup();\par
  133 \par
  134     sett.beginGroup( "DATA" );\par
  135     index = tmodule->data.length();\par
  136     for (int i = 0; i < index; i++) \{\par
  137         temp2.sprintf("DATA_%d", i+1);\par
  138         sett.setValue(temp2, tmodule->data.at(i));\par
  139     \}\par
  140     sett.setValue("JML_DATA", tmodule->jml_data);\par
  141     sett.endGroup();\par
  142 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b module.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b module.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas mTreeview\par \pard\plain 
{\tc\tcl2 \v mTreeview}
{\xe \v mTreeview}
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b mTreeview} class. }}\par
{
{\f2 #include <mtreeview.h>}}\par
Diagram kolaborasi untuk mTreeview:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d9e/a00686.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b mTreeview} class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v mTreeview\:mTreeview}
{\xe \v mTreeview\:mTreeview}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mTreeview} ()}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b mTreeview} }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 \par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v add_firstItem\:mTreeview}
{\xe \v mTreeview\:add_firstItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void add_firstItem (QStandardItemModel *  {\i tree}, QTreeView *  {\i treeView}, QString  {\i name})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
add_firstItem }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tree} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i treeView} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8                                                                                         \{\par
    9     QStandardItem *item;\par
   10 \par
   11     item = new QStandardItem(name);\par
   12     tree->appendRow(item);\par
   13 \par
   14     treeView->setModel(tree);\par
   15 \}\par
}
}
{\xe \v appendItem\:mTreeview}
{\xe \v mTreeview\:appendItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void appendItem (QStandardItemModel *  {\i tree}, QTreeView *  {\i treeView}, QString  {\i name})}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
appendItem }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tree} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i treeView} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    17                                                                                      \{\par
   18     QStandardItem *sd;\par
   19     QStandardItem *item;\par
   20 \par
   21     item = new QStandardItem(name);\par
   22 \par
   23     sd = tree->itemFromIndex(treeView->indexAt(QPoint(0,0)));\par
   24     sd->appendRow(item);\par
   25 \par
   26     treeView->setModel(tree);\par
   27 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/interface_manipulator/{\b mtreeview.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/interface_manipulator/{\b mtreeview.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas ProgressDialog\par \pard\plain 
{\tc\tcl2 \v ProgressDialog}
{\xe \v ProgressDialog}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b ProgressDialog} class. }}\par
{
{\f2 #include <progressdialog.h>}}\par
Diagram hierarki kelas untuk ProgressDialog:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dab/a00735.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagram kolaborasi untuk ProgressDialog:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/dc0/a00734.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabel Data\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b ProgressDialog} class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v ProgressDialog\:ProgressDialog}
{\xe \v ProgressDialog\:ProgressDialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ProgressDialog} (QWidget *  {\i parent} = {\f2 0}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ProgressDialog}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4                                               :\par
    5     QDialog(parent),\par
    6     ui(new Ui::ProgressDialog)\par
    7 \{\par
    8     ui->setupUi(this);\par
    9     cnt_try = 0;\par
   10 \}\par
}
}
{\xe \v ~ProgressDialog\:ProgressDialog}
{\xe \v ProgressDialog\:~ProgressDialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
~{\b ProgressDialog} ()}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    13 \{\par
   14     cancel = true;\par
   15     delete ui;\par
   16 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v delay\:ProgressDialog}
{\xe \v ProgressDialog\:delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void delay (int  {\i ms})}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
delay }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ms} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   836 \{\par
  837     QTime dieTime = QTime::currentTime().addMSecs(ms);\par
  838     while (QTime::currentTime() < dieTime) \{\par
  839         QCoreApplication::processEvents(QEventLoop::AllEvents, 100);\par
  840     \}\par
  841 \}\par
}
}
{\xe \v Get_Data\:ProgressDialog}
{\xe \v ProgressDialog\:Get_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Get_Data (struct {\b t_module} *  {\i tModule}, QStringList  {\i data})}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get_Data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   472 \{\par
  473     tModule->data.clear();\par
  474     tModule->jml_data = 0;\par
  475     for (int i = 0; i < data.length(); i++) \{\par
  476         if (data.at(i) != "") \{\par
  477             tModule->data.insert(tModule->jml_data, data.at(i));\par
  478             tModule->jml_data++;\par
  479         \}\par
  480     \}\par
  481 \}\par
}
}
{\xe \v Get_ENV\:ProgressDialog}
{\xe \v ProgressDialog\:Get_ENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Get_ENV (struct {\b t_module} *  {\i tModule}, QStringList  {\i data})}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get_ENV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   189 \{\par
  190     temp = data.at(0);\par
  191     strcpy(tModule->module_name, temp.toUtf8().data());\par
  192     temp = data.at(1);\par
  193     strcpy(tModule->serial_number, temp.toUtf8().data());\par
  194     temp = data.at(2);\par
  195     strcpy(tModule->ip_address, temp.toUtf8().data());\par
  196     temp = data.at(3);\par
  197     strcpy(tModule->server_address, temp.toUtf8().data());\par
  198     temp = data.at(4);\par
  199     strcpy(tModule->file_address, temp.toUtf8().data());\par
  200     temp = data.at(5);\par
  201     tModule->flag_webclient = temp.toInt();\par
  202     if (temp == "1") \{\par
  203         temp = "ACTIVE";\par
  204         strcpy(tModule->status_webclient, temp.toUtf8().data());\par
  205     \} else if (temp == "0") \{\par
  206         temp = "NOT ACTIVE";\par
  207         strcpy(tModule->status_webclient, temp.toUtf8().data());\par
  208     \}\par
  209     temp = data.at(7);\par
  210     tModule->interval_relay = temp.toInt()+3;\par
  211     temp = data.at(8);\par
  212     tModule->interval_data = temp.toInt()+3;\par
  213     temp = data.at(9);\par
  214     tModule->flag_mode_http = temp.toInt();\par
  215     if (temp == "1") \{\par
  216         temp = "POST";\par
  217         strcpy(tModule->mode_http, temp.toUtf8().data());\par
  218     \} else if (temp == "0") \{\par
  219         temp = "GET";\par
  220         strcpy(tModule->mode_http, temp.toUtf8().data());\par
  221     \}\par
  222     temp = data.at(10);\par
  223     tModule->port = temp.toInt();\par
  224     temp = data.at(11);\par
  225     tModule->utc = temp.toInt();\par
  226 \}\par
}
}
{\xe \v Get_Input\:ProgressDialog}
{\xe \v ProgressDialog\:Get_Input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Get_Input (struct {\b t_module} *  {\i tModule}, QStringList  {\i data})}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get_Input. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   405 \{\par
  406     tModule->Input.clear();\par
  407     int index = 0;\par
  408     for (int i = 0; i < data.length(); i++) \{\par
  409         temp = data.at(i);\par
  410         if (temp.mid(0,1) == "D" || temp.mid(0,1) == "A") \{\par
  411             tModule->Input.insert(index, data.at(i));\par
  412             index++;\par
  413         \}\par
  414     \}\par
  415     tModule->jml_input_digital = 0;\par
  416     tModule->jml_input_analog = 0;\par
  417     for (int i = 0; i < tModule->Input.length(); i++) \{\par
  418         temp = tModule->Input.at(i);\par
  419         if (temp.mid(0,1) == "D") \{\par
  420             tModule->jml_input_digital++;\par
  421         \} else if (temp.mid(0,1) == "A") \{\par
  422             tModule->jml_input_analog++;\par
  423         \}\par
  424     \}\par
  425     QStringList list; QStringList list2;\par
  426     tModule->InputName.clear();\par
  427     for (int i = 0; i < tModule->Input.length(); i++) \{\par
  428         temp = tModule->Input.at(i);\par
  429         list = temp.split(';');\par
  430         for (int j = 0; j < tModule->data.length(); j++) \{\par
  431             temp = tModule->data.at(j);\par
  432             list2 = temp.split(';');\par
  433             if (list.at(1) == list2.at(0)) \{\par
  434                 tModule->InputName.insert(i, list2.at(2));\par
  435                 break;\par
  436             \}\par
  437         \}\par
  438     \}\par
  439 \}\par
}
}
{\xe \v Get_Output\:ProgressDialog}
{\xe \v ProgressDialog\:Get_Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Get_Output (struct {\b t_module} *  {\i tModule}, QStringList  {\i data})}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get_Output. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   442 \{\par
  443     tModule->Output.clear();\par
  444     int index = 0;\par
  445     for (int i = 0; i < data.length(); i++) \{\par
  446         temp = data.at(i);\par
  447         if (temp.mid(0,1) == "R") \{\par
  448             tModule->Output.insert(index, data.at(i));\par
  449             index++;\par
  450         \}\par
  451     \}\par
  452     tModule->jml_output = tModule->Output.length();\par
  453     tModule->OutputName.clear();\par
  454     for (int i = 0; i < tModule->Output.length(); i++) \{\par
  455         tModule->OutputName.insert(i, "");\par
  456     \}\par
  457 \}\par
}
}
{\xe \v Get_SIM\:ProgressDialog}
{\xe \v ProgressDialog\:Get_SIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Get_SIM (struct {\b t_module} *  {\i tModule}, QStringList  {\i data})}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get_SIM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MODULE\par
GSM_1\par
GSM_2 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   229 \{\par
  230     str = data.at(0);\par
  231     list1 = str.split(";");\par
  232     str = data.at(1);\par
  233     list2 = str.split(";");\par
  234 \par
  236     tModule->flag_active = 1;\par
  237     if (list2.at(3) != "-") \{tModule->flag_dual_gsm = 1;\}\par
  238     else \{tModule->flag_dual_gsm = 0;\}\par
  239 \par
  241     temp = list1.at(1);\par
  242     if (temp == "-") \{strcpy(tModule->device_name_gsm_1, "");\}\par
  243     else \{strcpy(tModule->device_name_gsm_1, temp.toUtf8().data());\}\par
  244 \par
  245     temp = list1.at(2);\par
  246     if (temp == "-") \{\par
  247         strcpy(tModule->name_gsm_1, "");\par
  248         tModule->flag_gsm_1 = 0;\par
  249     \} else \{\par
  250         strcpy(tModule->name_gsm_1, temp.toUtf8().data());\par
  251         if (temp == "TELKOMSEL") \{tModule->flag_gsm_1 = 0;\}\par
  252         else if (temp == "INDOSAT") \{tModule->flag_gsm_1 = 1;\}\par
  253         else if (temp == "XL") \{tModule->flag_gsm_1 = 2;\par
  254         \} else if (temp == "3") \{\par
  255             tModule->flag_gsm_1 = 3;\par
  256         \}\par
  257     \}\par
  258     temp = list1.at(3);\par
  259     if (temp == "-") \{\par
  260         strcpy(tModule->number_gsm_1, "");\par
  261     \} else \{\par
  262         strcpy(tModule->number_gsm_1, temp.toUtf8().data());\par
  263     \}\par
  264     temp = list1.at(4);\par
  265     if (temp == "0") \{\par
  266         tModule->flag_status_active_gsm_1 = temp.toInt();\par
  267         temp = "NOT ACTIVE";\par
  268         strcpy(tModule->status_gsm_1, temp.toUtf8().data());\par
  269     \} else if (temp == "1") \{\par
  270         tModule->flag_status_active_gsm_1 = temp.toInt();\par
  271         temp = "ACTIVE";\par
  272         strcpy(tModule->status_gsm_1, temp.toUtf8().data());\par
  273     \}\par
  274     temp = list1.at(8);\par
  275     if (temp == "GSM") \{\par
  276 //        temp = "SMS";\par
  277         strcpy(tModule->com_gsm_1, temp.toUtf8().data());\par
  278         tModule->flag_com_gsm_1 = 0;\par
  279     \} else if (temp == "GPRS") \{\par
  280         strcpy(tModule->com_gsm_1, temp.toUtf8().data());\par
  281         tModule->flag_com_gsm_1 = 1;\par
  282     \} else \{\par
  283         strcpy(tModule->com_gsm_1, "");\par
  284         tModule->flag_com_gsm_1 = 0;\par
  285     \}\par
  286     if (tModule->flag_com_gsm_1 == 0) \{\par
  287         temp = "";\par
  288         strcpy(tModule->apn_gsm_1, temp.toUtf8().data());\par
  289         strcpy(tModule->user_gsm_1, temp.toUtf8().data());\par
  290         strcpy(tModule->passwd_gsm_1, temp.toUtf8().data());\par
  291     \} else if (tModule->flag_com_gsm_1 == 1) \{\par
  292         temp = list1.at(5);\par
  293         if (temp == "-") \{\par
  294             strcpy(tModule->apn_gsm_1, "");\par
  295         \} else \{\par
  296             strcpy(tModule->apn_gsm_1, temp.toUtf8().data());\par
  297         \}\par
  298         temp = list1.at(6);\par
  299         if (temp == "-") \{\par
  300             strcpy(tModule->user_gsm_1, "");\par
  301         \} else \{\par
  302             strcpy(tModule->user_gsm_1, temp.toUtf8().data());\par
  303         \}\par
  304         temp = list1.at(7);\par
  305         if (temp == "-") \{\par
  306             strcpy(tModule->passwd_gsm_1, "");\par
  307         \} else \{\par
  308             strcpy(tModule->passwd_gsm_1, temp.toUtf8().data());\par
  309         \}\par
  310     \}\par
  311 \par
  313     if (tModule->flag_dual_gsm == 0) \{\par
  314         strcpy(tModule->device_name_gsm_2, "");\par
  315         strcpy(tModule->name_gsm_2, "");\par
  316         tModule->flag_gsm_2 = 0;\par
  317         strcpy(tModule->number_gsm_2, "");\par
  318         tModule->flag_status_active_gsm_2 = 0;\par
  319         strcpy(tModule->status_gsm_2, "");\par
  320         strcpy(tModule->com_gsm_2, "");\par
  321         tModule->flag_com_gsm_2 = 0;\par
  322         strcpy(tModule->apn_gsm_2, "");\par
  323         strcpy(tModule->user_gsm_2, "");\par
  324         strcpy(tModule->passwd_gsm_2, "");\par
  325     \} else if (tModule->flag_dual_gsm == 1) \{\par
  326         temp = list2.at(1);\par
  327         if (temp == "-") \{\par
  328             strcpy(tModule->device_name_gsm_2, "");\par
  329         \} else \{\par
  330             strcpy(tModule->device_name_gsm_2, temp.toUtf8().data());\par
  331         \}\par
  332         temp = list2.at(2);\par
  333         if (temp == "-") \{\par
  334             strcpy(tModule->name_gsm_2, "");\par
  335             tModule->flag_gsm_2 = 0;\par
  336         \} else \{\par
  337             strcpy(tModule->name_gsm_2, temp.toUtf8().data());\par
  338             if (temp == "TELKOMSEL") \{\par
  339                 tModule->flag_gsm_2 = 0;\par
  340             \} else if (temp == "INDOSAT") \{\par
  341                 tModule->flag_gsm_2 = 1;\par
  342             \} else if (temp == "XL") \{\par
  343                 tModule->flag_gsm_2 = 2;\par
  344             \} else if (temp == "3") \{\par
  345                 tModule->flag_gsm_2 = 3;\par
  346             \}\par
  347         \}\par
  348         temp = list2.at(3);\par
  349         if (temp == "-") \{\par
  350             strcpy(tModule->number_gsm_2, "");\par
  351         \} else \{\par
  352             strcpy(tModule->number_gsm_2, temp.toUtf8().data());\par
  353         \}\par
  354         temp = list2.at(4);\par
  355         if (temp == "0") \{\par
  356             tModule->flag_status_active_gsm_2 = temp.toInt();\par
  357             temp = "NOT ACTIVE";\par
  358             strcpy(tModule->status_gsm_2, temp.toUtf8().data());\par
  359         \} else if (temp == "1") \{\par
  360             tModule->flag_status_active_gsm_2 = temp.toInt();\par
  361             temp = "ACTIVE";\par
  362             strcpy(tModule->status_gsm_2, temp.toUtf8().data());\par
  363         \}\par
  364         temp = list2.at(8);\par
  365         if (temp == "GSM") \{\par
  366 //            temp = "SMS";\par
  367             strcpy(tModule->com_gsm_2, temp.toUtf8().data());\par
  368             tModule->flag_com_gsm_2 = 0;\par
  369         \} else if (temp == "GPRS") \{\par
  370             strcpy(tModule->com_gsm_2, temp.toUtf8().data());\par
  371             tModule->flag_com_gsm_2 = 1;\par
  372         \} else \{\par
  373             strcpy(tModule->com_gsm_2, "");\par
  374             tModule->flag_com_gsm_2 = 0;\par
  375         \}\par
  376         if (tModule->flag_com_gsm_2 == 0) \{\par
  377             temp = "";\par
  378             strcpy(tModule->apn_gsm_2, temp.toUtf8().data());\par
  379             strcpy(tModule->user_gsm_2, temp.toUtf8().data());\par
  380             strcpy(tModule->passwd_gsm_2, temp.toUtf8().data());\par
  381         \} else if (tModule->flag_com_gsm_2 == 1) \{\par
  382             temp = list2.at(5);\par
  383             if (temp == "-") \{\par
  384                 strcpy(tModule->apn_gsm_2, "");\par
  385             \} else \{\par
  386                 strcpy(tModule->apn_gsm_2, temp.toUtf8().data());\par
  387             \}\par
  388             temp = list2.at(6);\par
  389             if (temp == "-") \{\par
  390                 strcpy(tModule->user_gsm_2, "");\par
  391             \} else \{\par
  392                 strcpy(tModule->user_gsm_2, temp.toUtf8().data());\par
  393             \}\par
  394             temp = list2.at(7);\par
  395             if (temp == "-") \{\par
  396                 strcpy(tModule->passwd_gsm_2, "");\par
  397             \} else \{\par
  398                 strcpy(tModule->passwd_gsm_2, temp.toUtf8().data());\par
  399             \}\par
  400         \}\par
  401     \}\par
  402 \}\par
}
}
{\xe \v Get_Sumber\:ProgressDialog}
{\xe \v ProgressDialog\:Get_Sumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Get_Sumber (struct {\b t_module} *  {\i tModule}, QStringList  {\i data})}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get_Sumber. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   460 \{\par
  461     tModule->sumber.clear();\par
  462     tModule->jml_sumber = 0;\par
  463     for (int i = 0; i < data.length(); i++) \{\par
  464         if (data.at(i) != "") \{\par
  465             tModule->sumber.insert(tModule->jml_sumber, data.at(i));\par
  466             tModule->jml_sumber++;\par
  467         \}\par
  468     \}\par
  469 \}\par
}
}
{\xe \v on_pbCancel_clicked\:ProgressDialog}
{\xe \v ProgressDialog\:on_pbCancel_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbCancel_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbCancel_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   936 \{\par
  937     cancel = true;\par
  938 \}\par
}
}
{\xe \v on_pbDetail_clicked\:ProgressDialog}
{\xe \v ProgressDialog\:on_pbDetail_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void on_pbDetail_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on_pbDetail_clicked }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   925 \{\par
  926     if (ui->Description->isHidden()) \{\par
  927         ui->pbDetail->setText("Hide Detail");\par
  928         ui->Description->setHidden(false);\par
  929     \} else \{\par
  930         ui->pbDetail->setText("Show Detail");\par
  931         ui->Description->setHidden(true);\par
  932     \}\par
  933 \}\par
}
}
{\xe \v Processing\:ProgressDialog}
{\xe \v ProgressDialog\:Processing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Processing (QSerialPort *  {\i SerialPort} = {\f2 0}, QString  {\i address} = {\f2 0}, QString  {\i mode} = {\f2 0}, QString  {\i index} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Processing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SerialPort} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    19 \{\par
   20     struct t_module tModule; struct t_serial_settings tSerial;\par
   21     mod->read_module(&tModule, address);\par
   22     Serial_Com = SerialPort;\par
   23     timeout = false; flagERR = 2; strERR = "";\par
   24     cancel = false; finish = false;\par
   25     progressVal = 0;\par
   26     ui->progressBar->reset();\par
   27     /*if (index.isEmpty()) */ui->Description->clear();\par
   28     QStringList list_mode = mode.split(';');\par
   29     QStringList list_index = index.split(';');\par
   31     for (int i = 0; i < list_mode.length(); i++) \{\par
   32         if (list_mode.at(i) == MODE_GET_ENV) \{\par
   33             Request_ENV(false);\par
   34         \} if (list_mode.at(i) == MODE_GET_SIM) \{\par
   35             Request_SIM(false);\par
   36         \} if (list_mode.at(i) == MODE_GET_I0) \{\par
   37             Request_IO(false);\par
   38         \} if (list_mode.at(i) == MODE_GET_SRC) \{\par
   39             Request_Sumber(false);\par
   40         \} if (list_mode.at(i) == MODE_GET_DAT) \{\par
   41             Request_Data(false);\par
   42         \} if (list_mode.at(i) == MODE_SET_ENV) \{\par
   43             Set_ENV(false, &tModule);\par
   44         \} if (list_mode.at(i) == MODE_SET_SIM) \{\par
   45             Set_SIM(false, &tModule);\par
   46         \} if (list_mode.at(i) == MODE_SET_KNL) \{\par
   47             if (index.isEmpty()) \{Set_Input(false, &tModule);\}\par
   48             else \{Set_Input(false, &tModule, list_index.at(i));\}\par
   49         \} if (list_mode.at(i) == MODE_SET_RLY) \{\par
   50             if (index.isEmpty()) \{Set_Output(false, &tModule);\}\par
   51             else \{Set_Output(false, &tModule, list_index.at(i));\}\par
   52         \} if (list_mode.at(i) == MODE_SET_SRC) \{\par
   53             if (index.isEmpty()) \{Set_Sumber(false, &tModule);\}\par
   54             else \{Set_Sumber(false, &tModule, list_index.at(i));\}\par
   55         \} if (list_mode.at(i) == MODE_SET_DAT) \{\par
   56             if (index.isEmpty()) \{Set_Data(false, &tModule);\}\par
   57             else \{Set_Data(false, &tModule, list_index.at(i));\}\par
   58         \}\par
   59     \}\par
   61     ui->progressBar->setRange(0,progressVal);\par
   62     progressVal = 0;\par
   63     for (int i = 0; i < list_mode.length(); i++) \{\par
   64         if (list_mode.at(i) == MODE_GET_ENV) \{\par
   65             Request_ENV(true);\par
   66             Serial->read_parsing(&tSerial);\par
   67             list1 = tSerial.str_data_env.split(";");\par
   68             Get_ENV(&tModule, list1);\par
   69         \} if (list_mode.at(i) == MODE_GET_SIM) \{\par
   70             Request_SIM(true);\par
   71             Serial->read_parsing(&tSerial);\par
   72             list1 = tSerial.str_data_sim.split("*");\par
   73             Get_SIM(&tModule, list1);\par
   74         \} if (list_mode.at(i) == MODE_GET_I0) \{\par
   75             Request_IO(true);\par
   76             Serial->read_parsing(&tSerial);\par
   77             list1 = tSerial.str_data_io.split("*");\par
   78             Get_Input(&tModule, list1);\par
   79             Get_Output(&tModule, list1);\par
   80         \} if (list_mode.at(i) == MODE_GET_SRC) \{\par
   81             Request_Sumber(true);\par
   82             Serial->read_parsing(&tSerial);\par
   83             list1 = tSerial.str_data_src.split("*");\par
   84             Get_Sumber(&tModule, list1);\par
   85         \} if (list_mode.at(i) == MODE_GET_DAT) \{\par
   86             Request_Data(true);\par
   87             Serial->read_parsing(&tSerial);\par
   88             list1 = tSerial.str_data_dat.split("*");\par
   89             Get_Data(&tModule, list1);\par
   90         \} if (list_mode.at(i) == MODE_SET_ENV) \{\par
   91             Set_ENV(true, &tModule);\par
   92         \} if (list_mode.at(i) == MODE_SET_SIM) \{\par
   93             Set_SIM(true, &tModule);\par
   94         \} if (list_mode.at(i) == MODE_SET_KNL) \{\par
   95             if (index.isEmpty()) \{\par
   96                 Set_Input(true, &tModule);\par
   97             \} else \{\par
   98                 Set_Input(true, &tModule, list_index.at(i));\par
   99             \}\par
  100         \} if (list_mode.at(i) == MODE_SET_RLY) \{\par
  101             if (index.isEmpty()) \{\par
  102                 Set_Output(true, &tModule);\par
  103             \} else \{\par
  104                 Set_Output(true, &tModule, list_index.at(i));\par
  105             \}\par
  106         \} if (list_mode.at(i) == MODE_SET_SRC) \{\par
  107             if (index.isEmpty()) \{\par
  108                 Set_Sumber(true, &tModule);\par
  109             \} else \{\par
  110                 Set_Sumber(true, &tModule, list_index.at(i));\par
  111             \}\par
  112         \} if (list_mode.at(i) == MODE_SET_DAT) \{\par
  113             if (index.isEmpty()) \{\par
  114                 Set_Data(true, &tModule);\par
  115             \} else \{\par
  116                 Set_Data(true, &tModule, list_index.at(i));\par
  117             \}\par
  118         \}\par
  119         if (cancel) break;\par
  120     \}\par
  122     strcpy(tModule.module_name, address.mid(18,address.length()-22).toLatin1().data());\par
  123     mod->write_module(&tModule);\par
  124     cryp code; code.encryp(address);\par
  125     finish = true;\par
  126 \}\par
}
}
{\xe \v read_FinishRead\:ProgressDialog}
{\xe \v ProgressDialog\:read_FinishRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool read_FinishRead ()}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read_FinishRead }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   800 \{\par
  801     pth = PATH_SERIAL_PARSING;\par
  802     cryp code; code.decryp(pth);\par
  803     QSettings sett(pth, QSettings::IniFormat);\par
  804 \par
  805     bool FinishRead = sett.value("FINISH_READ").toBool();\par
  806 \par
  807     code.encryp(pth);\par
  808     return FinishRead;\par
  809 \}\par
}
}
{\xe \v read_flagERR\:ProgressDialog}
{\xe \v ProgressDialog\:read_flagERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int read_flagERR ()}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   812 \{\par
  813     pth = PATH_SERIAL_PARSING;\par
  814     cryp code; code.decryp(pth);\par
  815     QSettings sett(pth, QSettings::IniFormat);\par
  816 \par
  817     int flagERR = sett.value("ERROR_FLAG").toInt();\par
  818 \par
  819     code.encryp(pth);\par
  820     return flagERR;\par
  821 \}\par
}
}
{\xe \v read_strERR\:ProgressDialog}
{\xe \v ProgressDialog\:read_strERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString read_strERR ()}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   824 \{\par
  825     pth = PATH_SERIAL_PARSING;\par
  826     cryp code; code.decryp(pth);\par
  827     QSettings sett(pth, QSettings::IniFormat);\par
  828 \par
  829     QString strERR = sett.value("ERROR_STRING").toString();\par
  830 \par
  831     code.encryp(pth);\par
  832     return strERR;\par
  833 \}\par
}
}
{\xe \v Request_Data\:ProgressDialog}
{\xe \v ProgressDialog\:Request_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Request_Data (bool  {\i stat})}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request_Data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   179 \{\par
  180     if (stat) \{\par
  181         Request = QString::fromUtf8(MODE_GET_DAT) + "\\r\\n";\par
  182         Desc = "Request Data ..";\par
  183         serial_write(Desc, Request, WAIT_WRITE);\par
  184         ui->progressBar->setValue(progressVal++);\par
  185     \} else \{progressVal++;\}\par
  186 \}\par
}
}
{\xe \v Request_ENV\:ProgressDialog}
{\xe \v ProgressDialog\:Request_ENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Request_ENV (bool  {\i stat})}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request_ENV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   129 \{\par
  130     if (stat) \{\par
  131         Request = QString::fromUtf8(MODE_GET_ENV) + "\\r\\n";\par
  132         Desc = "Request Environment ..";\par
  133         serial_write(Desc, Request, WAIT_WRITE);\par
  134         ui->progressBar->setValue(progressVal++);\par
  135     \} else \{progressVal++;\}\par
  136 \}\par
}
}
{\xe \v Request_IO\:ProgressDialog}
{\xe \v ProgressDialog\:Request_IO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Request_IO (bool  {\i stat})}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request_IO. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   149 \{\par
  150     if (stat) \{\par
  151         Request = QString::fromUtf8(MODE_GET_I0) + "\\r\\n";\par
  152         Desc = "Request I/O ..";\par
  153         serial_write(Desc, Request, WAIT_WRITE);\par
  154         ui->progressBar->setValue(progressVal++);\par
  155     \} else \{progressVal++;\}\par
  156 \}\par
}
}
{\xe \v Request_Signal\:ProgressDialog}
{\xe \v ProgressDialog\:Request_Signal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Request_Signal (bool  {\i stat})}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request_Signal. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   159 \{\par
  160     if (stat) \{\par
  161         Request = "0003\\r\\n";\par
  162         Desc = "Request Signal ..";\par
  163         serial_write(Desc, Request, WAIT_WRITE);\par
  164         ui->progressBar->setValue(progressVal++);\par
  165     \} else \{progressVal++;\}\par
  166 \}\par
}
}
{\xe \v Request_SIM\:ProgressDialog}
{\xe \v ProgressDialog\:Request_SIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Request_SIM (bool  {\i stat})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request_SIM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   139 \{\par
  140     if (stat) \{\par
  141         Request = QString::fromUtf8(MODE_GET_SIM) + "\\r\\n";\par
  142         Desc = "Request SIM Configuration ..";\par
  143         serial_write(Desc, Request, WAIT_WRITE);\par
  144         ui->progressBar->setValue(progressVal++);\par
  145     \} else \{progressVal++;\}\par
  146 \}\par
}
}
{\xe \v Request_Sumber\:ProgressDialog}
{\xe \v ProgressDialog\:Request_Sumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Request_Sumber (bool  {\i stat})}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request_Sumber. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   169 \{\par
  170     if (stat) \{\par
  171         Request = QString::fromUtf8(MODE_GET_SRC) + "\\r\\n";\par
  172         Desc = "Request Sources ..";\par
  173         serial_write(Desc, Request, WAIT_WRITE);\par
  174         ui->progressBar->setValue(progressVal++);\par
  175     \} else \{progressVal++;\}\par
  176 \}\par
}
}
{\xe \v Reset_Board\:ProgressDialog}
{\xe \v ProgressDialog\:Reset_Board}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_Board (bool  {\i stat})}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset_Board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   780 \{\par
  781     Request = "reset\\r\\n";\par
  782     Desc = "Reset Board ..";\par
  783     if (stat) \{\par
  784         serial_write(Desc, Request, WAIT_WRITE);\par
  785         ui->progressBar->setValue(progressVal++);\par
  786     \} else \{progressVal++;\}\par
  787 \}\par
}
}
{\xe \v serial_write\:ProgressDialog}
{\xe \v ProgressDialog\:serial_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void serial_write (QString  {\i desc}, QString  {\i data}, int  {\i delay_char})}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
serial_write }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i desc} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i delay_char} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   844 \{\par
  845     ui->Description->append(desc);\par
  846     QString tmp;\par
  847     data.remove("\\r\\n");\par
  848     for (int i = 0; i < data.length(); i++) \{\par
  849         tmp = QChar(data.at(i));\par
  850         Serial_Com->write(tmp.toUtf8().data());\par
  851         delay(delay_char);\par
  852     \}\par
  853     Serial_Com->write("\\r\\n");\par
  854     waiting_set();\par
  855     flagERR = read_flagERR();\par
  856     strERR = read_strERR();\par
  857 //    if (timeout) \{QMessageBox::information(this, "Serial Communication", STR_TIMEOUT, 0, 0);\}\par
  858 //    if (flagERR == 1) \{QMessageBox::information(this, "Serial Communication", "ERROR !!\\r\\n" + strERR, 0, 0);\}\par
  859     if (timeout) \{ui->Description->append("TIMEOUT\\r\\n");\}\par
  860     else if (flagERR == 1) \{ui->Description->append("ERROR !! : " + strERR + "\\r\\n");\}\par
  861     else \{ui->Description->append("OK\\r\\n");\}\par
  862     writeLogFile(data,flagERR,strERR,timeout);\par
  863     timeout = false; flagERR = 2; strERR = "";\par
  864 \par
  865     this->write_FinishRead(timeout,flagERR,strERR);\par
  866     cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  867 \}\par
}
}
{\xe \v Set_Data\:ProgressDialog}
{\xe \v ProgressDialog\:Set_Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Set_Data (bool  {\i stat}, struct {\b t_module} *  {\i tModule}, QString  {\i index} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set_Data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   716 \{\par
  717 //    qDebug() << "-----------------------------------";\par
  718     if (index.length() == 0) \{\par
  719         for (int i = 0; i < tModule->data.length(); i++) \{\par
  720             int validation = 0;\par
  721             if (i == 0) validation = 2;\par
  722             if (i == tModule->data.length()-1) validation = 1;\par
  723             temp = tModule->data.at(i);\par
  724             list1 = temp.split(";");\par
  725 \par
  726             Request = QString::fromUtf8(MODE_SET_DAT) + " " + list1.at(0) + " " + list1.at(1) + " " +\par
  727                       list1.at(2) + " " + list1.at(4) + " " + list1.at(5) + " " +\par
  728                       list1.at(6) + " " + list1.at(7) + " " + list1.at(8) + " " +\par
  729                       list1.at(9) + " " + list1.at(10) + " " + list1.at(11) + " " +\par
  730                       QString::number(validation) + "\\r\\n";\par
  731 //            qDebug() << Request;\par
  732             Desc = "Set Data " + list1.at(0) + " ..";\par
  733             if (stat) \{\par
  734                 serial_write(Desc, Request, WAIT_WRITE);\par
  735                 ui->progressBar->setValue(progressVal++);\par
  736             \} else \{progressVal++;\}\par
  737             if (cancel) break;\par
  738         \}\par
  739     \} else \{\par
  740 //        if (index.length() > 1) \{\par
  741 //            for (int i = 0; i < index.length(); i++) \{\par
  742 //                int validation = 0;\par
  743 //                if (i == 0) validation = 2;\par
  744 //                if (i == index.length()-1) validation = 1;\par
  745 //                temp = tModule->data.at(index.at(i).toInt());\par
  746 //                list1 = temp.split(";");\par
  747 \par
  748 //                Request = "0105 " + list1.at(0) + " " + list1.at(1) + " " +\par
  749 //                          list1.at(2) + " " + list1.at(4) + " " + list1.at(5) + " " +\par
  750 //                          list1.at(6) + " " + list1.at(7) + " " + list1.at(8) + " " +\par
  751 //                          list1.at(9) + " " + list1.at(10) + " " + list1.at(11) + " " +\par
  752 //                          QString::number(validation) + "\\r\\n";\par
  753 //                Desc = "Set Data " + list1.at(0)  + " ..";\par
  754 //                qDebug() << Request;\par
  755 //                if (stat) \{\par
  756 //                    serial_write(Desc, Request, WAIT_WRITE);\par
  757 //                    ui->progressBar->setValue(progressVal++);\par
  758 //                \} else \{progressVal++;\}\par
  759 //            \}\par
  760 //        \} else \{\par
  761             temp = tModule->data.at(index.toInt());\par
  762             list1 = temp.split(";");\par
  763 \par
  764             Request = QString::fromUtf8(MODE_SET_DAT) + " " + list1.at(0) + " " + list1.at(1) + " " +\par
  765                       list1.at(2) + " " + list1.at(4) + " " + list1.at(5) + " " +\par
  766                       list1.at(6) + " " + list1.at(7) + " " + list1.at(8) + " " +\par
  767                       list1.at(9) + " " + list1.at(10) + " " + list1.at(11) + " 3\\r\\n";\par
  768             Desc = "Set Data " + list1.at(0)  + " ..";\par
  769 //            qDebug() << Request;\par
  770             if (stat) \{\par
  771                 serial_write(Desc, Request, WAIT_WRITE);\par
  772                 ui->progressBar->setValue(progressVal++);\par
  773             \} else \{progressVal++;\}\par
  774 //        \}\par
  775     \}\par
  776 //    qDebug() << "-----------------------------------";\par
  777 \}\par
}
}
{\xe \v Set_ENV\:ProgressDialog}
{\xe \v ProgressDialog\:Set_ENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Set_ENV (bool  {\i stat}, struct {\b t_module} *  {\i tModule})}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set_ENV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET ENVIRONTMENT \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   484 \{\par
  486     Request.sprintf("%s %s %s %s %s %d %d %d %d %d %d\\r\\n"\par
  487                     , MODE_SET_ENV\par
  488                     , tModule->module_name\par
  489                     , tModule->serial_number\par
  490                     , tModule->server_address\par
  491                     , tModule->file_address\par
  492                     , tModule->flag_webclient\par
  493                     , tModule->interval_relay-3\par
  494                     , tModule->interval_data-3\par
  495                     , tModule->flag_mode_http\par
  496                     , tModule->port\par
  497                     , tModule->utc);\par
  498     Desc.sprintf("Set Environtment \\"%s \\" ..", tModule->module_name);\par
  499 //    0100 RTU-PDAM_Ciburial PKP1-280616-001-RJN1R 119.18.154.235 /api/loket 1 10 30 0 1337 7\par
  500     if (stat) \{\par
  501         serial_write(Desc, Request, WAIT_WRITE);\par
  502         ui->progressBar->setValue(progressVal++);\par
  503     \} else \{progressVal++;\}\par
  504 \}\par
}
}
{\xe \v Set_Input\:ProgressDialog}
{\xe \v ProgressDialog\:Set_Input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Set_Input (bool  {\i stat}, struct {\b t_module} *  {\i tModule}, QString  {\i index} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set_Input. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET INPUT DIGITAL \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   544 \{\par
  546     if (index.isEmpty()) \{\par
  547         for (int i = 0; i < tModule->Input.length(); i++) \{\par
  548             int validation = 0;\par
  549             if (i == 0) validation = 2;\par
  550             if (i == tModule->Input.length()-1) validation = 1;\par
  551             temp = tModule->Input.at(i);\par
  552             list1 = temp.split(';');\par
  553 \par
  554             Request = QString::fromUtf8(MODE_SET_KNL) + " " + list1.at(1) + " " + list1.at(2) + " " + list1.at(3) + " " + list1.at(4) + " " + QString::number(validation) + "\\r\\n";\par
  555             Desc = "Set Input Channel " + list1.at(1) + " ..";\par
  556             if (stat) \{\par
  557                 serial_write(Desc, Request, WAIT_WRITE);\par
  558                 ui->progressBar->setValue(progressVal++);\par
  559             \} else \{progressVal++;\}\par
  560             if (cancel) break;\par
  561         \}\par
  562 \par
  563         for (int i = 0; i < tModule->Input.length(); i++) \{\par
  564             int validation = 0;\par
  565             if (i == 0) validation = 2;\par
  566             if (i == tModule->data.length()-1) validation = 1;\par
  567             temp = tModule->data.at(i);\par
  568             list1 = temp.split(";");\par
  569 \par
  570             Request = QString::fromUtf8(MODE_SET_DAT) + " " + list1.at(0) + " " + list1.at(1) + " " +\par
  571                       list1.at(2) + " " + list1.at(4) + " " + list1.at(5) + " " +\par
  572                       list1.at(6) + " " + list1.at(7) + " " + list1.at(8) + " " +\par
  573                       list1.at(9) + " " + list1.at(10) + " " + list1.at(11) + " " +\par
  574                       QString::number(validation) + "\\r\\n";\par
  575 //            qDebug() << Request;\par
  576             Desc = "Set Data " + list1.at(0) + " ..";\par
  577             if (stat) \{\par
  578                 serial_write(Desc, Request, WAIT_WRITE);\par
  579                 ui->progressBar->setValue(progressVal++);\par
  580             \} else \{progressVal++;\}\par
  581             if (cancel) break;\par
  582         \}\par
  583     \} else \{\par
  584         temp = tModule->Input.at(index.toInt());\par
  585         list1 = temp.split(';');\par
  586 //        0102 12 250 10.000 0.000 3\par
  587         Request = QString::fromUtf8(MODE_SET_KNL) + " " + list1.at(1) + " " + list1.at(2) + " " + list1.at(3) + " " + list1.at(4) + " 3\\r\\n";\par
  588         Desc = "Set Input Channel " + list1.at(1) + " ..";\par
  589         if (stat) \{\par
  590             serial_write(Desc, Request, WAIT_WRITE);\par
  591             ui->progressBar->setValue(progressVal++);\par
  592         \} else \{progressVal++;\}\par
  593     \}\par
  594 \}\par
}
}
{\xe \v Set_Output\:ProgressDialog}
{\xe \v ProgressDialog\:Set_Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Set_Output (bool  {\i stat}, struct {\b t_module} *  {\i tModule}, QString  {\i index} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set_Output. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET OUTPUT RELAY \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   597 \{\par
  598     if (index.isEmpty()) \{\par
  600         for (int i = 0; i < tModule->Output.length(); i++) \{\par
  601             temp = tModule->Output.at(i);\par
  602             list1 = temp.split(';');\par
  603             Request = QString::fromUtf8(MODE_SET_RLY) + " " + list1.at(1) + " " + list1.at(2) + " " + list1.at(4) + "\\r\\n";\par
  604             Desc = "Set Output Channel " + list1.at(1) + " ..";\par
  605             if (stat) \{\par
  606                 serial_write(Desc, Request, WAIT_WRITE);\par
  607                 ui->progressBar->setValue(progressVal++);\par
  608             \} else \{progressVal++;\}\par
  609             if (cancel) break;\par
  610         \}\par
  611     \} else \{\par
  612         temp = tModule->Output.at(index.toInt());\par
  613         list1 = temp.split(';');\par
  614         Request = QString::fromUtf8(MODE_SET_RLY) + " " + list1.at(1) + " " + list1.at(2) + " " + list1.at(4) + "\\r\\n";\par
  615         Desc = "Set Output Channel " + list1.at(1) + " ..";\par
  616         if (stat) \{\par
  617             serial_write(Desc, Request, WAIT_WRITE);\par
  618             ui->progressBar->setValue(progressVal++);\par
  619         \} else \{progressVal++;\}\par
  620     \}\par
  621 \}\par
}
}
{\xe \v Set_SIM\:ProgressDialog}
{\xe \v ProgressDialog\:Set_SIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Set_SIM (bool  {\i stat}, struct {\b t_module} *  {\i tModule})}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set_SIM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET SIM 1\par
SET SIM 2 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   507 \{\par
  509     Request.sprintf("%s 1 %s %s %s %d %s %s %s %s"\par
  510                     , MODE_SET_SIM\par
  511                     , tModule->device_name_gsm_1\par
  512                     , tModule->name_gsm_1\par
  513                     , tModule->number_gsm_1\par
  514                     , tModule->flag_status_active_gsm_1\par
  515                     , tModule->apn_gsm_1\par
  516                     , tModule->user_gsm_1\par
  517                     , tModule->passwd_gsm_1\par
  518                     , tModule->com_gsm_1);\par
  519     Desc.sprintf("Set SIM 1 Configuration (\\"%s\\") ..", tModule->device_name_gsm_1);\par
  520     if (stat) \{\par
  521         serial_write(Desc, Request, WAIT_WRITE);\par
  522         ui->progressBar->setValue(progressVal++);\par
  523     \} else \{progressVal++;\}\par
  524 \par
  526     Request.sprintf("%s 2 %s %s %s %d %s %s %s %s"\par
  527                     , MODE_SET_SIM\par
  528                     , tModule->device_name_gsm_2\par
  529                     , tModule->name_gsm_2\par
  530                     , tModule->number_gsm_2\par
  531                     , tModule->flag_status_active_gsm_2\par
  532                     , tModule->apn_gsm_2\par
  533                     , tModule->user_gsm_2\par
  534                     , tModule->passwd_gsm_2\par
  535                     , tModule->com_gsm_2);\par
  536     Desc.sprintf("Set SIM 2 Configuration (\\"%s\\") ..", tModule->device_name_gsm_2);\par
  537     if (stat) \{\par
  538         serial_write(Desc, Request, WAIT_WRITE);\par
  539         ui->progressBar->setValue(progressVal++);\par
  540     \} else \{progressVal++;\}\par
  541 \}\par
}
}
{\xe \v Set_Sumber\:ProgressDialog}
{\xe \v ProgressDialog\:Set_Sumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Set_Sumber (bool  {\i stat}, struct {\b t_module} *  {\i tModule}, QString  {\i index} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set_Sumber. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stat} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   624 \{\par
  625     if (index.isEmpty()) \{\par
  626         for (int i = 0; i < tModule->sumber.length(); i++) \{\par
  627             int validation = 0;\par
  628             if (i == 0) validation = 2;\par
  629             if (i == tModule->sumber.length()-1) validation = 1;\par
  630             temp = tModule->sumber.at(i);\par
  631             list1 = temp.split(";");\par
  632 \par
  633             Request = QString::fromUtf8(MODE_SET_SRC) + " " + list1.at(0) + " " + list1.at(1) + " " +\par
  634                       list1.at(2) + " " + list1.at(3) + " " + list1.at(4) + " " +\par
  635                       list1.at(5) + ";" + list1.at(6) + ";" + list1.at(7) + ";" +\par
  636                       list1.at(8) + ";" + list1.at(9) + ";" +\par
  637                       list1.at(10) + ";" + list1.at(11) + " " +\par
  638                       QString::number(validation) + "\\r\\n";\par
  639             Desc = "Set Sources " + list1.at(0) + " : \\"" + list1.at(1) + "\\" ..";\par
  640             if (stat) \{\par
  641                 serial_write(Desc, Request, WAIT_WRITE);\par
  642                 ui->progressBar->setValue(progressVal++);\par
  643             \} else \{progressVal++;\}\par
  644 \par
  645 //            if (list1.at(5) != "0" && list1.at(11) != "") \{\par
  646 //                temp = list1.at(11);\par
  647 //                for (int k = 0; k < tModule->data.length(); k++) \{\par
  648 //                    str = tModule->data.at(k);\par
  649 //                    list2 = str.split(';');\par
  650 //                    if (temp == list2.at(1)) \{\par
  651 //                        str = list2.at(0);\par
  652 //                        break;\par
  653 //                    \}\par
  654 //                \}\par
  655 //                temp = list1.at(10);\par
  656 //                for (int j = 0; j < temp.toInt()/2; j++) \{\par
  657 //                    Request = "set_data " + QString::number(str.toInt()+j) +\par
  658 //                              " status " + list1.at(4);\par
  659 //                    if (list1.at(4) == "1") \{\par
  660 //                        Desc = "Set Data " + QString::number(str.toInt()+j) + " with status : ACTIVE ..";\par
  661 //                    \} else \{\par
  662 //                        Desc = "Set Data " + QString::number(str.toInt()+j) + " with status : NOT ACTIVE ..";\par
  663 //                    \}\par
  664 //                    if (stat) \{\par
  665 //                        serial_write(Desc, Request, WAIT_WRITE);\par
  666 //                        ui->progressBar->setValue(progressVal++);\par
  667 //                    \} else \{progressVal++;\}\par
  668 //                \}\par
  669 //            \}\par
  670             if (cancel) break;\par
  671         \}\par
  672     \} else \{\par
  673         temp = tModule->sumber.at(index.toInt());\par
  674         list1 = temp.split(";");\par
  675 \par
  676         Request = QString::fromUtf8(MODE_SET_SRC) + " " + list1.at(0) + " " + list1.at(1) + " " +\par
  677                   list1.at(2) + " " + list1.at(3) + " " + list1.at(4) + " " +\par
  678                   list1.at(5) + ";" + list1.at(6) + ";" + list1.at(7) + ";" +\par
  679                   list1.at(8) + ";" + list1.at(9) + ";" +\par
  680                   list1.at(10) + ";" + list1.at(11) + " 3\\r\\n";\par
  681         Desc = "Set Sources " + list1.at(0) + " : \\"" + list1.at(1) + "\\" ..";\par
  682         if (stat) \{\par
  683             serial_write(Desc, Request, WAIT_WRITE);\par
  684             ui->progressBar->setValue(progressVal++);\par
  685         \} else \{progressVal++;\}\par
  686 \par
  687 //        if (list1.at(5) != "0" && list1.at(11) != "") \{\par
  688 //            temp = list1.at(11);\par
  689 //            for (int k = 0; k < tModule->data.length(); k++) \{\par
  690 //                str = tModule->data.at(k);\par
  691 //                list2 = str.split(';');\par
  692 //                if (temp == list2.at(1)) \{\par
  693 //                    str = list2.at(0);\par
  694 //                    break;\par
  695 //                \}\par
  696 //            \}\par
  697 //            temp = list1.at(10);\par
  698 //            for (int j = 0; j < temp.toInt()/2; j++) \{\par
  699 //                Request = "set_data " + QString::number(str.toInt()+j) +\par
  700 //                          " status " + list1.at(4);\par
  701 //                if (list1.at(4) == "1") \{\par
  702 //                    Desc = "Set Data " + QString::number(str.toInt()+j) + " with status : ACTIVE ..";\par
  703 //                \} else \{\par
  704 //                    Desc = "Set Data " + QString::number(str.toInt()+j) + " with status : NOT ACTIVE ..";\par
  705 //                \}\par
  706 //                if (stat) \{\par
  707 //                    serial_write(Desc, Request, WAIT_WRITE);\par
  708 //                    ui->progressBar->setValue(progressVal++);\par
  709 //                \} else \{progressVal++;\}\par
  710 //            \}\par
  711 //        \}\par
  712     \}\par
  713 \}\par
}
}
{\xe \v waiting_set\:ProgressDialog}
{\xe \v ProgressDialog\:waiting_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void waiting_set ()}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
waiting_set }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   870 \{\par
  871     QTime dieTime = QTime::currentTime().addMSecs(TIMEOUT);\par
  872     while (!this->read_FinishRead()) \{\par
  873         QCoreApplication::processEvents(QEventLoop::AllEvents, 100);\par
  874         if (this->read_flagERR() == 1 && !timeout) \{\par
  875             timeout = false;\par
  876             break;\par
  877         \}\par
  878         if (QTime::currentTime() >= dieTime && !timeout) \{\par
  879             timeout = true;\par
  880             break;\par
  881         \}\par
  882     \}\par
  883 \}\par
}
}
{\xe \v write_FinishRead\:ProgressDialog}
{\xe \v ProgressDialog\:write_FinishRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_FinishRead (bool  {\i FinishRead}, int  {\i cekErr}, QString  {\i strErr})}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_FinishRead }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FinishRead} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cekErr} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i strErr} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   790 \{\par
  791     pth = PATH_SERIAL_PARSING;\par
  792     QSettings sett(pth, QSettings::IniFormat);\par
  793 \par
  794     sett.setValue("FINISH_READ", FinishRead);\par
  795     sett.setValue("ERROR_FLAG", cekErr);\par
  796     sett.setValue("ERROR_STRING", strErr);\par
  797 \}\par
}
}
{\xe \v writeLogFile\:ProgressDialog}
{\xe \v ProgressDialog\:writeLogFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeLogFile (QString  {\i log}, int  {\i flagERR}, QString  {\i strERR}, bool  {\i timeout})}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writeLogFile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i log} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i flagERR} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i strERR} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i timeout} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   886 \{\par
  887     /* Try and open a file for output */\par
  888     QString outputFilename = PATH_LOG;\par
  889     QFile outputFile(outputFilename);\par
  890     outputFile.open(QIODevice::Append | QIODevice::Text);\par
  891 \par
  892     /* Check it opened OK */\par
  893     if(!outputFile.isOpen())\{\par
  894         qDebug() << "- Error, unable to open" << outputFilename << "for output";\par
  895     \} else \{\par
  896         log.remove("\\r").remove("\\n");\par
  897         if (log.length() < 100) \{\par
  898             for (int i = log.length(); i < 100; i++) \{\par
  899                 log.append(" ");\par
  900             \}\par
  901         \}\par
  902         log.append("|");\par
  903 \par
  904         QString Flag;\par
  905         if      (flagERR == 1) \{Flag = "ERROR|";\}\par
  906         else if (flagERR == 0) \{Flag = "OK   |";\}\par
  907         else                   \{Flag = "     |";\}\par
  908 \par
  909         QString TimeOut;\par
  910         if      (timeout) \{TimeOut = "TIMEOUT|";\}\par
  911         else              \{TimeOut = "       |";\}\par
  912 \par
  913         /* Point a QTextStream object at the file */\par
  914         QTextStream outStream(&outputFile);\par
  915 \par
  916         /* Write the line to the file */\par
  917         outStream << QTime::currentTime().toString("hh:mm:ss.zzz") << " | " << log << Flag << TimeOut << strERR<< "\\r\\n";\par
  918 \par
  919         /* Close the file */\par
  920         outputFile.close();\par
  921     \}\par
  922 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v cancel\:ProgressDialog}
{\xe \v ProgressDialog\:cancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool cancel}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cancel }}\par
}
{\xe \v cnt_try\:ProgressDialog}
{\xe \v ProgressDialog\:cnt_try}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cnt_try}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cnt_try }}\par
}
{\xe \v Desc\:ProgressDialog}
{\xe \v ProgressDialog\:Desc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Desc}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desc. }}\par
}
{\xe \v finish\:ProgressDialog}
{\xe \v ProgressDialog\:finish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool finish}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
finish }}\par
}
{\xe \v flagERR\:ProgressDialog}
{\xe \v ProgressDialog\:flagERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int flagERR}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flagERR }}\par
}
{\xe \v list1\:ProgressDialog}
{\xe \v ProgressDialog\:list1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList list1}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
list1 }}\par
}
{\xe \v list2\:ProgressDialog}
{\xe \v ProgressDialog\:list2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList list2}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
list2 }}\par
}
{\xe \v list3\:ProgressDialog}
{\xe \v ProgressDialog\:list3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList list3}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
list3 }}\par
}
{\xe \v mod\:ProgressDialog}
{\xe \v ProgressDialog\:mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b module}* mod}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mod }}\par
}
{\xe \v progressVal\:ProgressDialog}
{\xe \v ProgressDialog\:progressVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int progressVal}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
progressVal }}\par
}
{\xe \v pth\:ProgressDialog}
{\xe \v ProgressDialog\:pth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString pth}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pth }}\par
}
{\xe \v Request\:ProgressDialog}
{\xe \v ProgressDialog\:Request}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Request}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request. }}\par
}
{\xe \v Serial\:ProgressDialog}
{\xe \v ProgressDialog\:Serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b serial}* Serial}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial. }}\par
}
{\xe \v Serial_Com\:ProgressDialog}
{\xe \v ProgressDialog\:Serial_Com}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSerialPort* Serial_Com}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial_Com. }}\par
}
{\xe \v str\:ProgressDialog}
{\xe \v ProgressDialog\:str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString str}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str }}\par
}
{\xe \v strERR\:ProgressDialog}
{\xe \v ProgressDialog\:strERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString strERR}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
strERR }}\par
}
{\xe \v temp\:ProgressDialog}
{\xe \v ProgressDialog\:temp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString temp}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temp }}\par
}
{\xe \v temp2\:ProgressDialog}
{\xe \v ProgressDialog\:temp2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString temp2}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temp2 }}\par
}
{\xe \v timeout\:ProgressDialog}
{\xe \v ProgressDialog\:timeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool timeout}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
timeout }}\par
}
{\xe \v ui\:ProgressDialog}
{\xe \v ProgressDialog\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::ProgressDialog* ui{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ui }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b progressdialog.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b progressdialog.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas QLightBoxWidget\par \pard\plain 
{\tc\tcl2 \v QLightBoxWidget}
{\xe \v QLightBoxWidget}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
overlap class }}\par
{
{\f2 #include <qlightboxwidget.h>}}\par
Diagram hierarki kelas untuk QLightBoxWidget:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dde/a00691.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagram kolaborasi untuk QLightBoxWidget:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/dd4/a00690.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Diproteksi\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
overlap class \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v QLightBoxWidget\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:QLightBoxWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QLightBoxWidget} (QWidget*  {\i _parent}, bool  {\i _folowToHeadWidget} = {\f2 false}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9                                                                           :\par
   10     QWidget(_parent),\par
   11     m_isInUpdateSelf(false)\par
   12 \{\par
   13     //\par
   14     // The parent widget has to be necessarily installed\par
   15     //\par
   16     Q_ASSERT_X(_parent, "", Q_FUNC_INFO);\par
   17 \par
   18     //\par
   19     // If necessary, parents do the most "senior" widget\par
   20     //\par
   21     if (_folowToHeadWidget) \{\par
   22         while (_parent->parentWidget() != 0) \{\par
   23             _parent = _parent->parentWidget();\par
   24         \}\par
   25         setParent(_parent);\par
   26     \}\par
   27 \par
   28     //\par
   29     // Follow the events of the parent of the widget to\par
   30     // be able to redraw it, when you change the size, etc.\par
   31     //\par
   32     _parent->installEventFilter(this);\par
   33 \par
   34     //\par
   35     // hide the widget\par
   36     //\par
   37     setVisible(false);\par
   38 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v eventFilter\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:eventFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool eventFilter (QObject*  {\i _object}, QEvent*  {\i _event}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It is overridden to track parent widget events. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    41 \{\par
   42     //\par
   43     // Widgets should always be the last child,\par
   44     // to overlap the rest of widgets when displayed\par
   45     //\par
   46     if (_event->type() == QEvent::ChildAdded) \{\par
   47         QChildEvent* childEvent = dynamic_cast<QChildEvent*>(_event);\par
   48         if (childEvent->child() != this) \{\par
   49             QWidget* parent = parentWidget();\par
   50 //          setParent(0);\par
   51             setParent(parent);\par
   52         \}\par
   53     \}\par
   54 \par
   55     //\par
   56     // If you change the size of the parent widget,\par
   57     // you must repaint itself\par
   58     //\par
   59     if (isVisible()\par
   60         && _event->type() == QEvent::Resize) \{\par
   61         updateSelf();\par
   62     \}\par
   63     return QWidget::eventFilter(_object, _event);\par
   64 \}\par
}
}
{\xe \v grabParentWidgetPixmap\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:grabParentWidgetPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap grabParentWidgetPixmap () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reload background image. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   119 \{\par
  120     QPixmap parentWidgetPixmap;\par
  121 \par
  122 #if (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))\par
  123     parentWidgetPixmap = parentWidget()->grab();\par
  124 #else\par
  125     parentWidgetPixmap = QPixmap::grabWidget(parentWidget());\par
  126 #endif\par
  127 \par
  128     return parentWidgetPixmap;\par
  129 \}\par
}
}
{\xe \v paintEvent\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:paintEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void paintEvent (QPaintEvent*  {\i _event}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redefined in order to simulate the effect of overlap. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    67 \{\par
   68     //\par
   69     // draw background\par
   70     //\par
   71     QPainter p;\par
   72     p.begin(this);\par
   73     // ... photo parent widget\par
   74     p.drawPixmap(0, 0, width(), height(), m_parentWidgetPixmap);\par
   75     // ... impose darkened area\par
   76     p.setBrush(QBrush(QColor(0, 0, 0, 220)));\par
   77     p.drawRect(0, 0, width(), height());\par
   78     p.end();\par
   79 \par
   80     //\par
   81     // Draw everything else\par
   82     //\par
   83     QWidget::paintEvent(_event);\par
   84 \}\par
}
}
{\xe \v showEvent\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:showEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showEvent (QShowEvent*  {\i _event}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It is overridden to before displaying customize the appearance. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    87 \{\par
   88     //\par
   89     // refresh yourself\par
   90     //\par
   91     updateSelf();\par
   92 \par
   93     //\par
   94     // display\par
   95     //\par
   96     QWidget::showEvent(_event);\par
   97 \}\par
}
}
{\xe \v updateSelf\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:updateSelf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateSelf (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reload size and background image. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   100 \{\par
  101     if (!m_isInUpdateSelf) \{\par
  102         m_isInUpdateSelf = true;\par
  103 \par
  104         \{\par
  105             //\par
  106             // updating map\par
  107             //\par
  108             hide();\par
  109             resize(parentWidget()->size());\par
  110             m_parentWidgetPixmap = grabParentWidgetPixmap();\par
  111             show();\par
  112         \}\par
  113 \par
  114         m_isInUpdateSelf = false;\par
  115     \}\par
  116 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v m_isInUpdateSelf\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:m_isInUpdateSelf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool m_isInUpdateSelf{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resolve conflicts recursive updates. }}\par
}
{\xe \v m_parentWidgetPixmap\:QLightBoxWidget}
{\xe \v QLightBoxWidget\:m_parentWidgetPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap m_parentWidgetPixmap{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
background Image }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/interface_manipulator/{\b qlightboxwidget.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/interface_manipulator/{\b qlightboxwidget.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas serial\par \pard\plain 
{\tc\tcl2 \v serial}
{\xe \v serial}
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The serial class. }}\par
{
{\f2 #include <serial.h>}}\par
Diagram kolaborasi untuk serial:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d73/a00674.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The serial class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v serial\:serial}
{\xe \v serial\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b serial} ()}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
serial }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 //    connect(&m_timer, SIGNAL(timeout()), SLOT(handleTimeout()));\par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v close_serial\:serial}
{\xe \v serial\:close_serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void close_serial (QSerialPort *  {\i SerialPort})}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
close_serial }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SerialPort} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    19 \{\par
   20     if (SerialPort->isOpen())\par
   21         SerialPort->close();\par
   22 \}\par
}
}
{\xe \v open_serial\:serial}
{\xe \v serial\:open_serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void open_serial (QSerialPort *  {\i SerialPort}, struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
open_serial }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SerialPort} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9 \{\par
   10     SerialPort->setPortName(tSerial->name);\par
   11     SerialPort->setBaudRate(tSerial->baudRate);\par
   12     SerialPort->setDataBits(tSerial->dataBits);\par
   13     SerialPort->setParity(tSerial->parity);\par
   14     SerialPort->setStopBits(tSerial->stopBits);\par
   15     SerialPort->setFlowControl(tSerial->flowControl);\par
   16 \}\par
}
}
{\xe \v read_data\:serial}
{\xe \v serial\:read_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_data (QString  {\i str_data}, QStringList  {\i val_data}){\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read_data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str_data} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i val_data} \cell }{\cell }
{\row }
}
}}
{\xe \v read_parsing\:serial}
{\xe \v serial\:read_parsing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_parsing (struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read_parsing }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   117 \{\par
  118     QString pth;\par
  119     pth = PATH_SERIAL_PARSING;\par
  120     cryp code; code.decryp(pth);\par
  121     QSettings sett(pth, QSettings::IniFormat);\par
  122     QByteArray decode;\par
  123 \par
  124     tSerial->str_data_env = sett.value("STR_DATA_ENV").toString();\par
  125     tSerial->str_data_io = sett.value("STR_DATA_IO").toString();\par
  126     tSerial->str_data_sim = sett.value("STR_DATA_SIM").toString();\par
  127     tSerial->str_data_src = sett.value("STR_DATA_SRC").toString();\par
  128     tSerial->str_data_dat = sett.value("STR_DATA_DAT").toString();\par
  129 \par
  130     code.encryp(pth);\par
  131 \}\par
}
}
{\xe \v write_data\:serial}
{\xe \v serial\:write_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_data (QSerialPort *  {\i port}, QByteArray  {\i data})}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    25 \{\par
   26 //    port->write(data.toUtf8().data());\par
   27 \par
   28     m_writeData = data;\par
   29     qint64 bytesWritten = port->write(data);\par
   30 \par
   31     if (bytesWritten == -1) \{\par
   32 //        m_standardOutput << QObject::tr("Failed to write the data to port %1, error: %2").arg(port->portName()).arg(port->errorString()) << endl;\par
   33 //        QCoreApplication::exit(1);\par
   34         return;\par
   35     \} else if (bytesWritten != m_writeData.size()) \{\par
   36 //        m_standardOutput << QObject::tr("Failed to write all the data to port %1, error: %2").arg(port->portName()).arg(port->errorString()) << endl;\par
   37 //        QCoreApplication::exit(1);\par
   38         return;\par
   39     \}\par
   40 \par
   41     m_timer.start(10);\par
   42 \}\par
}
}
{\xe \v write_parsing_dat\:serial}
{\xe \v serial\:write_parsing_dat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_parsing_dat (struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_parsing_dat }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   108 \{\par
  109     QString pth;\par
  110     pth = PATH_SERIAL_PARSING;\par
  111     QSettings sett(pth, QSettings::IniFormat);\par
  112 \par
  113     sett.setValue("STR_DATA_DAT", tSerial->str_data_dat);\par
  114 \}\par
}
}
{\xe \v write_parsing_env\:serial}
{\xe \v serial\:write_parsing_env}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_parsing_env (struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_parsing_env }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    72 \{\par
   73     QString pth;\par
   74     pth = PATH_SERIAL_PARSING;\par
   75     QSettings sett(pth, QSettings::IniFormat);\par
   76 \par
   77     sett.setValue("STR_DATA_ENV", tSerial->str_data_env);\par
   78 \}\par
}
}
{\xe \v write_parsing_io\:serial}
{\xe \v serial\:write_parsing_io}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_parsing_io (struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_parsing_io }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    81 \{\par
   82     QString pth;\par
   83     pth = PATH_SERIAL_PARSING;\par
   84     QSettings sett(pth, QSettings::IniFormat);\par
   85 \par
   86     sett.setValue("STR_DATA_IO", tSerial->str_data_io);\par
   87 \}\par
}
}
{\xe \v write_parsing_sim\:serial}
{\xe \v serial\:write_parsing_sim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_parsing_sim (struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_parsing_sim }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    90 \{\par
   91     QString pth;\par
   92     pth = PATH_SERIAL_PARSING;\par
   93     QSettings sett(pth, QSettings::IniFormat);\par
   94 \par
   95     sett.setValue("STR_DATA_SIM", tSerial->str_data_sim);\par
   96 \}\par
}
}
{\xe \v write_parsing_src\:serial}
{\xe \v serial\:write_parsing_src}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_parsing_src (struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_parsing_src }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    99 \{\par
  100     QString pth;\par
  101     pth = PATH_SERIAL_PARSING;\par
  102     QSettings sett(pth, QSettings::IniFormat);\par
  103 \par
  104     sett.setValue("STR_DATA_SRC", tSerial->str_data_src);\par
  105 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v m_bytesWritten\:serial}
{\xe \v serial\:m_bytesWritten}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
qint64 m_bytesWritten{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
m_bytesWritten }}\par
}
{\xe \v m_standardOutput\:serial}
{\xe \v serial\:m_standardOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QTextStream m_standardOutput{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
m_standardOutput }}\par
}
{\xe \v m_timer\:serial}
{\xe \v serial\:m_timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QTimer m_timer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
m_timer }}\par
}
{\xe \v m_writeData\:serial}
{\xe \v serial\:m_writeData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QByteArray m_writeData{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
m_writeData }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/communication/{\b serial.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/communication/{\b serial.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas setting\par \pard\plain 
{\tc\tcl2 \v setting}
{\xe \v setting}
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\par
{
{\f2 #include <setting.h>}}\par
Diagram kolaborasi untuk setting:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dbb/a00698.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v setting\:setting}
{\xe \v setting\:setting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b setting} ()}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 \par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v checkSetting\:setting}
{\xe \v setting\:checkSetting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkSetting ()}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    99                           \{\par
  100     bool cek = false;\par
  101     QDir path(".RTUdata/config");\par
  102     QStringList files = path.entryList(QDir::Files);\par
  103 \par
  104     QString currFiles = "serial_setting.cfg";\par
  105 \par
  106     for(int i = 0; i < files.count(); i++)\{\par
  107         if(currFiles == QString(files.at(i))) cek = true;\par
  108     \}\par
  109 \par
  110     return cek;\par
  111 \}\par
}
}
{\xe \v read_setting\:setting}
{\xe \v setting\:read_setting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_setting (struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    58 \{\par
   59     QString pth;\par
   60     pth = PATH_SERIAL_SETTING;\par
   61     cryp code; code.decryp(pth);\par
   62     QSettings sett(pth, QSettings::IniFormat);\par
   63     QString val;\par
   64 \par
   65     tSerial->name = sett.value("SERIAL_CONFIGURATION/NAME").toString().toUtf8();\par
   66     tSerial->baudRate = sett.value("SERIAL_CONFIGURATION/BAUDRATE", 0).toInt();\par
   67     tSerial->stringBaudRate = sett.value("SERIAL_CONFIGURATION/STR_BAUDRATE", "").toString().toUtf8();\par
   68 \par
   69     val = sett.value("SERIAL_CONFIGURATION/DATA_BITS").toString();\par
   70     if (val == "8") \{ tSerial->dataBits = static_cast<QSerialPort::DataBits>(QSerialPort::Data8); \}\par
   71     else if (val == "7") \{ tSerial->dataBits = static_cast<QSerialPort::DataBits>(QSerialPort::Data7); \}\par
   72     else if (val == "6") \{ tSerial->dataBits = static_cast<QSerialPort::DataBits>(QSerialPort::Data6); \}\par
   73     else if (val == "5") \{ tSerial->dataBits = static_cast<QSerialPort::DataBits>(QSerialPort::Data5); \}\par
   74     tSerial->stringDataBits = sett.value("SERIAL_CONFIGURATION/STR_DATA_BITS").toString();\par
   75 \par
   76     val = sett.value("SERIAL_CONFIGURATION/PARITY").toString();\par
   77     if (val == "0") \{ tSerial->parity = static_cast<QSerialPort::Parity>(QSerialPort::NoParity); \}\par
   78     else if (val == "2") \{ tSerial->parity = static_cast<QSerialPort::Parity>(QSerialPort::EvenParity); \}\par
   79     else if (val == "3") \{ tSerial->parity = static_cast<QSerialPort::Parity>(QSerialPort::OddParity); \}\par
   80     else if (val == "5") \{ tSerial->parity = static_cast<QSerialPort::Parity>(QSerialPort::MarkParity); \}\par
   81     else if (val == "4") \{ tSerial->parity = static_cast<QSerialPort::Parity>(QSerialPort::SpaceParity); \}\par
   82     tSerial->stringParity = sett.value("SERIAL_CONFIGURATION/STR_PARITY").toString();\par
   83 \par
   84     val = sett.value("SERIAL_CONFIGURATION/STOP_BITS").toString();\par
   85     if (val == "1") \{ tSerial->stopBits = static_cast<QSerialPort::StopBits>(QSerialPort::OneStop); \}\par
   86     else \{ tSerial->stopBits = static_cast<QSerialPort::StopBits>(QSerialPort::TwoStop); \}\par
   87     tSerial->stringStopBits = sett.value("SERIAL_CONFIGURATION/STR_STOP_BITS").toString();\par
   88 \par
   89     val = sett.value("SERIAL_CONFIGURATION/FLOW_CONTROL").toString();\par
   90     if (val == "0") \{ tSerial->flowControl = static_cast<QSerialPort::FlowControl>(QSerialPort::NoFlowControl); \}\par
   91     else if (val == "1") \{ tSerial->flowControl = static_cast<QSerialPort::FlowControl>(QSerialPort::HardwareControl); \}\par
   92     else if (val == "2") \{ tSerial->flowControl = static_cast<QSerialPort::FlowControl>(QSerialPort::SoftwareControl); \}\par
   93     tSerial->stringFlowControl = sett.value("SERIAL_CONFIGURATION/STR_FLOW_CONTROL").toString();\par
   94     sett.endGroup();\par
   95 \par
   96     code.encryp(pth);\par
   97 \}\par
}
}
{\xe \v write_setting\:setting}
{\xe \v setting\:write_setting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_setting ({\b SettingsDialog} *  {\i s_d}, struct {\b t_serial_settings} *  {\i tSerial})}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8                                                                                  \{\par
    9     tSerial->name = s_d->ui->serialPortInfoListBox->currentText();\par
   10 \par
   11     if (s_d->ui->baudRateBox->currentIndex() == 4) \{\par
   12         tSerial->baudRate = s_d->ui->baudRateBox->currentText().toInt();\par
   13     \} else \{\par
   14         tSerial->baudRate = static_cast<QSerialPort::BaudRate>(\par
   15                     s_d->ui->baudRateBox->itemData(s_d->ui->baudRateBox->currentIndex()).toInt());\par
   16     \}\par
   17     tSerial->stringBaudRate = QString::number(tSerial->baudRate);\par
   18 \par
   19     tSerial->dataBits = static_cast<QSerialPort::DataBits>(\par
   20                 s_d->ui->dataBitsBox->itemData(s_d->ui->dataBitsBox->currentIndex()).toInt());\par
   21     tSerial->stringDataBits = s_d->ui->dataBitsBox->currentText();\par
   22 \par
   23     tSerial->parity = static_cast<QSerialPort::Parity>(\par
   24                 s_d->ui->parityBox->itemData(s_d->ui->parityBox->currentIndex()).toInt());\par
   25     tSerial->stringParity = s_d->ui->parityBox->currentText();\par
   26 \par
   27     tSerial->stopBits = static_cast<QSerialPort::StopBits>(\par
   28                 s_d->ui->stopBitsBox->itemData(s_d->ui->stopBitsBox->currentIndex()).toInt());\par
   29     tSerial->stringStopBits = s_d->ui->stopBitsBox->currentText();\par
   30 \par
   31     tSerial->flowControl = static_cast<QSerialPort::FlowControl>(\par
   32                 s_d->ui->flowControlBox->itemData(s_d->ui->flowControlBox->currentIndex()).toInt());\par
   33     tSerial->stringFlowControl = s_d->ui->flowControlBox->currentText();\par
   34 \par
   35     QString pth;\par
   36     pth = PATH_SERIAL_SETTING;\par
   37     cryp code; code.decryp(PATH_SERIAL_SETTING);\par
   38     QSettings sett(pth, QSettings::IniFormat);\par
   39 \par
   40     sett.beginGroup( "SERIAL_CONFIGURATION" );\par
   41     sett.setValue("NAME", tSerial->name);\par
   42     sett.setValue("BAUDRATE", tSerial->baudRate);\par
   43     sett.setValue("STR_BAUDRATE", tSerial->stringBaudRate);\par
   44     sett.setValue("DATA_BITS", tSerial->dataBits);\par
   45     sett.setValue("STR_DATA_BITS", tSerial->stringDataBits);\par
   46     sett.setValue("PARITY", tSerial->parity);\par
   47     sett.setValue("STR_PARITY", tSerial->stringParity);\par
   48     sett.setValue("STOP_BITS", tSerial->stopBits);\par
   49     sett.setValue("STR_STOP_BITS", tSerial->stringStopBits);\par
   50     sett.setValue("FLOW_CONTROL", tSerial->flowControl);\par
   51     sett.setValue("STR_FLOW_CONTROL", tSerial->stringFlowControl);\par
   52     sett.endGroup();\par
   53 \par
   54     code.encryp(PATH_SERIAL_SETTING);\par
   55 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b setting.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
model/{\b setting.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas SettingsDialog\par \pard\plain 
{\tc\tcl2 \v SettingsDialog}
{\xe \v SettingsDialog}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SettingsDialog} class. }}\par
{
{\f2 #include <settingsdialog.h>}}\par
Diagram hierarki kelas untuk SettingsDialog:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/df7/a00739.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagram kolaborasi untuk SettingsDialog:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/da6/a00738.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabel Data\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slot Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Privat\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atribut Privat\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SettingsDialog} class. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v SettingsDialog\:SettingsDialog}
{\xe \v SettingsDialog\:SettingsDialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SettingsDialog} (QWidget *  {\i parent} = {\f2 0}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SettingsDialog}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    12                                               :\par
   13     QDialog(parent),\par
   14     ui(new Ui::SettingsDialog)\par
   15 \{\par
   16     ui->setupUi(this);\par
   17 \par
   18     intValidator = new QIntValidator(0, 4000000, this);\par
   19 \par
   20     ui->baudRateBox->setInsertPolicy(QComboBox::NoInsert);\par
   21 \par
   22     connect(ui->applyButton, SIGNAL(clicked()), this, SLOT(apply()));\par
   23     \par
   24     connect(ui->serialPortInfoListBox, SIGNAL(currentIndexChanged(int)),\par
   25             this, SLOT(showPortInfo(int)));\par
   26     connect(ui->baudRateBox, SIGNAL(currentIndexChanged(int)),\par
   27             this, SLOT(checkCustomBaudRatePolicy(int)));\par
   28     connect(ui->serialPortInfoListBox, SIGNAL(currentIndexChanged(int)),\par
   29             this, SLOT(checkCustomDevicePathPolicy(int)));\par
   30 \par
   31     fillPortsParameters();\par
   32     fillPortsInfo();\par
   33 \par
   34     //updateSettings(tSerial);\par
   35 \}\par
}
}
{\xe \v ~SettingsDialog\:SettingsDialog}
{\xe \v SettingsDialog\:~SettingsDialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
~{\b SettingsDialog} ()}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38 \{\par
   39 //    Serial->serial_set = 0;\par
   40 //    currentSettings.serial_set = 0;\par
   41     delete ui;\par
   42 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v apply\:SettingsDialog}
{\xe \v SettingsDialog\:apply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void apply (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
apply }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    64 \{\par
   65     struct t_serial_settings tSerial;\par
   66     updateSettings(&tSerial);\par
   67 \par
   68     this->accept();\par
   69 \par
   70 //    Serial->serial_set = 1;\par
   71 //    currentSettings.serial_set = 1;\par
   72 //    close();\par
   73 //    hide();\par
   74 \}\par
}
}
{\xe \v checkCustomBaudRatePolicy\:SettingsDialog}
{\xe \v SettingsDialog\:checkCustomBaudRatePolicy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void checkCustomBaudRatePolicy (int  {\i idx}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
checkCustomBaudRatePolicy }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idx} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    77 \{\par
   78     bool isCustomBaudRate = !ui->baudRateBox->itemData(idx).isValid();\par
   79     ui->baudRateBox->setEditable(isCustomBaudRate);\par
   80     if (isCustomBaudRate) \{\par
   81         ui->baudRateBox->clearEditText();\par
   82         QLineEdit *edit = ui->baudRateBox->lineEdit();\par
   83         edit->setValidator(intValidator);\par
   84     \}\par
   85 \}\par
}
}
{\xe \v checkCustomDevicePathPolicy\:SettingsDialog}
{\xe \v SettingsDialog\:checkCustomDevicePathPolicy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void checkCustomDevicePathPolicy (int  {\i idx}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
checkCustomDevicePathPolicy }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idx} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    88 \{\par
   89     bool isCustomPath = !ui->serialPortInfoListBox->itemData(idx).isValid();\par
   90     ui->serialPortInfoListBox->setEditable(isCustomPath);\par
   91     if (isCustomPath)\par
   92         ui->serialPortInfoListBox->clearEditText();\par
   93 \}\par
}
}
{\xe \v fillPortsInfo\:SettingsDialog}
{\xe \v SettingsDialog\:fillPortsInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fillPortsInfo (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fillPortsInfo }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   139 \{\par
  140     ui->serialPortInfoListBox->clear();\par
  141     QString description;\par
  142     QString manufacturer;\par
  143     QString serialNumber;\par
  144     foreach (const QSerialPortInfo &info, QSerialPortInfo::availablePorts()) \{\par
  145         QStringList list;\par
  146         description = info.description();\par
  147         manufacturer = info.manufacturer();\par
  148 //        serialNumber = info.serialNumber();\par
  149         list << info.portName()\par
  150              << (!description.isEmpty() ? description : blankString)\par
  151              << (!manufacturer.isEmpty() ? manufacturer : blankString)\par
  152              << (!serialNumber.isEmpty() ? serialNumber : blankString)\par
  153              << info.systemLocation()\par
  154              << (info.vendorIdentifier() ? QString::number(info.vendorIdentifier(), 16) : blankString)\par
  155              << (info.productIdentifier() ? QString::number(info.productIdentifier(), 16) : blankString);\par
  156 \par
  157         ui->serialPortInfoListBox->addItem(list.first(), list);\par
  158     \}\par
  159 \par
  160     ui->serialPortInfoListBox->addItem(tr("Custom"));\par
  161 \}\par
}
}
{\xe \v fillPortsParameters\:SettingsDialog}
{\xe \v SettingsDialog\:fillPortsParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fillPortsParameters (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fillPortsParameters }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    96 \{\par
   97     ui->baudRateBox->addItem(QStringLiteral("9600"), QSerialPort::Baud9600);\par
   98     ui->baudRateBox->addItem(QStringLiteral("19200"), QSerialPort::Baud19200);\par
   99     ui->baudRateBox->addItem(QStringLiteral("38400"), QSerialPort::Baud38400);\par
  100     ui->baudRateBox->addItem(QStringLiteral("115200"), QSerialPort::Baud115200);\par
  101 \par
  102     ui->dataBitsBox->addItem(QStringLiteral("5"), QSerialPort::Data5);\par
  103     ui->dataBitsBox->addItem(QStringLiteral("6"), QSerialPort::Data6);\par
  104     ui->dataBitsBox->addItem(QStringLiteral("7"), QSerialPort::Data7);\par
  105     ui->dataBitsBox->addItem(QStringLiteral("8"), QSerialPort::Data8);\par
  106     ui->dataBitsBox->setCurrentIndex(3);\par
  107 \par
  108     ui->parityBox->addItem(tr("None"), QSerialPort::NoParity);\par
  109     ui->parityBox->addItem(tr("Even"), QSerialPort::EvenParity);\par
  110     ui->parityBox->addItem(tr("Odd"), QSerialPort::OddParity);\par
  111     ui->parityBox->addItem(tr("Mark"), QSerialPort::MarkParity);\par
  112     ui->parityBox->addItem(tr("Space"), QSerialPort::SpaceParity);\par
  113 \par
  114     ui->stopBitsBox->addItem(QStringLiteral("1"), QSerialPort::OneStop);\par
  115 #ifdef Q_OS_WIN\par
  116     ui->stopBitsBox->addItem(tr("1.5"), QSerialPort::OneAndHalfStop);\par
  117 #endif\par
  118     ui->stopBitsBox->addItem(QStringLiteral("2"), QSerialPort::TwoStop);\par
  119 \par
  120     ui->flowControlBox->addItem(tr("None"), QSerialPort::NoFlowControl);\par
  121     ui->flowControlBox->addItem(tr("RTS/CTS"), QSerialPort::HardwareControl);\par
  122     ui->flowControlBox->addItem(tr("XON/XOFF"), QSerialPort::SoftwareControl);\par
  123 \par
  124     if (Setting->checkSetting())\par
  125     \{\par
  126         struct t_serial_settings tSerial;\par
  127         Setting->read_setting(&tSerial);\par
  128 \par
  129 //        ui->serialPortInfoListBox->currentText(tSerial.name);\par
  130         ui->baudRateBox->currentData(tSerial.baudRate);\par
  131         ui->dataBitsBox->currentData(tSerial.dataBits);\par
  132         ui->parityBox->currentData(tSerial.parity);\par
  133         ui->stopBitsBox->currentData(tSerial.stopBits);\par
  134         ui->flowControlBox->currentData(tSerial.flowControl);\par
  135     \}\par
  136 \}\par
}
}
{\xe \v fillSettings\:SettingsDialog}
{\xe \v SettingsDialog\:fillSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fillSettings (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fillSettings }}\par
}
{\xe \v showPortInfo\:SettingsDialog}
{\xe \v SettingsDialog\:showPortInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showPortInfo (int  {\i idx}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
showPortInfo }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idx} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    50 \{\par
   51     if (idx == -1)\par
   52         return;\par
   53 \par
   54     QStringList list = ui->serialPortInfoListBox->itemData(idx).toStringList();\par
   55     ui->descriptionLabel->setText(tr("Description: %1").arg(list.count() > 1 ? list.at(1) : tr(blankString)));\par
   56     ui->manufacturerLabel->setText(tr("Manufacturer: %1").arg(list.count() > 2 ? list.at(2) : tr(blankString)));\par
   57     ui->serialNumberLabel->setText(tr("Serial number: %1").arg(list.count() > 3 ? list.at(3) : tr(blankString)));\par
   58     ui->locationLabel->setText(tr("Location: %1").arg(list.count() > 4 ? list.at(4) : tr(blankString)));\par
   59     ui->vidLabel->setText(tr("Vendor Identifier: %1").arg(list.count() > 5 ? list.at(5) : tr(blankString)));\par
   60     ui->pidLabel->setText(tr("Product Identifier: %1").arg(list.count() > 6 ? list.at(6) : tr(blankString)));\par
   61 \}\par
}
}
{\xe \v updateSettings\:SettingsDialog}
{\xe \v SettingsDialog\:updateSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateSettings (struct {\b t_serial_settings} *  {\i tSerial}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
updateSettings }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tSerial} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   164 \{\par
  165     if (Setting->checkSetting())\par
  166         Setting->read_setting(tSerial);\par
  167 \par
  168     Setting->write_setting(this, tSerial);\par
  169     cryp code; code.encryp(PATH_SERIAL_SETTING);\par
  170 \par
  171 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v intValidator\:SettingsDialog}
{\xe \v SettingsDialog\:intValidator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QIntValidator* intValidator{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
intValidator }}\par
}
{\xe \v Main\:SettingsDialog}
{\xe \v SettingsDialog\:Main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MainWindow}* Main}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main. }}\par
}
{\xe \v Serial\:SettingsDialog}
{\xe \v SettingsDialog\:Serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b serial}* Serial}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial. }}\par
}
{\xe \v Setting\:SettingsDialog}
{\xe \v SettingsDialog\:Setting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b setting}* Setting}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setting. }}\par
}
{\xe \v ui\:SettingsDialog}
{\xe \v SettingsDialog\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::SettingsDialog* ui}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ui }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b settingsdialog.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
view/{\b settingsdialog.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi Kelas worker\par \pard\plain 
{\tc\tcl2 \v worker}
{\xe \v worker}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class worker. }}\par
{
{\f2 #include <worker.h>}}\par
Diagram kolaborasi untuk worker:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/df1/a00662.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fungsi Anggota Publik\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabel Data\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Keterangan Lengkap\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class worker. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Konstruktor & Destruktor\par
\pard\plain 
{\xe \v worker\:worker}
{\xe \v worker\:worker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b worker} ()}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
worker }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4 \{\par
    5 //    cancelSetting = false;\par
    6 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Anggota: Fungsi\par
\pard\plain 
{\xe \v check_statusModule\:worker}
{\xe \v worker\:check_statusModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString check_statusModule (QString  {\i address})}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check_statusModule }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    71                                                  \{\par
   72     struct t_module tModule;\par
   73 \par
   74     address.sprintf(".RTUdata/module/%s", address.toUtf8().data());\par
   75 \par
   76     mod.read_module(&tModule, address);\par
   77 \par
   78     QString modules;\par
   79     if(tModule.flag_active)\{\par
   80         modules.sprintf("m_%s.dbe", tModule.module_name);\par
   81         return modules;\par
   82     \}\par
   83     return "none";\par
   84 \}\par
}
}
{\xe \v checkIfmodule\:worker}
{\xe \v worker\:checkIfmodule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkIfmodule (QString  {\i name})}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
checkIfmodule }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   108                                       \{\par
  109     bool cek = false;\par
  110     QDir path(".RTUdata/module");\par
  111     QStringList files = path.entryList(QDir::Files);\par
  112 \par
  113     QString currFiles;\par
  114     currFiles.sprintf("m_%s.dbe", name.toUtf8().data());\par
  115 \par
  116     for(int i = 0; i < files.count(); i++)\{\par
  117         if(currFiles == QString(files.at(i))) cek = true;\par
  118     \}\par
  119 \par
  120 //    std::string sub = name.toStdString();\par
  121 //    ext = QString::fromStdString(sub.substr(index_max-3, index_max));\par
  122 \par
  123 //    if(ext == ".dbe") return true;\par
  124 //    else return false;\par
  125 \par
  126     return cek;\par
  127 \}\par
}
}
{\xe \v checkModule\:worker}
{\xe \v worker\:checkModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString checkModule (QString  {\i address})}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
checkModule }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    61                                           \{\par
   62     struct t_module tModule;\par
   63 \par
   64     mod.read_module(&tModule, address);\par
   65 \par
   66     QString modules;\par
   67     modules.sprintf("m_%s.dbe", tModule.module_name);\par
   68     return modules;\par
   69 \}\par
}
}
{\xe \v CompressDir\:worker}
{\xe \v worker\:CompressDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CompressDir (QString  {\i ZipFile}, QString  {\i Directory})}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CompressDir. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ZipFile} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Directory} \cell }{\cell }
{\row }
}
}}
{\xe \v CompressFiles\:worker}
{\xe \v worker\:CompressFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CompressFiles (QString  {\i ZipFile}, QStringList  {\i Files})}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CompressFiles. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ZipFile} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Files} \cell }{\cell }
{\row }
}
}}
{\xe \v DecompressDir\:worker}
{\xe \v worker\:DecompressDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DecompressDir (QString  {\i ZipFile}, QString  {\i Directory})}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DecompressDir. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ZipFile} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Directory} \cell }{\cell }
{\row }
}
}}
{\xe \v DecompressFiles\:worker}
{\xe \v worker\:DecompressFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DecompressFiles (QString  {\i ZipFile}, QStringList  {\i Files}, QString  {\i Directory})}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DecompressFiles. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ZipFile} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Files} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Directory} \cell }{\cell }
{\row }
}
}}
{\xe \v delay\:worker}
{\xe \v worker\:delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void delay (int  {\i ms})}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   166 \{\par
  167     QTime dieTime = QTime::currentTime().addMSecs(ms);\par
  168     while (QTime::currentTime() < dieTime) \{\par
  169         QCoreApplication::processEvents(QEventLoop::AllEvents, 100);\par
  170     \}\par
  171 \}\par
}
}
{\xe \v editModule\:worker}
{\xe \v worker\:editModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString editModule (QStandardItemModel *  {\i tree}, QTreeView *  {\i treeView}, QString  {\i title})}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
editModule }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tree} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i treeView} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i title} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    24                                                                                       \{\par
   25     struct t_module tModule;\par
   26     QString address;\par
   27 \par
   28     address.sprintf(".RTUdata/module/m_%s.dbe", title.toUtf8().data());\par
   29 \par
   30     mod.read_module(&tModule, address);\par
   31 \par
   32     QString modules;\par
   33     modules.sprintf("%s", tModule.module_name);\par
   34 //    modules.sprintf("m_%s.dbe", tModule.module_name);\par
   35     mTree.appendItem(tree, treeView, modules);\par
   36 \par
   37     return modules;\par
   38 \}\par
}
}
{\xe \v ListContents\:worker}
{\xe \v worker\:ListContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList ListContents (QString  {\i ZipFile})}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ListContents. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ZipFile} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v loadModule\:worker}
{\xe \v worker\:loadModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString loadModule (QStandardItemModel *  {\i tree}, QTreeView *  {\i treeView}, QString  {\i address}, QString  {\i NewName})}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
loadModule }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tree} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i treeView} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i NewName} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40                                                                                                          \{\par
   41     struct t_module tModule;\par
   42 \par
   43     mod.read_module(&tModule, address);\par
   44 \par
   45     tModule.flag_active = 1;\par
   46 \par
   47     if (!NewName.isEmpty()) \{\par
   48         strcpy(tModule.module_name, NewName.toLatin1());\par
   49     \}\par
   50     mod.write_module(&tModule);\par
   51     cryp code; code.encryp(address);\par
   52 \par
   53     QString modules;\par
   54     modules.sprintf("%s [%s]", tModule.module_name, tModule.serial_number);\par
   55 //    modules.sprintf("m_%s.dbe", tModule.module_name);\par
   56     mTree.appendItem(tree, treeView, modules);\par
   57 \par
   58     return modules;\par
   59 \}\par
}
}
{\xe \v newModule\:worker}
{\xe \v worker\:newModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString newModule (QStandardItemModel *  {\i tree}, QTreeView *  {\i treeView}, QString  {\i title})}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
newModule }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tree} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i treeView} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i title} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8                                                                                      \{\par
    9     struct t_module tModule;\par
   10     QString address;\par
   11 \par
   12     address.sprintf(".RTUdata/module/m_%s.dbe", title.toUtf8().data());\par
   13 \par
   14     mod.read_module(&tModule, address);\par
   15 \par
   16     QString modules;\par
   17     modules.sprintf("%s [%s]", tModule.module_name, tModule.serial_number);\par
   18 //    modules.sprintf("m_%s.dbe", tModule.module_name);\par
   19     mTree.appendItem(tree, treeView, modules);\par
   20 \par
   21     return modules;\par
   22 \}\par
}
}
{\xe \v read_FinishRead\:worker}
{\xe \v worker\:read_FinishRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool read_FinishRead ()}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read_FinishRead }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   214 \{\par
  215     QString pth;\par
  216     pth = PATH_SERIAL_PARSING;\par
  217     cryp code; code.decryp(pth);\par
  218     QSettings sett(pth, QSettings::IniFormat);\par
  219 \par
  220     bool FinishRead = sett.value("FINISH_READ").toBool();\par
  221 \par
  222     code.encryp(pth);\par
  223     return FinishRead;\par
  224 \}\par
}
}
{\xe \v read_flagERR\:worker}
{\xe \v worker\:read_flagERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int read_flagERR ()}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read_flagERR }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   227 \{\par
  228     QString pth;\par
  229     pth = PATH_SERIAL_PARSING;\par
  230     cryp code; code.decryp(pth);\par
  231     QSettings sett(pth, QSettings::IniFormat);\par
  232 \par
  233     int flagERR = sett.value("ERROR_FLAG").toInt();\par
  234 \par
  235     code.encryp(pth);\par
  236     return flagERR;\par
  237 \}\par
}
}
{\xe \v read_strERR\:worker}
{\xe \v worker\:read_strERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString read_strERR ()}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read_strERR }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   240 \{\par
  241     QString pth;\par
  242     pth = PATH_SERIAL_PARSING;\par
  243     cryp code; code.decryp(pth);\par
  244     QSettings sett(pth, QSettings::IniFormat);\par
  245 \par
  246     QString strERR = sett.value("ERROR_STRING").toString();\par
  247 \par
  248     code.encryp(pth);\par
  249     return strERR;\par
  250 \}\par
}
}
{\xe \v Request_ENV\:worker}
{\xe \v worker\:Request_ENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Request_ENV (QSerialPort *  {\i Serial_Com}, bool  {\i timeout} = {\f2 false})}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request_ENV. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Serial_Com} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i timeout} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   151 \{\par
  152 //    QString Request = "hmi_cek_env\\r\\n";\par
  153     QString Request = "0000";\par
  154     QString Desc = "Request Environment ..";\par
  155     serial_write(Serial_Com, Request, WAIT_WRITE);\par
  156 //    Serial_Com->write(Request.toUtf8().data(), qstrlen(Request.toUtf8().data()));\par
  157 //    Serial_Com->waitForBytesWritten(WAIT_WRITE);\par
  158     if (!timeout) \{timeout = this->waiting_set(timeout);\}\par
  159     this->writeLogFile(Request, this->read_flagERR(), this->read_strERR(), timeout);\par
  160     if (timeout) \{return timeout;\}\par
  161 \par
  162     return timeout;\par
  163 \}\par
}
}
{\xe \v serial_write\:worker}
{\xe \v worker\:serial_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void serial_write (QSerialPort *  {\i Serial_Com}, QString  {\i data}, int  {\i d_c})}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
serial_write }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Serial_Com} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i d_c} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   174 \{\par
  175     QString temp;\par
  176     data.remove("\\r\\n");\par
  177     for (int i = 0; i < data.length(); i++) \{\par
  178         temp = QChar(data.at(i));\par
  179         Serial_Com->write(temp.toUtf8().data());\par
  180         delay(d_c);\par
  181     \}\par
  182     Serial_Com->write("\\n");\par
  183 \}\par
}
}
{\xe \v showModule\:worker}
{\xe \v worker\:showModule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showModule (QWidget *  {\i parent}, QMdiArea *  {\i mdiArea}, QString  {\i module}, QSerialPort *  {\i SerialPort})}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
showModule }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mdiArea} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i module} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SerialPort} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    86                                                                                                   \{\par
   87     struct t_module tModule;\par
   88     QString address;\par
   89 \par
   90     address.sprintf(".RTUdata/module/m_%s.dbe", module.toUtf8().data());\par
   91     mod.read_module(&tModule, address);\par
   92 \par
   93 \par
   94     formModule *fModule;\par
   95 \par
   96     fModule = new formModule(parent, address, SerialPort);\par
   97     fModule->setModal(true);\par
   98     fModule->setWindowTitle(tModule.module_name);\par
   99 //    fModule->setFixedWidth(800);\par
  100 //    fModule->setFixedHeight(600);\par
  101     fModule->setMaximumSize(mdiArea->maximumSize());\par
  102 \par
  103     mdiArea->addSubWindow(fModule, 0);\par
  104     fModule->exec();\par
  105 \par
  106 \}\par
}
}
{\xe \v state_of_module\:worker}
{\xe \v worker\:state_of_module}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool state_of_module (int  {\i num}, QString  {\i newModule}, QString *  {\i existModule})}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
state_of_module }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i num} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newModule} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i existModule} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   129                                                                             \{\par
  130     bool cek;\par
  131     int  ceknt = num+1;\par
  132 //    QString currModule;\par
  133     existModule->prepend("m_").append(".dbe");\par
  134 \par
  135     for(int n = 0; n < ceknt; n++)\{\par
  136 //        currModule = existModule->at(n);\par
  137 //        currModule.prepend("m_").append(".dbe");\par
  138         if(newModule != existModule[n])\{\par
  139             cek = true;\par
  140         \}\par
  141         else\{\par
  142             cek = false;\par
  143             return cek;\par
  144         \}\par
  145     \}\par
  146 \par
  147     return cek;\par
  148 \}\par
}
}
{\xe \v waiting_set\:worker}
{\xe \v worker\:waiting_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool waiting_set (bool  {\i timeout} = {\f2 false})}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
waiting_set }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i timeout} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Mengembalikan:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   186 \{\par
  187     QTime dieTime = QTime::currentTime().addMSecs(TIMEOUT);\par
  188     while (!this->read_FinishRead()) \{\par
  189         QCoreApplication::processEvents(QEventLoop::AllEvents, 100);\par
  190         if (this->read_flagERR() == 1 && !timeout) \{\par
  191             timeout = false;\par
  192             break;\par
  193         \}\par
  194         if (QTime::currentTime() >= dieTime && !timeout) \{\par
  195             timeout = true;\par
  196             break;\par
  197         \}\par
  198     \}\par
  199     return timeout;\par
  200 \}\par
}
}
{\xe \v write_FinishRead\:worker}
{\xe \v worker\:write_FinishRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_FinishRead (bool  {\i FinishRead}, int  {\i cekErr}, QString  {\i strErr})}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write_FinishRead }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FinishRead} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cekErr} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i strErr} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   203 \{\par
  204     QString pth;\par
  205     pth = PATH_SERIAL_PARSING;\par
  206     QSettings sett(pth, QSettings::IniFormat);\par
  207 \par
  208     sett.setValue("FINISH_READ", FinishRead);\par
  209     sett.setValue("ERROR_FLAG", cekErr);\par
  210     sett.setValue("ERROR_STRING", strErr);\par
  211 \}\par
}
}
{\xe \v writeLogFile\:worker}
{\xe \v worker\:writeLogFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeLogFile (QString  {\i log}, int  {\i flagERR}, QString  {\i strERR}, bool  {\i timeout})}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writeLogFile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i log} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i flagERR} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i strERR} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i timeout} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   253 \{\par
  254     /* Try and open a file for output */\par
  255     QString outputFilename = PATH_LOG;\par
  256     QFile outputFile(outputFilename);\par
  257     outputFile.open(QIODevice::Append | QIODevice::Text);\par
  258 \par
  259     /* Check it opened OK */\par
  260     if(!outputFile.isOpen())\{\par
  261         qDebug() << "- Error, unable to open" << outputFilename << "for output";\par
  262     \} else \{\par
  263         log.remove("\\r").remove("\\n");\par
  264         if (log.length() < 100) \{\par
  265             for (int i = log.length(); i < 100; i++) \{\par
  266                 log.append(" ");\par
  267             \}\par
  268         \}\par
  269         log.append("|");\par
  270 \par
  271         QString Flag;\par
  272         if      (flagERR == 1) \{Flag = "ERROR|";\}\par
  273         else if (flagERR == 0) \{Flag = "OK   |";\}\par
  274         else                   \{Flag = "     |";\}\par
  275 \par
  276         QString TimeOut;\par
  277         if      (timeout) \{TimeOut = "TIMEOUT|";\}\par
  278         else              \{TimeOut = "       |";\}\par
  279 \par
  280         /* Point a QTextStream object at the file */\par
  281         QTextStream outStream(&outputFile);\par
  282 \par
  283         /* Write the line to the file */\par
  284         outStream << QTime::currentTime().toString("hh:mm:ss.zzz") << " | " << log << Flag << TimeOut << strERR<< "\\r\\n";\par
  285 \par
  286         /* Close the file */\par
  287         outputFile.close();\par
  288     \}\par
  289     this->write_FinishRead(false,2,"");\par
  290     cryp code; code.encryp(PATH_SERIAL_PARSING);\par
  291 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Variabel\par
\pard\plain 
{\xe \v mod\:worker}
{\xe \v worker\:mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b module} mod}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mod }}\par
}
{\xe \v mTree\:worker}
{\xe \v worker\:mTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mTreeview} mTree}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mTree }}\par
}
{\xe \v Serial\:worker}
{\xe \v worker\:Serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b serial}* Serial}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial. }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Dokumentasi untuk kelas ini dibangkitkan dari file-file berikut:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
controller/{\b worker.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
controller/{\b worker.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Dokumentasi File{\tc \v Dokumentasi File}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File controller/worker.cpp\par \pard\plain 
{\tc\tcl2 \v controller/worker.cpp}
{\xe \v controller/worker.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File controller/worker.h\par \pard\plain 
{\tc\tcl2 \v controller/worker.h}
{\xe \v controller/worker.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b worker}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class worker. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File main.cpp\par \pard\plain 
{\tc\tcl2 \v main.cpp}
{\xe \v main.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Fungsi\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FOR DEPLOY \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     6 \{\par
    7     QApplication a(argc, argv);\par
    9 \par
   10 //    QApplication::setLibraryPaths(QStringList("/usr/lib/x86_64-linux-gnu"));\par
   11 //    QString Path_Plugins = QLibraryInfo::location(QLibraryInfo::PrefixPath);\par
   12 //    qDebug() << "Path_Plugins = " + Path_Plugins;\par
   13 //    QString qt_conf_path =  QCoreApplication::applicationDirPath() + QDir::separator() + "qt.conf";\par
   15     loginForm l;\par
   16     //Comment Baru\par
   17     l.show();\par
   18 \par
   19     return a.exec();\par
   20 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/communication/gprs.cpp\par \pard\plain 
{\tc\tcl2 \v model/communication/gprs.cpp}
{\xe \v model/communication/gprs.cpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/communication/gprs.h\par \pard\plain 
{\tc\tcl2 \v model/communication/gprs.h}
{\xe \v model/communication/gprs.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b gprs}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/communication/gsm.cpp\par \pard\plain 
{\tc\tcl2 \v model/communication/gsm.cpp}
{\xe \v model/communication/gsm.cpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/communication/gsm.h\par \pard\plain 
{\tc\tcl2 \v model/communication/gsm.h}
{\xe \v model/communication/gsm.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b gsm}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/communication/serial.cpp\par \pard\plain 
{\tc\tcl2 \v model/communication/serial.cpp}
{\xe \v model/communication/serial.cpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/communication/serial.h\par \pard\plain 
{\tc\tcl2 \v model/communication/serial.h}
{\xe \v model/communication/serial.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b serial}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The serial class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/config.cpp\par \pard\plain 
{\tc\tcl2 \v model/config.cpp}
{\xe \v model/config.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/config.h\par \pard\plain 
{\tc\tcl2 \v model/config.h}
{\xe \v model/config.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b config}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/cryp.cpp\par \pard\plain 
{\tc\tcl2 \v model/cryp.cpp}
{\xe \v model/cryp.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/cryp.h\par \pard\plain 
{\tc\tcl2 \v model/cryp.h}
{\xe \v model/cryp.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b cryp}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/debug.cpp\par \pard\plain 
{\tc\tcl2 \v model/debug.cpp}
{\xe \v model/debug.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File util/debug.cpp\par \pard\plain 
{\tc\tcl2 \v util/debug.cpp}
{\xe \v util/debug.cpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/debug.h\par \pard\plain 
{\tc\tcl2 \v model/debug.h}
{\xe \v model/debug.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File util/debug.h\par \pard\plain 
{\tc\tcl2 \v util/debug.h}
{\xe \v util/debug.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/interface_manipulator/mtreeview.cpp\par \pard\plain 
{\tc\tcl2 \v model/interface_manipulator/mtreeview.cpp}
{\xe \v model/interface_manipulator/mtreeview.cpp}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/interface_manipulator/mtreeview.h\par \pard\plain 
{\tc\tcl2 \v model/interface_manipulator/mtreeview.h}
{\xe \v model/interface_manipulator/mtreeview.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b mTreeview}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b mTreeview} class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/interface_manipulator/qlightboxwidget.cpp\par \pard\plain 
{\tc\tcl2 \v model/interface_manipulator/qlightboxwidget.cpp}
{\xe \v model/interface_manipulator/qlightboxwidget.cpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/interface_manipulator/qlightboxwidget.h\par \pard\plain 
{\tc\tcl2 \v model/interface_manipulator/qlightboxwidget.h}
{\xe \v model/interface_manipulator/qlightboxwidget.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QLightBoxWidget}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
overlap class }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/module.cpp\par \pard\plain 
{\tc\tcl2 \v model/module.cpp}
{\xe \v model/module.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/module.h\par \pard\plain 
{\tc\tcl2 \v model/module.h}
{\xe \v model/module.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b module}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The module class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/setting.cpp\par \pard\plain 
{\tc\tcl2 \v model/setting.cpp}
{\xe \v model/setting.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/setting.h\par \pard\plain 
{\tc\tcl2 \v model/setting.h}
{\xe \v model/setting.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b setting}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File model/utama.h\par \pard\plain 
{\tc\tcl2 \v model/utama.h}
{\xe \v model/utama.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File util/utama.h\par \pard\plain 
{\tc\tcl2 \v util/utama.h}
{\xe \v util/utama.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_port}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b data_port} struct. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b t_module}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b t_module} struct. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b t_serial_settings}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b t_serial_settings} struct. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Tipe Data\par
\pard\plain 
{\xe \v data_port}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_port\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b data_port} struct. \par
}}
Diagram kolaborasi untuk data_port:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/dcb/a00706.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Variabel Data:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\cell }{calib_m\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calib_m }\cell }{\row }
{\qr float{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{calib_x\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calib_x }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\cell }{control\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
control }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\cell }{nama_input[64]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
nama_input }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\cell }{nama_output[64]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
nama_output }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{reg_output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reg_output }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\cell }{status_input\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status_input }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{status_output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status_output }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\cell }{type_input\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
type_input }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\cell }{type_output[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
type_output }\cell }{\row }
}
{\xe \v t_module}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct t_module\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b t_module} struct. \par
}}
Diagram kolaborasi untuk t_module:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/deb/a00710.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Variabel Data:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr QStringList{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\cell }{alarm\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
alarm }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\cell }{apn_gsm_1[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
apn_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\cell }{apn_gsm_2[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
apn_gsm_2 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\cell }{com_gsm_1[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
com_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\cell }{com_gsm_2[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
com_gsm_2 }\cell }{\row }
{\qr struct {\b data_port}{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\cell }{d_port[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
d_port }\cell }{\row }
{\qr QStringList{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\cell }{data\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\cell }{device_name_gsm_1[64]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
device_name_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\cell }{device_name_gsm_2[64]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
device_name_gsm_2 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\cell }{file_address[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
file_address }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\cell }{flag_active\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_active }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\cell }{flag_com_gsm_1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_com_gsm_1 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\cell }{flag_com_gsm_2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_com_gsm_2 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\cell }{flag_dual_gsm\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_dual_gsm }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\cell }{flag_gsm_1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_gsm_1 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\cell }{flag_gsm_2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_gsm_2 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\cell }{flag_mode_http\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_mode_http }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\cell }{flag_status_active_gsm_1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_status_active_gsm_1 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\cell }{flag_status_active_gsm_2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_status_active_gsm_2 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\cell }{flag_webclient\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flag_webclient }\cell }{\row }
{\qr QStringList{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\cell }{Input\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input. }\cell }{\row }
{\qr QStringList{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\cell }{InputName\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
InputName. }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\cell }{interval_data\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
interval_data }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\cell }{interval_relay\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
interval_relay }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\cell }{ip_address[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ip_address }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\cell }{jml_alarm\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
jml_alarm }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\cell }{jml_data\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
jml_data }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\cell }{jml_input_analog\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
jml_input_analog }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\cell }{jml_input_digital\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
jml_input_digital }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\cell }{jml_output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
jml_output }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\cell }{jml_sumber\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
jml_sumber }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\cell }{last_signal\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
last_signal }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\cell }{mode_http[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mode_http }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\cell }{module_name[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
module_name }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\cell }{name_gsm_1[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\cell }{name_gsm_2[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name_gsm_2 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\cell }{number_gsm_1[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\cell }{number_gsm_2[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number_gsm_2 }\cell }{\row }
{\qr QStringList{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\cell }{Output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output. }\cell }{\row }
{\qr QStringList{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\cell }{OutputName\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OutputName. }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\cell }{passwd_gsm_1[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
passwd_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\cell }{passwd_gsm_2[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
passwd_gsm_2 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\cell }{port\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
port }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\cell }{serial_number[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
serial_number }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\cell }{server_address[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
server_address }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\cell }{status_gsm_1[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\cell }{status_gsm_2[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status_gsm_2 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\cell }{status_webclient[32]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status_webclient }\cell }{\row }
{\qr QStringList{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\cell }{sumber\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sumber }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\cell }{user_gsm_1[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
user_gsm_1 }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\cell }{user_gsm_2[16]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
user_gsm_2 }\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\cell }{utc\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
utc }\cell }{\row }
}
{\xe \v t_serial_settings}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct t_serial_settings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b t_serial_settings} struct. \par
}}
Diagram kolaborasi untuk t_serial_settings:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d96/a00714.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Variabel Data:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr qint32{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\cell }{baudRate\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
baudRate }\cell }{\row }
{\qr DataBits{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\cell }{dataBits\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dataBits }\cell }{\row }
{\qr FlowControl{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\cell }{flowControl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
flowControl }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\cell }{name\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
name }\cell }{\row }
{\qr Parity{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\cell }{parity\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
parity }\cell }{\row }
{\qr StopBits{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\cell }{stopBits\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stopBits }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\cell }{str_data_dat\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str_data_dat }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\cell }{str_data_env\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str_data_env }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\cell }{str_data_io\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str_data_io }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\cell }{str_data_sim\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str_data_sim }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\cell }{str_data_src\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
str_data_src }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\cell }{stringBaudRate\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stringBaudRate }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\cell }{stringDataBits\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stringDataBits }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\cell }{stringFlowControl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stringFlowControl }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\cell }{stringParity\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stringParity }\cell }{\row }
{\qr QString{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\cell }{stringStopBits\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stringStopBits }\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File qrc_image.cpp\par \pard\plain 
{\tc\tcl2 \v qrc_image.cpp}
{\xe \v qrc_image.cpp}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentasi Fungsi\par
\pard\plain 
{\xe \v qCleanupResources_image\:qrc_image.cpp}
{\xe \v qrc_image.cpp\:qCleanupResources_image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QT_RCC_MANGLE_NAMESPACE() qCleanupResources_image ()}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28153 \{\par
28154     QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)\par
28155        (0x01, qt_resource_struct, qt_resource_name, qt_resource_data);\par
28156     return 1;\par
28157 \}\par
}
}
{\xe \v qInitResources_image\:qrc_image.cpp}
{\xe \v qrc_image.cpp\:qInitResources_image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QT_RCC_MANGLE_NAMESPACE() qInitResources_image ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28145 \{\par
28146     QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)\par
28147         (0x01, qt_resource_struct, qt_resource_name, qt_resource_data);\par
28148     return 1;\par
28149 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/form_addmodule.cpp\par \pard\plain 
{\tc\tcl2 \v view/form_addmodule.cpp}
{\xe \v view/form_addmodule.cpp}
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/form_addmodule.h\par \pard\plain 
{\tc\tcl2 \v view/form_addmodule.h}
{\xe \v view/form_addmodule.h}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b form_addModule}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b form_addModule} class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/formmodule.cpp\par \pard\plain 
{\tc\tcl2 \v view/formmodule.cpp}
{\xe \v view/formmodule.cpp}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/formmodule.h\par \pard\plain 
{\tc\tcl2 \v view/formmodule.h}
{\xe \v view/formmodule.h}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b formModule}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b formModule} class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/loginform.cpp\par \pard\plain 
{\tc\tcl2 \v view/loginform.cpp}
{\xe \v view/loginform.cpp}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/loginform.h\par \pard\plain 
{\tc\tcl2 \v view/loginform.h}
{\xe \v view/loginform.h}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b loginForm}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b loginForm} class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/mainwindow.cpp\par \pard\plain 
{\tc\tcl2 \v view/mainwindow.cpp}
{\xe \v view/mainwindow.cpp}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/mainwindow.h\par \pard\plain 
{\tc\tcl2 \v view/mainwindow.h}
{\xe \v view/mainwindow.h}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MainWindow}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b MainWindow} class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/progressdialog.cpp\par \pard\plain 
{\tc\tcl2 \v view/progressdialog.cpp}
{\xe \v view/progressdialog.cpp}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/progressdialog.h\par \pard\plain 
{\tc\tcl2 \v view/progressdialog.h}
{\xe \v view/progressdialog.h}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ProgressDialog}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b ProgressDialog} class. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/settingsdialog.cpp\par \pard\plain 
{\tc\tcl2 \v view/settingsdialog.cpp}
{\xe \v view/settingsdialog.cpp}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referensi File view/settingsdialog.h\par \pard\plain 
{\tc\tcl2 \v view/settingsdialog.h}
{\xe \v view/settingsdialog.h}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Struktur Data\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SettingsDialog}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SettingsDialog} class. }}}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Indeks\par 
\pard\plain 
{\tc \v Indeks}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}